// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\layout.tsx
// --------------------
// File: src/app/layout.tsx
import RootProvider from "@/lib/provider/RootProvider";
import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";
import { Inter } from "next/font/google";
import { ReactNode } from "react";
import { Toaster } from "sonner";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: {
    template: "%s - Sohoz Nikah",
    absolute: "Sohoz Nikah",
  },
  description:
    "Sohoz Nikah is the easiest way to create and search life partners.",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={inter.className}>
        <RootProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
            <Toaster />
          </ThemeProvider>
        </RootProvider>
      </body>
    </html>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\HomeSearchBioData.tsx
// --------------------
// File: src/app/HomeSearchBiodata.tsx

"use client";

import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Slider } from "@/components/ui/slider";
import { useRouter } from "next/navigation";
import { MouseEvent, useState } from "react";

export function HomeSearchBiodata() {
  const router = useRouter();
  const [range, setRange] = useState<number[]>([18, 80]);

  const handleSearchClick = (event: MouseEvent<HTMLButtonElement>) => {
    event.preventDefault();
    router.push("/biodatas");
  };

  return (
    <form className="bg-white p-8 shadow-lg flex flex-wrap">
      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="biodataType"
        >
          আমি খুঁজছি
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="আমি খুঁজছি" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল বায়োডাটা</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="maritalStatus"
        >
          বৈবাহিক অবস্থা
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="বৈবাহিক অবস্থা" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল অবস্থা</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="address"
        >
          স্থায়ী ঠিকানা
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="স্থায়ী ঠিকানা" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল ঠিকানা</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="religious"
        >
          ধর্মীয় লাইফস্টাইল
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="ধর্মীয় লাইফস্টাইল" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>
      <div className="w-1/3 space-y-3 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="religious"
        >
          বয়স
        </Label>
        <div className="flex items-center space-x-1">
          <div className="text-[#1f4f69]">{range[0]}</div>
          <Slider
            value={range}
            onValueChange={setRange}
            min={18}
            max={80}
            step={1}
            className="w-full"
          />
          <div className="text-[#1f4f69]">{range[1]}</div>
        </div>
      </div>

      <div className="w-1/3 space-y-1 p-2">
        <p className="text-center text-sm text-gray-700">বিসমিল্লাহ</p>
        <Button
          className="w-full p-2 bg-[#E25A6F] text-white rounded hover:bg-[#D14A5F]"
          onClick={handleSearchClick}
        >
          খুঁজুন
        </Button>
      </div>
    </form>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\globals.css
// --------------------
/* File: src/app/globals.css */
@import "tailwindcss";

@plugin "tailwindcss-animate";

@custom-variant dark (&:is(.dark *));

:root {
  --background: hsl(0 0% 100%);
  --foreground: hsl(0 0% 3.9%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(0 0% 3.9%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(0 0% 3.9%);
  --primary: hsl(0 0% 9%);
  --primary-foreground: hsl(0 0% 98%);
  --secondary: hsl(0 0% 96.1%);
  --secondary-foreground: hsl(0 0% 9%);
  --muted: hsl(0 0% 96.1%);
  --muted-foreground: hsl(0 0% 45.1%);
  --accent: hsl(0 0% 96.1%);
  --accent-foreground: hsl(0 0% 9%);
  --destructive: hsl(0 84.2% 60.2%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(0 0% 89.8%);
  --input: hsl(0 0% 89.8%);
  --ring: hsl(0 0% 3.9%);
  --chart-1: hsl(12 76% 61%);
  --chart-2: hsl(173 58% 39%);
  --chart-3: hsl(197 37% 24%);
  --chart-4: hsl(43 74% 66%);
  --chart-5: hsl(27 87% 67%);
  --radius: 0.6rem;
  --sidebar: hsl(0 0% 98%);
  --sidebar-foreground: hsl(240 5.3% 26.1%);
  --sidebar-primary: hsl(240 5.9% 10%);
  --sidebar-primary-foreground: hsl(0 0% 98%);
  --sidebar-accent: hsl(240 4.8% 95.9%);
  --sidebar-accent-foreground: hsl(240 5.9% 10%);
  --sidebar-border: hsl(220 13% 91%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
}

.dark {
  --background: hsl(0 0% 3.9%);
  --foreground: hsl(0 0% 98%);
  --card: hsl(0 0% 3.9%);
  --card-foreground: hsl(0 0% 98%);
  --popover: hsl(0 0% 3.9%);
  --popover-foreground: hsl(0 0% 98%);
  --primary: hsl(0 0% 98%);
  --primary-foreground: hsl(0 0% 9%);
  --secondary: hsl(0 0% 14.9%);
  --secondary-foreground: hsl(0 0% 98%);
  --muted: hsl(0 0% 14.9%);
  --muted-foreground: hsl(0 0% 63.9%);
  --accent: hsl(0 0% 14.9%);
  --accent-foreground: hsl(0 0% 98%);
  --destructive: hsl(0 62.8% 30.6%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(0 0% 14.9%);
  --input: hsl(0 0% 14.9%);
  --ring: hsl(0 0% 83.1%);
  --chart-1: hsl(220 70% 50%);
  --chart-2: hsl(160 60% 45%);
  --chart-3: hsl(30 80% 55%);
  --chart-4: hsl(280 65% 60%);
  --chart-5: hsl(340 75% 55%);
  --sidebar: hsl(240 5.9% 10%);
  --sidebar-foreground: hsl(240 4.8% 95.9%);
  --sidebar-primary: hsl(224.3 76.3% 48%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(240 3.7% 15.9%);
  --sidebar-accent-foreground: hsl(240 4.8% 95.9%);
  --sidebar-border: hsl(240 3.7% 15.9%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\loading.tsx
// --------------------
// File: src/app/loading.tsx

import { Loader2 } from "lucide-react";

export default function Loading() {
  return (
    <div className="flex items-center justify-center min-h-screen bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <Loader2 className="animate-spin text-[#E25A6F]" size={64} />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\page.tsx
// --------------------
// File: src/app/page.tsx
import { Footer } from "@/components/footer";
import { Navbar } from "@/components/navbar";
import { HomeSearchBiodata } from "./HomeSearchBiodata";

export default function HomePage() {
  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <Navbar />

      <main className="flex-grow max-w-7xl mt-12 mx-auto flex flex-col text-[#1f4f69]">
        <div className="text-3xl text-center mb-8">
          বিবাহযোগ্য মুসলিম পাত্র-পাত্রী খোঁজার সহজ মাধ্যম
        </div>

        <p className="text-center mb-4">
          Bangladesh's Trusted Matrimony Platform
        </p>

        <div className="text-center mb-12">
          <blockquote className="italic text-[#b1466e]">
            "তোমরা সহজ করো এবং কঠিন করো না।
            <br />
            সুসংবাদ দাও এবং বিরক্ত করো না।"
          </blockquote>
          <p className="text-gray-500 mt-2">(বুখারী ৩০৩৮)</p>
        </div>

        <div className="flex items-center justify-center">
          <div className="text-2xl text-center mb-4 pb-4 border-b-4 border-[#1f4f69]">
            জীবনসঙ্গী খুঁজুন
          </div>
        </div>
        <div className="p-4 bg-gradient-to-r from-[#dce9f0] to-[#fbe6e9]">
          <HomeSearchBiodata />
        </div>
      </main>

      <Footer />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\forgot-password\page.tsx
// --------------------
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Metadata } from "next";
import Link from "next/link";

export const metadata: Metadata = {
  title: "Forgot Password",
};

export default function ForgotPasswordPage() {
  return (
    <>
      <h2 className="text-2xl font-semibold mb-6 text-center">
        Forgot Password
      </h2>
      <form className="space-y-4 text-left">
        <div className="space-y-2">
          <Label className="block font-medium" htmlFor="email">
            Email
          </Label>
          <Input
            className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
            id="email"
            type="text"
            placeholder="Email"
          />
        </div>

        <Button className="w-full bg-[#E25A6F] text-white py-2 rounded-md hover:bg-[#D14A5F]">
          Send Reset Password Link
        </Button>
      </form>
      <p className="text-sm text-gray-600 mt-3 text-center">
        Already have an account?
        <Link href="/login" className="text-blue-500 hover:underline ml-1">
          Login
        </Link>
      </p>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\layout.tsx
// --------------------
import { ReactNode } from "react";

export default function PublicLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <div className="flex items-center justify-center min-h-screen bg-gradient-to-r from-[#D6EAFF] to-[#FFE6F0]">
      <div className="bg-white text-black p-8 rounded-2xl shadow-lg min-w-96 bg-gradient-to-r from-[#F2F5FD] to-[#F9F5FA]">
        {children}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\login\LoginForm.tsx
// --------------------
"use client";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { useUserLoginMutation } from "@/redux/features/auth/authApi";
import { setUser } from "@/redux/features/auth/authSlice";
import { useAppDispatch } from "@/redux/hooks";
import { TUser } from "@/utils/tokenHelper";
import { jwtDecode } from "jwt-decode";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { useForm } from "react-hook-form";
import Swal from "sweetalert2";

interface LoginFormValues {
  email: string;
  password: string;
}

const LoginForm = () => {
  const [loginUser, { isLoading }] = useUserLoginMutation();
  const dispatch = useAppDispatch();
  const router = useRouter();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<LoginFormValues>();

  const onFinish = async (values: LoginFormValues) => {
    try {
      const result = await loginUser(values).unwrap();

      if (result.success) {
        Swal.fire({
          title: "Success",
          text: result.message || "You have successfully logged in!",
          icon: "success",
          showConfirmButton: false,
          timer: 1500,
        });

        const accessToken = result.data.accessToken;
        const refreshToken = result.data.refreshToken;
        const decodedToken = jwtDecode(accessToken) as TUser;

        dispatch(
          setUser({
            user: decodedToken,
            acesstoken: accessToken,
            refreshtoken: refreshToken,
          })
        );

        router.push("/dashboard");
      }
    } catch (error: any) {
      console.error("Login Error:", error);
      Swal.fire({
        title: "Error",
        text: error?.data?.message || "Invalid email or password!",
        icon: "error",
        showConfirmButton: false,
        timer: 1500,
      });
    }
  };

  return (
    <form className="space-y-4 text-left" onSubmit={handleSubmit(onFinish)}>
      <div className="space-y-2">
        <Label className="block font-medium" htmlFor="email">
          Email/Mobile Number
        </Label>
        <Input
          className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
          id="email"
          type="text"
          placeholder="Email/Mobile Number"
          {...register("email", { required: "Email is required" })}
        />
        {errors.email && (
          <p className="text-red-500 text-sm">{errors.email.message}</p>
        )}
      </div>

      <div className="space-y-2">
        <Label className="block font-medium" htmlFor="password">
          Password
        </Label>
        <Input
          className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
          id="password"
          type="password"
          placeholder="Password"
          {...register("password", { required: "Password is required" })}
        />
        {errors.password && (
          <p className="text-red-500 text-sm">{errors.password.message}</p>
        )}
        <Link
          href="/forgot-password"
          className="text-blue-500 text-sm mt-1 inline-block hover:underline"
        >
          Forgot Password?
        </Link>
      </div>

      <Button
        type="submit"
        disabled={isLoading}
        className="w-full bg-[#E25A6F] text-white py-2 rounded-md hover:bg-[#D14A5F] disabled:opacity-50"
      >
        {isLoading ? "Logging in..." : "Login"}
      </Button>
    </form>
  );
};

export default LoginForm;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\login\page.tsx
// --------------------
import { Metadata } from "next";
import Link from "next/link";
import LoginForm from "./LoginForm";

export const metadata: Metadata = {
  title: "Login",
};

export default function LoginPage() {
  return (
    <>
      <h2 className="text-2xl font-semibold mb-6 text-center">Login</h2>
      <LoginForm />
      <p className="text-sm text-gray-600 mt-3 text-center">
        Don&apos;t have an account?
        <Link href="/register" className="text-blue-500 hover:underline ml-1">
          Register
        </Link>
      </p>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\register\page.tsx
// --------------------
import { Metadata } from "next";
import Link from "next/link";
import RegisterForm from "./RegisterForm";

export const metadata: Metadata = {
  title: "Registration",
};

export default function RegistrationPage() {
  return (
    <>
      <h2 className="text-2xl font-semibold mb-6 text-center">Registration</h2>
      <RegisterForm />

      <p className="text-sm mt-3 text-center">
        Already have an account?
        <Link href="/login" className="text-blue-500 hover:underline ml-1">
          Login
        </Link>
      </p>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\register\RegisterForm.tsx
// --------------------
"use client";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { useUserRegisterMutation } from "@/redux/features/auth/authApi";
import { useAppDispatch } from "@/redux/hooks";
import { useForm } from "react-hook-form";
import Swal from "sweetalert2";

interface RegisterFormValues {
  name: string;
  email: string;
  mobile: string;
  password: string;
  accountType: string;
}

const RegisterForm = () => {
  const accountTypes = [
    "পাত্র/পাত্রী হিসেবে",
    "অভিভাবক হিসেবে",
    "ঘটক হিসেবে",
    "ভিজিটর হিসেবে",
  ]; // TO:DO get from DB

  const [registerUser, { isLoading }] = useUserRegisterMutation();
  const dispatch = useAppDispatch();
  //   const router = useRouter();
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<RegisterFormValues>();

  const onFinish = async (values: RegisterFormValues) => {
    console.log(values);
    try {
      //   const result = await registerUser(values).unwrap();
      //   if (result.success) {
      //     Swal.fire({
      //       title: "Success",
      //       text: result.message || "You have successfully logged in!",
      //       icon: "success",
      //       showConfirmButton: false,
      //       timer: 1500,
      //     });
      // const accessToken = result.data.accessToken;
      // const refreshToken = result.data.refreshToken;
      // const decodedToken = jwtDecode(accessToken) as TUser;
      // dispatch(
      //   setUser({
      //     user: decodedToken,
      //     acesstoken: accessToken,
      //     refreshtoken: refreshToken,
      //   })
      // );
      // router.push("/dashboard");
    } catch (error: any) {
      console.error("Register Error:", error);
      Swal.fire({
        title: "Error",
        text: error?.data?.message || "Failed to register!",
        icon: "error",
        showConfirmButton: false,
        timer: 1500,
      });
    }
  };

  return (
    <form className="space-y-4 text-left" onSubmit={handleSubmit(onFinish)}>
      <div className="space-y-2">
        <Label className="block font-medium" htmlFor="name">
          Name
        </Label>
        <Input
          className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
          id="name"
          type="text"
          placeholder="Name"
          {...register("name", { required: "Name is required" })}
        />
      </div>

      <div className="space-y-2">
        <Label className="block font-medium" htmlFor="email">
          Email
        </Label>
        <Input
          className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
          id="email"
          type="email"
          placeholder="Email"
          {...register("email", { required: "Email is required" })}
        />
      </div>

      <div className="space-y-2">
        <Label className="block font-medium" htmlFor="mobile">
          Mobile Number
        </Label>
        <Input
          className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
          id="mobile"
          type="text"
          placeholder="Mobile Number"
          {...register("mobile", { required: "Mobile Number is required" })}
        />
      </div>

      <div className="space-y-2">
        <Label className="block font-medium" htmlFor="password">
          Password
        </Label>
        <Input
          className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
          id="password"
          type="password"
          placeholder="Password"
          {...register("password", { required: "Password is required" })}
        />
      </div>

      <div className="space-y-2">
        <Label className="block font-medium">
          সহজনিকাহ ম্যাট্রিমনিতে কি ভূমিকায় একাউন্ট খুলছেন?
        </Label>
        <RadioGroup className="flex flex-col gap-3">
          {accountTypes.map((type) => (
            <Label key={type} className="flex items-center space-x-2">
              <RadioGroupItem value={type} id={type} />
              <span className="capitalize">{type}</span>
            </Label>
          ))}
        </RadioGroup>
      </div>

      <Button
        className="w-full bg-[#E25A6F] text-white py-2 rounded-md hover:bg-[#D14A5F] disabled:opacity-50"
        type="submit"
        disabled={isLoading}
      >
        {isLoading ? "Registering..." : "Register"}
      </Button>
    </form>
  );
};

export default RegisterForm;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(auth)\reset-password\page.tsx
// --------------------
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Metadata } from "next";
import Link from "next/link";

export const metadata: Metadata = {
  title: "Reset Password",
};

export default function ResetPasswordPage() {
  return (
    <>
      <h2 className="text-2xl font-semibold mb-6 text-center">
        Reset Password
      </h2>
      <form className="space-y-4 text-left">
        <div className="space-y-2">
          <Label className="block font-medium" htmlFor="newPassword">
            New Password
          </Label>
          <Input
            className="w-full px-4 py-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-400"
            id="newPassword"
            type="text"
            placeholder="New Password"
          />
        </div>
        <Button className="w-full bg-[#E25A6F] text-white py-2 rounded-md hover:bg-[#D14A5F]">
          Submit
        </Button>
      </form>
      <p className="text-sm text-gray-600 mt-3 text-center">
        Already have an account?
        <Link href="/login" className="text-blue-500 hover:underline ml-1">
          Login
        </Link>
      </p>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\BiodataEditor.tsx
// --------------------
// File: src/app/(main)/biodata-editor/BiodataEditor.tsx
"use client";

import { createBiodata } from "@/app/services/biodata.service";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";
import { useSearchParams } from "next/navigation";
import { useCallback, useMemo } from "react";
import Breadcrumbs from "./biodataFormComponents/Breadcrumbs";
import { steps } from "./steps";

interface BiodataEditorProps {
  biodataToEdit: any | null;
}

export default function BiodataEditor({ biodataToEdit }: BiodataEditorProps) {
  const dispatch = useAppDispatch();
  const biodataFormData = useAppSelector(
    (state) => state.biodata.biodataFormData
  );

  const searchParams = useSearchParams();
  const currentStepKey = searchParams.get("step") || steps[0].key;
  const currentStep = useMemo(
    () => steps.find((x) => x.key === currentStepKey),
    [currentStepKey]
  );

  const setStep = useCallback(
    (key: string) => {
      const newSearchParams = new URLSearchParams(searchParams);
      newSearchParams.set("step", key);
      window.history.pushState(null, "", `?${newSearchParams.toString()}`);
    },
    [searchParams]
  );

  const FormComponent = useMemo(() => currentStep?.component, [currentStep]);

  const handleFormDataUpdate = useCallback(
    (data: any) => {
      // Create a clean copy of the data without any circular references
      const cleanData = JSON.parse(JSON.stringify(data));

      dispatch(
        setBiodataFormData({
          key: `${currentStepKey}FormData`,
          data: cleanData,
        })
      );
    },
    [dispatch, currentStepKey]
  );

  const handleSave = useCallback(async () => {
    if (!currentStep) return;

    switch (currentStep.key) {
      case "first-words":
        // Create a clean copy of the data before sending to API
        const cleanData = JSON.parse(
          JSON.stringify(biodataFormData?.firstWordsFormData)
        );
        await createBiodata(cleanData);
        setStep(currentStep.next);
        break;
      default:
        setStep(currentStep.next);
        break;
    }
  }, [currentStep, biodataFormData, setStep]);

  if (!FormComponent) return null;

  return (
    <>
      <Breadcrumbs currentStep={currentStep?.key} setCurrentStep={setStep} />
      <div className="mt-8 w-full">
        <FormComponent
          biodataFormData={biodataFormData}
          setBiodataFormData={handleFormDataUpdate}
          handleSave={handleSave}
          currentStep={currentStep}
          setCurrentStep={setStep}
        />
      </div>
      {process.env.NODE_ENV === "development" && (
        <pre className="text-sm bg-white p-2 rounded-md shadow">
          {JSON.stringify(biodataFormData, null, 2)}
        </pre>
      )}
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/AddressInfo.tsx

"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { citizenshipOptions, locations, types } from "@/lib/consts";
import { AddressInfoFormData, BiodataFormDataProps } from "@/lib/types";
import { addressInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function AddressInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<AddressInfoFormData>({
    resolver: zodResolver(addressInfoFormData),
    defaultValues: {
      addresses: biodataFormData?.addressInfoFormData?.addresses || [
        {
          type: "",
          location: "",
          state: "",
          city: "",
          detail: "",
          country: "",
          cityzenshipStatus: "",
        },
      ],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "addresses",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        addressInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ঠিকানা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`addresses.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার ধরন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="ঠিকানার ধরন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {types.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.location`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      অবস্থান ধরণ:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="অবস্থান ধরণ:" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {locations.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.state`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "স্টেট"
                      : "স্থায়ী জেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        {label}:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.city`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "শহর"
                      : "স্থায়ী উপজেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        <div>{label}:</div>
                        <div className="text-xs">(যদি থাকে)</div>
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.detail`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার বিস্তারিত:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            type="text"
                            placeholder="ঠিকানার বিস্তারিত"
                          />
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.country`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        দেশের নাম:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              id="emailMobileNumber"
                              type="text"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.cityzenshipStatus`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        সিটিজেনশিপ আছে?
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <RadioGroup
                              className="w-full flex flex-wrap gap-0 min-h-12"
                              onValueChange={field.onChange}
                              value={field.value}
                            >
                              {citizenshipOptions.map((x) => (
                                <div
                                  key={x.id}
                                  className="w-1/3 flex items-center space-x-2"
                                >
                                  <RadioGroupItem value={x.id} id={x.id} />
                                  <Label htmlFor={x.id}>{x.title}</Label>
                                </div>
                              ))}
                            </RadioGroup>
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
            </div>
          ))}

          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                location: "",
                state: "",
                city: "",
                detail: "",
                country: "",
                cityzenshipStatus: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ঠিকানা যোগ করুন</span>
          </Button>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\Breadcrumbs.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/Breadcrumbs.tsx

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
} from "@/components/ui/breadcrumb";
import { steps } from "../steps";

interface BreadcrumbsProps {
  currentStep: string;
  setCurrentStep: (step: string) => void;
}

export default function Breadcrumbs({
  currentStep,

  setCurrentStep,
}: BreadcrumbsProps) {
  return (
    <Breadcrumb className="max-w-6xl bg-[#f6f6f6] rounded-2xl p-2">
      <BreadcrumbList className="flex justify-center">
        {steps.map((step) => (
          <BreadcrumbItem
            key={step.key}
            className="text-[#004972] rounded-full"
          >
            {step.key === currentStep ? (
              <BreadcrumbPage className="bg-[#e25a6f] text-white px-3 py-2 rounded-full">
                {step.title}
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink
                asChild
                className="hover:text-[#e25a6f] px-3 py-2 cursor-pointer"
              >
                <button onClick={() => setCurrentStep(step.key)}>
                  {step.title}
                </button>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        ))}
      </BreadcrumbList>
    </Breadcrumb>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\EducationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/EducationInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { educationTypes, religiousEducationQualities } from "@/lib/consts";
import { BiodataFormDataProps, EducationInfoFormData } from "@/lib/types";
import { educationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function EducationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<EducationInfoFormData>({
    resolver: zodResolver(educationInfoFormData),
    defaultValues: {
      type: biodataFormData?.educationInfoFormData?.type || "",
      highestDegree:
        biodataFormData?.educationInfoFormData?.highestDegree || "",
      degrees:
        biodataFormData?.educationInfoFormData?.degrees?.length > 0
          ? biodataFormData?.educationInfoFormData?.degrees.map((x) => {
              return {
                name: x.name,
                passYear: x.passYear,
                group: x.group,
                institute: x.institute,
              };
            })
          : [{ name: "", passYear: "", group: "", institute: "" }],
      religiousEducation:
        biodataFormData?.educationInfoFormData?.religiousEducation || [],
      detail: biodataFormData?.educationInfoFormData?.detail || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        educationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "degrees",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">শিক্ষাগত যোগ্যতা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষার ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="শিক্ষার ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {educationTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="highestDegree"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার সর্বোচ্চ শিক্ষাগত ডিগ্রীর নাম:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="text-[#E25A6F]">
            মাধ্যমিক পর্যায় থেকে শুরু করে এখন পর্যন্ত যেসকল ডিগ্রী অর্জন করেছেন
            বা চলমান রয়েছে সেগুলো নিচে প্লাস বাটন চাপ দিয়ে ধাপে ধাপে যুক্ত করুন।
            কোনো ডিগ্রী না থাকলে খালি রাখুন।
          </div>
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`degrees.${index}.name`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ডিগ্রীর নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            placeholder="ডিগ্রীর নাম"
                          />
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.passYear`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পাশের সন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পাশের সন"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.group`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বিভাগ/বিষয়:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বিভাগ/বিষয়"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.institute`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      শিক্ষা প্রতিষ্ঠানের নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="শিক্ষা প্রতিষ্ঠানের নাম"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                name: "",
                passYear: "",
                group: "",
                institute: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ডিগ্রী যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="religiousEducation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value?.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষা সম্পর্কিত আরো কিছু জানাতে চাইলে নিচে লিখুন। অন্যথায়
                    খালি রাখুন।
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FamilyInfo.tsx

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { familyBackgrounds, familyTypes, siblingTypes } from "@/lib/consts";
import { BiodataFormDataProps, FamilyInfoFormData } from "@/lib/types";
import { familyInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function FamilyInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FamilyInfoFormData>({
    resolver: zodResolver(familyInfoFormData),
    defaultValues: {
      parentsAlive: biodataFormData?.familyInfoFormData?.parentsAlive || "",
      fatherOccupation:
        biodataFormData?.familyInfoFormData?.fatherOccupation || "",
      motherOccupation:
        biodataFormData?.familyInfoFormData?.motherOccupation || "",
      siblings: biodataFormData?.familyInfoFormData?.siblings || [],
      fatherSideDetail:
        biodataFormData?.familyInfoFormData?.fatherSideDetail || "",
      motherSideDetail:
        biodataFormData?.familyInfoFormData?.motherSideDetail || "",
      familyType: biodataFormData?.familyInfoFormData?.familyType || "",
      familyBackground:
        biodataFormData?.familyInfoFormData?.familyBackground || "",
      livingCondition:
        biodataFormData?.familyInfoFormData?.livingCondition || "",
      wealthDescription:
        biodataFormData?.familyInfoFormData?.wealthDescription || "",
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "siblings",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        familyInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পারিবারিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="parentsAlive"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পিতা-মাতা উভয়েই জীবিত আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনার পিতা-মাতা উভয়েই জীবিত আছেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`siblings.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ভাই/বোন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center gap-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                              <SelectValue placeholder="ভাই/বোন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {siblingTypes.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.occupation`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পেশা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পেশা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.maritalStatus`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বৈবাহিক অবস্থা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বৈবাহিক অবস্থা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.children`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      সন্তান সংখ্যা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="সন্তান সংখ্যা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                occupation: "",
                maritalStatus: "",
                children: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ভাই/বোন যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="fatherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    চাচা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="চাচা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মামা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মামা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের অর্থনৈতিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyBackgrounds.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="livingCondition"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া
                    বাড়িতে?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="wealthDescription"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FinalWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FinalWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Label } from "@/components/ui/label";
import { BiodataFormDataProps, FinalWordsFormData } from "@/lib/types";
import { finalWordsFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function FinalWords({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FinalWordsFormData>({
    resolver: zodResolver(finalWordsFormData),
    defaultValues: {
      postApprovalOathTruthfulInfo:
        biodataFormData?.finalWordsFormData?.postApprovalOathTruthfulInfo ||
        false,
      postApprovalOathNoMisuse:
        biodataFormData?.finalWordsFormData?.postApprovalOathNoMisuse || false,
      postApprovalOathLegalResponsibility:
        biodataFormData?.finalWordsFormData
          ?.postApprovalOathLegalResponsibility || false,
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        finalWordsFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">শেষ কথা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-10 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl text-center">
            প্রতিশ্রুতি নামা
          </div>
          <div className="text-[#cd0000] space-y-3">
            <div className="flex items-center space-x-2">
              <Label htmlFor="preApprove1" className="text-[#6C0011] leading-5">
                আমি আল্লাহর নামে শপথ করছি যে,
              </Label>
            </div>
            <FormField
              control={form.control}
              name="postApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি বায়োডাটায় সকল তথ্য সত্য প্রদান করেছি।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathNoMisuse"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      সহজনিকাহ ম্যাট্রিমনি ওয়েবসাইটের কোনো তথ্য অসৎ কাজে ব্যবহার
                      করবো না।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      কোনো মিথ্যা তথ্য প্রদান করলে বা কোনো তথ্য অসৎ কাজে ব্যবহার
                      করে থাকলে, দুনিয়াবী যেকোনো আইনী জটিলতা এবং পরকালীন সকল
                      দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-ful">
        <Button className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]">
          Submit and Send For Approval
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FirstWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FirstWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { FirstWordsFormData } from "@/lib/types";
import { firstWordsFormData } from "@/lib/validations";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch } from "@/redux/hooks";
import { zodResolver } from "@hookform/resolvers/zod";
import { useState } from "react";
import { useForm } from "react-hook-form";

interface BiodataFormDataProps {
  biodataFormData: any;
  handleSave: () => void;
  currentStep: any;
  setCurrentStep: (step: string) => void;
}

export default function FirstWords({
  biodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const dispatch = useAppDispatch();
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FirstWordsFormData>({
    resolver: zodResolver(firstWordsFormData),
    defaultValues: {
      preApprovalAcceptTerms:
        biodataFormData?.firstWordsFormData?.preApprovalAcceptTerms || false,
      preApprovalOathTruthfulInfo:
        biodataFormData?.firstWordsFormData?.preApprovalOathTruthfulInfo ||
        false,
      preApprovalOathLegalResponsibility:
        biodataFormData?.firstWordsFormData
          ?.preApprovalOathLegalResponsibility || false,
    },
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      const formValues = form.getValues();
      // Only update if we have valid values
      if (Object.values(formValues).some((value) => value !== undefined)) {
        dispatch(
          setBiodataFormData({
            key: "firstWordsFormData",
            data: formValues,
          })
        );
        handleSave();
      }
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">
        বায়োডাটা তৈরির পূর্বে কিছু গুরুত্বপূর্ণ কথা
      </div>
      <div className="max-w-4xl w-full space-y-4 text-sm text-black">
        <div>
          আপনি যখন সহজনিকাহ ম্যাট্রিমনিতে জীবনসঙ্গী খুঁজতে এসেছেন, এর মানে হলো,
          আপনি বিবাহের একটি অত্যন্ত গুরুত্বপূর্ণ অধ্যায় অতিবাহিত করছেন। চাকরির
          জন্য যেমন সুন্দর করে গুছিয়ে একটি সিভি তৈরি করা হয়, ঠিক তেমনি
          জীবনসঙ্গী নির্বাচনের ক্ষেত্রে আরও বেশি সুন্দর করে এবং গুরুত্ব দিয়ে
          বায়োডাটা তৈরি করা উচিত। কেননা যিনি আপনার কাছে জীবনসঙ্গী হয়ে আসবেন,
          তিনি যেন এই বায়োডাটার মাধ্যমে আপনাকে সঠিকভাবে জানাতে এবং বুঝতে পারেন।
        </div>
        <div>
          তাই সময় নিয়ে, মনোযোগ দিয়ে আপনার বায়োডাটা গুছিয়ে তৈরি করুন। প্রতিটি
          প্রশ্নের উত্তর সত্য এবং সঠিকভাবে দিন এবং নিশ্চিত করুন যে, তথ্যগুলো
          আপনাকে অপরপক্ষের কাছে সঠিকভাবে উপস্থাপন করছে। সম্পূর্ণ বায়োডাটা
          তৈরিতে বেশ কিছুটা সময় লাগবে, কারণ এখানে অনেকগুলো প্রশ্ন আছে। কাজেই
          ধৈর্য্য সহকারে, বেশ কিছুটা সময় নিয়ে বায়োডাটা ফর্ম পূরণ করুন।
          (আনুমানিক ৩০ মিনিট)
        </div>
        <div>
          বি: দ্র:{" "}
          <span className="text-[#005A8B]">
            আপনার এই বায়োডাটা কেউ পছন্দ করলে এবং আপনার সাথে যোগাযোগ করতে চাইলে
            শুধুমাত্র আপনার অভিভাবকের যোগাযোগের মোবাইল নম্বর প্রদান করা হবে।
            একইভাবে আপনিও কোনো বায়োডাটার যোগাযোগ তথ্য নিতে চাইলে শুধুমাত্র
            অভিভাবকের যোগাযোগ নম্বর নিতে পারবেন।
          </span>
        </div>
      </div>
      <div className="max-w-4xl w-full bg-[#f6f6f6] py-6 px-12 space-y-4 text-black rounded-4xl">
        <div className="text-[#005A8B] text-xl">
          বায়োডাটা অ্যাপ্রুভ হওয়ার শর্তসমূহ:
        </div>
        <div className="text-sm">
          <ol className="list-decimal space-y-1">
            <li>
              অবশ্যই মুসলিম হতে হবে। সহজনিকাহ শুধুমাত্র প্রাক্টিসিং,
              নন-প্রাক্টিসিং সহ সকল ধরণের মুসলিমদের নিয়ে কাজ করে থাকে।
            </li>
            <li>
              ছেলেদের বয়স কমপক্ষে ২১ বছর এবং মেয়েদের ক্ষেত্রে ১৮ বছর হতে হবে।
            </li>
            <li>
              অভিভাবকের যোগাযোগ তথ্যের ঘরে পাত্র/পাত্রীর নিজের বা বন্ধুর মোবাইল
              নম্বর প্রদান করা যাবে না।
            </li>
            <li>
              বাংলা, ইংলিশ মিশ্রিত বাংলিশ ভাষায় লেখা যাবে না। পুরোটাই বাংলায়
              অথবা পুরোটাই ইংরেজিতে লিখতে হবে।
            </li>
            <li>
              নিজের শিক্ষা, পেশা এবং পারিবারিক তথ্যে বিস্তারিত উত্তর লিখতে হবে।
            </li>
            <li>
              তথ্য ভেরিফিকেশনের সময় বায়োডাটায় দেওয়া তথ্যের সাথে মিল থাকতে হবে।
            </li>
          </ol>
        </div>
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-6 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl">প্রতিশ্রুতি নামা:</div>
          <div className="text-[#cd0000] space-y-2">
            <FormField
              control={form.control}
              name="preApprovalAcceptTerms"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি শর্তসমূহ পড়েছি এবং তা মেনে চলার প্রতিশ্রুতি দিচ্ছি।
                    </FormLabel>

                    {/* <FormDescription>
                      Describe what this resume is for.
                    </FormDescription> */}
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আল্লাহর নামে শপথ করছি যে, বায়োডাটায় সকল তথ্য সত্য
                      প্রদান করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আরও শপথ করছি যে, কোনো মিথ্যা তথ্য প্রদান করলে দুনিয়াবী
                      যেকোনো আইনী জটিলতা এবং পরকালীন সকল দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/GeneralInfo.tsx

"use client";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  bloodGroups,
  heights,
  maritalStatuses,
  nationalities,
  skinTones,
} from "@/lib/consts";
import { BiodataFormDataProps, GeneralInfoFormData } from "@/lib/types";
import { cn } from "@/lib/utils";
import { generalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { format } from "date-fns";
import { CalendarIcon } from "lucide-react";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function GeneralInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<GeneralInfoFormData>({
    resolver: zodResolver(generalInfoFormData),
    defaultValues: {
      dateOfBirth: biodataFormData?.generalInfoFormData?.dateOfBirth || "",
      maritalStatus: biodataFormData?.generalInfoFormData?.maritalStatus || "",
      skinTone: biodataFormData?.generalInfoFormData?.skinTone || "",
      height: biodataFormData?.generalInfoFormData?.height || "",
      weight: biodataFormData?.generalInfoFormData?.weight || "",
      bloodGroup: biodataFormData?.generalInfoFormData?.bloodGroup || "",
      nationality: biodataFormData?.generalInfoFormData?.nationality || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        generalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const maritalStatusOptions = maritalStatuses.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">সাধারণ তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="dateOfBirth"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জন্ম তারিখ:</div>
                    <div className="text-xs">(আসল, সার্টিফিকেট অনুযায়ী নয়)</div>
                  </FormLabel>
                  <FormControl>
                    <Popover>
                      <PopoverTrigger asChild>
                        <Button
                          className={cn(
                            "p-6 w-full bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]",
                            !field.value && "text-muted-foreground"
                          )}
                        >
                          <CalendarIcon className="mr-2 h-4 w-4" />
                          {field.value ? (
                            format(field.value, "PPP")
                          ) : (
                            <span>জন্ম তারিখ</span>
                          )}
                        </Button>
                      </PopoverTrigger>
                      <PopoverContent className="w-auto p-0">
                        <Calendar
                          className="bg-[#005889]"
                          classNames={{
                            day_selected: "bg-[#E25A6F]",
                            day_today: "bg-white text-black",
                          }}
                          mode="single"
                          selected={
                            field.value ? new Date(field.value) : undefined
                          }
                          onSelect={(date) =>
                            field.onChange(date?.toISOString())
                          }
                          initialFocus
                        />
                      </PopoverContent>
                    </Popover>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বৈবাহিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {maritalStatusOptions.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="গাত্রবর্ণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {skinTones.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="weight"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ওজন:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ওজন"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="bloodGroup"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    রক্তের গ্রুপ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="রক্তের গ্রুপ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {bloodGroups.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="nationality"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জাতীয়তা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="জাতীয়তা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {nationalities.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/MarriageInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { afterMarriageJobs, afterMarriageStuties } from "@/lib/consts";
import { BiodataFormDataProps, MarriageInfoFormData } from "@/lib/types";
import { marriageInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function MarriageInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<MarriageInfoFormData>({
    resolver: zodResolver(marriageInfoFormData),
    defaultValues: {
      guardianApproval:
        biodataFormData?.marriageInfoFormData?.guardianApproval || "",
      continueStudy: biodataFormData?.marriageInfoFormData?.continueStudy || "",
      careerPlan: biodataFormData?.marriageInfoFormData?.careerPlan || "",
      residence: biodataFormData?.marriageInfoFormData?.residence || "",
      arrangeHijab: biodataFormData?.marriageInfoFormData?.arrangeHijab || "",
      dowryExpectation:
        biodataFormData?.marriageInfoFormData?.dowryExpectation || "",
      allowShowingPhotoOnline:
        biodataFormData?.marriageInfoFormData?.allowShowingPhotoOnline || "",
      additionalMarriageInfo:
        biodataFormData?.marriageInfoFormData?.additionalMarriageInfo || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        marriageInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const afterMarriageStutyOptions = afterMarriageStuties.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  const afterMarriageJobOptions = afterMarriageJobs.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">বিয়ে সংক্রান্ত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="guardianApproval"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
                    <div className="text-xs">
                      (যদি অভিভাবক রাজি নাও থাকে তাহলে এর কারণ লিখুন এবং
                      সেক্ষেত্রে আপনি কেন বিবাহে আগাচ্ছেন সেটা বিস্তারিত লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="continueStudy"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?"
                      : "বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageStutyOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="careerPlan"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?"
                      : "আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageJobOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="residence"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?"
                      : "যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="arrangeHijab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে পারবেন?"
                      : "বাড়িতে বা বাহিরে পর্দা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="dowryExpectation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক / উপহার / অর্থ আশা করবেন কিনা?"
                      : "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রপক্ষকে যৌতুক / উপহার / অর্থ দিতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="allowShowingPhotoOnline"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "পাত্রীপক্ষ"
                      : "পাত্রপক্ষ"}{" "}
                    অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="additionalMarriageInfo"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>
                      বিয়ে সংক্রান্ত আরো কিছু জানাতে চাইলে এখানে লিখুন: অন্যথায়
                      খালি রাখুন।
                    </div>
                    <div className="text-xs">
                      (যেমন: পাত্র-পাত্রী সাক্ষাতের ব্যাপারে, অভিভাবকদের মতামত
                      নিয়ে, কেমন বিয়ে চান, বিয়ের পর কোন কোন বিষয় ছাড় দিতে রাজি
                      নন ইত্যাদি কিছু জানানোর থাকলে লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\OccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/OccupationInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { occupationsList } from "@/lib/consts";
import { BiodataFormDataProps, OccupationInfoFormData } from "@/lib/types";
import { occupationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function OccupationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<OccupationInfoFormData>({
    resolver: zodResolver(occupationInfoFormData),
    defaultValues: {
      occupations: biodataFormData?.occupationInfoFormData?.occupations || [],
      detail: biodataFormData?.occupationInfoFormData?.detail || "",
      monthlyIncome:
        biodataFormData?.occupationInfoFormData?.monthlyIncome || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        occupationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পেশা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="occupations"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পেশা নিয়ে বিস্তারিত লিখুন:</div>
                    <div className="text-xs">
                      (অর্থাৎ আপনার কর্মস্থল কোথায়, কি ধরণের কাজে দায়িত্বরত আছেন
                      বা পদবি কি, এগুলো নিয়ে বিস্তারিত লিখুন। পেশা না থাকলে খালি
                      রাখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="monthlyIncome"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাসিক আয়:</div>
                    <div className="text-xs">(পেশা না থাকলে খালি রাখুন।)</div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাসিক আয়"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PersonalInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { characteristics, specialCatagories } from "@/lib/consts";
import { BiodataFormDataProps, PersonalInfoFormData } from "@/lib/types";
import { personalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function PersonalInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PersonalInfoFormData>({
    resolver: zodResolver(personalInfoFormData),
    defaultValues: {
      beardStatus: biodataFormData?.personalInfoFormData?.beardStatus || "",
      preferredOutfit:
        biodataFormData?.personalInfoFormData?.preferredOutfit || "",
      entertainmentPreferences:
        biodataFormData?.personalInfoFormData?.entertainmentPreferences || "",
      healthConditions:
        biodataFormData?.personalInfoFormData?.healthConditions || "",
      personalTraits:
        biodataFormData?.personalInfoFormData?.personalTraits || [],
      genderEqualityView:
        biodataFormData?.personalInfoFormData?.genderEqualityView || "",
      lgbtqOpinion: biodataFormData?.personalInfoFormData?.lgbtqOpinion || "",
      specialConditions:
        biodataFormData?.personalInfoFormData?.specialConditions || [],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        personalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const specialCatagoryOptions = specialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ব্যক্তিগত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="beardStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "আপনি দাড়ি রেখেছেন কি?"
                      : "আপনার কি দাড়ি পছন্দ?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="preferredOutfit"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পড়তে পছন্দ করেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="entertainmentPreferences"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="healthConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মানসিক বা শারীরিক কোনো রোগ আছে কি? থাকলে বিস্তারিত লিখুন।
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="personalTraits"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নিজের কিছু গুণাবলী চিহ্নিত করুন:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {characteristics.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="genderEqualityView"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="lgbtqOpinion"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {specialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PrimaryInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { biodataTypes } from "@/lib/consts";
import { BiodataFormDataProps, PrimaryInfoFormData } from "@/lib/types";
import { primaryInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function PrimaryInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PrimaryInfoFormData>({
    resolver: zodResolver(primaryInfoFormData),
    defaultValues: {
      biodataType: biodataFormData?.primaryInfoFormData?.biodataType || "",
      biodataFor: biodataFormData?.primaryInfoFormData?.biodataFor || "",
      fullName: biodataFormData?.primaryInfoFormData?.fullName || "",
      fatherName: biodataFormData?.primaryInfoFormData?.fatherName || "",
      motherName: biodataFormData?.primaryInfoFormData?.motherName || "",
      email: biodataFormData?.primaryInfoFormData?.email || "",
      phoneNumber: biodataFormData?.primaryInfoFormData?.phoneNumber || "",
      guardianContacts:
        biodataFormData?.primaryInfoFormData?.guardianContacts?.length > 0
          ? biodataFormData?.primaryInfoFormData?.guardianContacts.map((x) => {
              return {
                relation: x.relation,
                fullName: x.fullName,
                phoneNumber: x.phoneNumber,
              };
            })
          : [
              { relation: "", fullName: "", phoneNumber: "" },
              { relation: "", fullName: "", phoneNumber: "" },
            ],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        primaryInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "guardianContacts",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রাথমিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="biodataType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বায়োডাটার ধরন:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বায়োডাটার ধরন" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {biodataTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="biodataFor"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>বায়োডাটা কার জন্য তৈরী করছেন?</div>
                    <div className="text-xs">
                      (যেমনঃ নিজের জন্য/বোনের জন্য/বন্ধুর জন্য/ভাগ্নির জন্য
                      ইত্যাদি)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fullName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
                    <div className="text-xs">
                      (NID কার্ডে যে নাম আছে। নাম বায়োডাটায় প্রকাশ করা হবে না।
                      শুধুমাত্র ভেরিফিকেশন ও অপরপক্ষকে যোগাযোগ তথ্য প্রদানের
                      ক্ষেত্রে প্রয়োজন হবে।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="সম্পূর্ণ নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="email"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>ইমেইল আইডি:</div>
                    <div className="text-xs">
                      (পাত্র/পাত্রীর সাথে আমাদের যোগাযোগের জন্য প্রয়োজন হবে।
                      অপরপক্ষ যোগাযোগ তথ্য নিতে চাইলে যুক্তিসঙ্গত কারণ বা
                      প্রয়োজন ছাড়া পাঠানো হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ইমেইল আইডি"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="phoneNumber"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর মোবাইল নম্বর:</div>
                    <div className="text-xs">
                      (মোবাইল নম্বর শুধুমাত্র ভেরিফিকেশনের জন্য আমাদের কাছে
                      থাকবে। কাউকে প্রদান করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মোবাইল নম্বর"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="flex flex-col space-y-2">
            <FormLabel className="flex items-center justify-between space-x-8">
              <div className="text-md space-y-1 leading-4.5">
                <div>পাত্র/পাত্রীর অভিভাবকের মোবাইল নম্বর:</div>
                <div className="text-xs">
                  <div>কমপক্ষে ২ টি সচল নম্বর প্রদান করতে হবে।</div>
                </div>
              </div>
              <Button
                type="button"
                className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
                onClick={() => append({ fullName: "", phoneNumber: "" })}
              >
                <Plus size={20} /> <span>নতুন নম্বর যোগ করুন</span>
              </Button>
            </FormLabel>

            <div className="space-y-2">
              {fields.map((field, index) => (
                <div className="flex space-x-2 items-center" key={field.id}>
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.relation`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="সম্পর্ক"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.fullName`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের নাম"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.phoneNumber`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের মোবাইল নম্বর"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  {/* Remove button (except for the first two fields) */}
                  {fields.length > 2 && (
                    <Button
                      type="button"
                      className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                      onClick={() => remove(index)}
                    >
                      <Minus size={20} />
                    </Button>
                  )}
                </div>
              ))}
            </div>
          </div>
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\ProfilePic.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ProfilePic.tsx

"use client";

import female1 from "@/assets/images/female-1.svg";
import female2 from "@/assets/images/female-2.svg";
import female3 from "@/assets/images/female-3.svg";
import female4 from "@/assets/images/female-4.svg";
import female5 from "@/assets/images/female-5.svg";
import female6 from "@/assets/images/female-6.svg";
import male1 from "@/assets/images/male-1.svg";
import male2 from "@/assets/images/male-2.svg";
import male3 from "@/assets/images/male-3.svg";
import male4 from "@/assets/images/male-4.svg";
import male5 from "@/assets/images/male-5.svg";
import male6 from "@/assets/images/male-6.svg";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { BiodataFormDataProps, ProfilePicFormData } from "@/lib/types";
import { profilePicFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { CheckCircle } from "lucide-react";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ProfilePic({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ProfilePicFormData>({
    resolver: zodResolver(profilePicFormData),
    defaultValues: {
      photoId: biodataFormData?.profilePicFormData?.photoId || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        profilePicFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const images =
    biodataFormData?.primaryInfoFormData?.biodataType === "1"
      ? [male1, male2, male3, male4, male5, male6]
      : [female1, female2, female3, female4, female5, female6];

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রোফাইল পিকচার</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="photoId"
            render={({ field }) => (
              <FormItem>
                <FormLabel>
                  আপনার সাথে মানানসই বা সামঞ্জস্যপূর্ণ একটি প্রোফাইল পিকচার
                  বাছাই করুন:
                </FormLabel>
                <FormControl>
                  <div className="flex flex-wrap">
                    {images.map((image, index) => (
                      <div
                        key={index}
                        className="w-1/3 mb-4 flex items-center justify-center relative"
                      >
                        <div
                          className={`border p-12 rounded-3xl cursor-pointer transition-all relative ${
                            form.getValues().photoId === image.src
                              ? "border-[#E25A6F] ring-2 ring-[#E25A6F]"
                              : "border-gray-300"
                          } `}
                          onClick={() => {
                            field.onChange(image.src);
                          }}
                        >
                          <Image
                            src={image}
                            alt={`Profile${index + 1}`}
                            width={120}
                            height={40}
                            priority
                          />
                          {form.getValues().photoId === image.src && (
                            <CheckCircle className="absolute top-4 right-4 text-[#E25A6F]" />
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ReligiousInfo.tsx
"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { madhhabs, religiousIdeologies } from "@/lib/consts";
import { BiodataFormDataProps, ReligiousInfoFormData } from "@/lib/types";
import { religiousInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ReligiousInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ReligiousInfoFormData>({
    resolver: zodResolver(religiousInfoFormData),
    defaultValues: {
      type: biodataFormData?.religiousInfoFormData?.type || "",
      ideology: biodataFormData?.religiousInfoFormData?.ideology || "",
      madhab: biodataFormData?.religiousInfoFormData?.madhab || "",
      praysFiveTimes:
        biodataFormData?.religiousInfoFormData?.praysFiveTimes || "",
      hasQazaPrayers:
        biodataFormData?.religiousInfoFormData?.hasQazaPrayers || "",
      canReciteQuranProperly:
        biodataFormData?.religiousInfoFormData?.canReciteQuranProperly || "",
      avoidsHaramIncome:
        biodataFormData?.religiousInfoFormData?.avoidsHaramIncome || "",
      modestDressing:
        biodataFormData?.religiousInfoFormData?.modestDressing || "",
      followsMahramRules:
        biodataFormData?.religiousInfoFormData?.followsMahramRules || "",
      beliefAboutPirMurshidAndMazar:
        biodataFormData?.religiousInfoFormData?.beliefAboutPirMurshidAndMazar ||
        "",
      practicingSince:
        biodataFormData?.religiousInfoFormData?.practicingSince || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        religiousInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ধর্মীয় লাইফস্টাইল</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormControl>
                    <RadioGroup
                      className="flex"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="1" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              সেরকমভাবে মেনে চলা হয় না
                            </div>
                            <div>(জেনারেল/নন-প্রাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>
                            ১. অনিয়মিতভাবে ৫ ওয়াক্ত বা এর কম সালাত আদায় করা হয়।
                          </div>
                          <div>
                            ২. সকল ক্ষেত্রে হালাল-হারাম বাছাই করা হয় না।
                          </div>
                          <div>৩. মাহরাম-নন মাহরাম মেইনটেইন করা হয় না।</div>
                          <div>
                            ৪. হারাম উপার্জন, ব্যাংকিং সুদ, ফ্রি-মিক্সিং,
                            গান-বাজনা থেকে বিরত থাকা হয় না।
                          </div>
                          <div>
                            ৫. পরিপূর্ন ভাবে ইসলামের বিধিবিধান পালনে তেমন চেষ্টা
                            বা আগ্রহ নেই।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="2" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black">
                              পরিপূর্ণভাবে মেনে চলা হয় না কিন্তু প্রবল ইচ্ছা আছে
                              এবং চেষ্টা করছি
                            </div>
                            <div>(প্রাক্টিসিংয়ের চেষ্টায় আছি)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>
                            ২. হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত থাকছেন।
                          </div>
                          <div>
                            ৩. কিন্তু গান-বাজনা থেকে এখনো দূরে থাকা হয় না।
                          </div>
                          <div>
                            ৪. সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট বা পর্দা এখনো
                            মেনে চলতে পারছেন না।
                          </div>
                          <div>
                            ৫. এর জন্য প্রবল অনুশোচনা কাজ করে এবং পরিপূর্ন ভাবে
                            ইসলামের বিধিবিধান পালনের চেষ্টা করা হয়।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="3" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              জি পরিপূর্ণভাবে মেনে চলি এবং সর্বদা চেষ্টায় থাকি
                            </div>
                            <div>(পূর্ণ ধার্মিক/ প্র্যাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. বিশুদ্ধ ঈমান-আকিদা পোষণ করছেন।</div>
                          <div>২. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>৩. পরিপূর্ণ হালাল উপার্জন করছেন ।</div>
                          <div>
                            ৪. ফরজ, ওয়াজিব ইবাদতের পাশাপাশি সুন্নাত, নফল আমল
                            করার চেষ্টা করেন।
                          </div>
                          <div>৫. গান-বাজনা, নাটক-সিনেমা থেকে দূরে থাকছেন।</div>
                          <div>
                            ৬. পুরুষেরা সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট,
                            ইসলামিক পোশাক মেনে চলেন, নারীরা নিকাব সহ পর্দা
                            করছেন।
                          </div>
                          <div>
                            ৭. বাহিরে পর্দা মেনে চলা অর্থাৎ বেগানা নারী-পুরুষের
                            ক্ষেত্রে চক্ষু অবনত রাখছেন।
                          </div>
                          <div>
                            ৮. মাহরাম-নন মাহরাম মেইনটেইন করেন এবং ফ্রী মিক্সিং
                            এড়িয়ে চলেন।
                          </div>
                          <div>
                            ৯. সকল প্রকার হারাম ও কবীরা গুনাহ থেকে বেঁচে থাকার
                            সর্বাত্মক প্রচেষ্টায় থাকেন।
                          </div>
                          <div>
                            ১০. ইসলাম বিরোধী সকল কাজকে অপছন্দ করেন এবং জীবনটাকে
                            পরিপূর্ণভাবে কোরআন-সুন্নাহ মোতাবেক সাজাতে থাকেন।
                          </div>
                        </Label>
                      </div>
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="ideology"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় কোন মতাদর্শ মেনে চলেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {religiousIdeologies.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="madhab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কোন মাজহাব / মানহাজ অনুসরণ করেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {madhhabs.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="praysFiveTimes"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="hasQazaPrayers"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      আপনার কি নামাজ কাযা হয়?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="canReciteQuranProperly"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="avoidsHaramIncome"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <FormField
              control={form.control}
              name="modestDressing"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                        ? "টাখনুর উপরে কাপড় পরেন কিনা?"
                        : "আপনি কি নিকাব সহ পর্দা করেন?"}
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <>
              <FormField
                control={form.control}
                name="followsMahramRules"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="beliefAboutPirMurshidAndMazar"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="practicingSince"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু
                        করেছেন?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </>
          )}
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/SpousePreferenceInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import {
  familyBackgrounds,
  heights,
  maritalStatuses,
  muslimTypes,
  occupationsList,
  religiousEducationQualities,
  secondMarriageOptions,
  skinTones,
  spouseLocationOptions,
  spouseSpecialCatagories,
} from "@/lib/consts";
import {
  BiodataFormDataProps,
  SpousePreferenceInfoFormData,
} from "@/lib/types";
import { spousePreferenceInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function SpousePreferenceInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<SpousePreferenceInfoFormData>({
    resolver: zodResolver(spousePreferenceInfoFormData),
    defaultValues: {
      age: biodataFormData?.spousePreferenceInfoFormData?.age || "",
      skinTone: biodataFormData?.spousePreferenceInfoFormData?.skinTone || [],
      height: biodataFormData?.spousePreferenceInfoFormData?.height || "",
      educationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.educationalQualification || "",
      religiousEducationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.religiousEducationalQualification || [],
      address: biodataFormData?.spousePreferenceInfoFormData?.address || "",
      maritalStatus:
        biodataFormData?.spousePreferenceInfoFormData?.maritalStatus || [],
      specialCategory:
        biodataFormData?.spousePreferenceInfoFormData?.specialCategory || [],
      religiousType:
        biodataFormData?.spousePreferenceInfoFormData?.religiousType || [],
      occupation:
        biodataFormData?.spousePreferenceInfoFormData?.occupation || [],
      familyBackground:
        biodataFormData?.spousePreferenceInfoFormData?.familyBackground || [],
      secondMarrige:
        biodataFormData?.spousePreferenceInfoFormData?.secondMarrige || "",
      location: biodataFormData?.spousePreferenceInfoFormData?.location || "",
      qualities: biodataFormData?.spousePreferenceInfoFormData?.qualities || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        spousePreferenceInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const spouseSpecialCatagoryOptions = spouseSpecialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">
        যেমন জীবনসঙ্গী আশা করেন
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="age"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত বয়স:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {skinTones.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                        <SelectValue placeholder="কাঙ্খিত উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="educationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousEducationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="address"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত ঠিকানা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {maritalStatuses.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialCategory"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {spouseSpecialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় লাইফস্টাইল:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {muslimTypes.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="occupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {familyBackgrounds.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          {biodataFormData?.primaryInfoFormData?.biodataType === "2" && (
            <FormField
              control={form.control}
              name="secondMarrige"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী
                      আছেন?
                    </FormLabel>
                    <FormControl>
                      <RadioGroup
                        className="w-full flex flex-wrap gap-0"
                        onValueChange={field.onChange}
                        value={field.value}
                      >
                        {secondMarriageOptions.map((x) => (
                          <div
                            key={x.id}
                            className="w-1/4 flex items-center space-x-2 mb-2"
                          >
                            <RadioGroupItem value={x.id} id={x.id} />
                            <Label htmlFor={x.id}>{x.title}</Label>
                          </div>
                        ))}
                      </RadioGroup>
                    </FormControl>
                  </div>

                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="location"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {spouseLocationOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="qualities"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:</div>
                    <div className="text-xs">
                      (অর্থাৎ কাঙ্খিত জীবনসঙ্গীর স্বভাব, দ্বীনদারিতা, চারিত্রীক
                      গুণাবলী কেমন আশা করেন। বিশেষ কোনো কার্যক্রম বা চাওয়া থাকলে
                      জানাতে পারেন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\page.tsx
// --------------------
// File: src/app/(main)/biodata-editor/page.tsx
import { Metadata } from "next";
import BiodataEditor from "./BiodataEditor";

interface BiodataEditorPageProps {
  searchParams: Promise<{ biodataId?: string }>;
}

export const metadata: Metadata = {
  title: "Design your biodata",
};

export default async function BiodataEditorPage({
  searchParams,
}: BiodataEditorPageProps) {
  const { biodataId } = await searchParams;

  //TO:DO get userId from token

  const biodataToEdit = biodataId
    ? null // get from db
    : null;

  return (
    <main className="flex-grow">
      <div className="text-[#1f4f69] flex flex-col items-center justify-center mt-4 mb-12">
        <BiodataEditor biodataToEdit={biodataToEdit} />
      </div>
    </main>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\steps.ts
// --------------------
// File: src/app/(main)/biodata-editor/steps.ts
import { BiodataFormDataProps } from "@/lib/types";
import AddressInfo from "./biodataFormComponents/AddressInfo";
import EducationInfo from "./biodataFormComponents/EducationInfo";
import FamilyInfo from "./biodataFormComponents/FamilyInfo";
import FinalWords from "./biodataFormComponents/FinalWords";
import FirstWords from "./biodataFormComponents/FirstWords";
import GeneralInfo from "./biodataFormComponents/GeneralInfo";
import MarriageInfo from "./biodataFormComponents/MarriageInfo";
import OccupationInfo from "./biodataFormComponents/OccupationInfo";
import PersonalInfo from "./biodataFormComponents/PersonalInfo";
import PrimaryInfo from "./biodataFormComponents/PrimaryInfo";
import ProfilePic from "./biodataFormComponents/ProfilePic";
import ReligiousInfo from "./biodataFormComponents/ReligiousInfo";
import SpousePreferenceInfo from "./biodataFormComponents/SpousePreferenceInfo";

export interface BiodataFormStep {
  title: string;
  component: React.ComponentType<BiodataFormDataProps>;
  key: string;
  disabled: boolean;
  prev?: string;
  next?: string;
}

export const steps: BiodataFormStep[] = [
  {
    title: "কিছু কথা",
    component: FirstWords,
    key: "first-words",
    disabled: true,
    next: "primary-info",
  },
  {
    title: "প্রাথমিক তথ্য",
    component: PrimaryInfo,
    key: "primary-info",
    disabled: true,
    prev: "first-words",
    next: "general-info",
  },
  {
    title: "সাধারণ তথ্য",
    component: GeneralInfo,
    key: "general-info",
    disabled: true,
    prev: "primary-info",
    next: "address-info",
  },
  {
    title: "ঠিকানা",
    component: AddressInfo,
    key: "address-info",
    disabled: true,
    prev: "general-info",
    next: "education-info",
  },
  {
    title: "শিক্ষাগত যোগ্যতা",
    component: EducationInfo,
    key: "education-info",
    disabled: true,
    prev: "address-info",
    next: "occupation-info",
  },
  {
    title: "পেশা",
    component: OccupationInfo,
    key: "occupation-info",
    disabled: true,
    prev: "education-info",
    next: "family-info",
  },
  {
    title: "পারিবারিক তথ্য",
    component: FamilyInfo,
    key: "family-info",
    disabled: true,
    prev: "occupation-info",
    next: "religious-info",
  },
  {
    title: "ধর্মীয় লাইফস্টাইল",
    component: ReligiousInfo,
    key: "religious-info",
    disabled: true,
    prev: "family-info",
    next: "personal-info",
  },
  {
    title: "ব্যক্তিগত তথ্য",
    component: PersonalInfo,
    key: "personal-info",
    disabled: true,
    prev: "religious-info",
    next: "marital-info",
  },
  {
    title: "বিয়ে সংক্রান্ত তথ্য",
    component: MarriageInfo,
    key: "marital-info",
    disabled: true,
    prev: "personal-info",
    next: "spouse-preference-info",
  },
  {
    title: "যেমন জীবনসঙ্গী আশা করেন",
    component: SpousePreferenceInfo,
    key: "spouse-preference-info",
    disabled: true,
    prev: "marital-info",
    next: "profile-pic",
  },
  {
    title: "প্রোফাইল পিকচার",
    component: ProfilePic,
    key: "profile-pic",
    disabled: true,
    prev: "spouse-preference-info",
    next: "final-words",
  },
  {
    title: "শেষ কথা",
    component: FinalWords,
    key: "final-words",
    disabled: true,
    prev: "profile-pic",
  },
];


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\layout.tsx
// --------------------
// File: src/app/(main)/biodatas/layout.tsx
import { ReactNode } from "react";

export default function MainLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return <main className="flex-grow">{children}</main>;
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageAppliedFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageAppliedFilters.tsx

import { X } from "lucide-react";

export default function BiodatasPageAppliedFilters() {
  const appliedFilters = [
    {
      id: 1,
      name: "বায়োডাটার ধরন",
      selected: [
        {
          id: 1,
          name: "পুরুষ",
        },
      ],
    },
    {
      id: 2,
      name: "বৈবাহিক অবস্থা",
      selected: [
        {
          id: 1,
          name: "অবিবাহিত",
        },
        {
          id: 2,
          name: "বিবাহিত",
        },
      ],
    },
  ];

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">আপনি বাছাই করেছেন</div>
      </div>
      <div className="flex flex-col space-y-4">
        {appliedFilters.length > 0 &&
          appliedFilters.map((x) => (
            <div
              key={x.id}
              className="flex flex-col space-y-3 text-black text-xs border border-gray-300 rounded-xl px-6 py-2"
            >
              {x.selected.length > 0 &&
                x.selected.map((y) => (
                  <div key={y.id} className="flex justify-between items-center">
                    <div>{y.name}</div>
                    <X className="text-[#e25a6f] w-4 h-4" />
                  </div>
                ))}
            </div>
          ))}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageCard.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageCard.tsx

"use client";
import male from "@/assets/images/male-5.svg";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Heart } from "lucide-react";
import Image from "next/image";
import { useRouter } from "next/navigation";

export interface BiodatasPageCardProps {
  id: number;
}

export default function BioCard({ id }: BiodatasPageCardProps) {
  const router = useRouter();

  const handleOnClick = () => {
    router.push("/biodatas/asd");
  };
  return (
    <Card
      key={id}
      className="border-none overflow-hidden bg-gradient-to-t from-[#e6f2ff] to-[#fff0f6]"
    >
      <CardContent className="p-4">
        <div className="flex justify-between items-start mb-4">
          <div className="w-1/3">
            <Heart className="w-8 h-8 text-[#E25A6F]" fill="#E25A6F" />
          </div>
          <div className="w-1/3 flex items-center justify-center">
            <Image src={male} alt="Male" width={80} height={40} priority />
          </div>
          <div className="w-1/3 flex flex-col items-end space-y-2">
            <Badge className="text-[#00b754]">Verified</Badge>
            <Badge className="text-[#016ca7]">Seen</Badge>
          </div>
        </div>

        <div className="text-center mb-4 flex items-center justify-center">
          <div className="text-black bg-[#fcfafd] p-3 rounded-md">
            বায়োডাটা নং: 43527
          </div>
        </div>

        <div className="space-y-3 text-black">
          <div className="flex justify-between">
            <span>বৈবাহিক অবস্থা:</span>
            <span>অবিবাহিত</span>
          </div>
          <div className="flex justify-between">
            <span>জন্মসন:</span>
            <span>১৯৯০</span>
          </div>
          <div className="flex justify-between">
            <span>উচ্চতা:</span>
            <span>৫'৩০"</span>
          </div>
          <div className="flex justify-between">
            <span>স্থায়ী ঠিকানা:</span>
            <span>BSC in EEE</span>
          </div>
          <div className="flex justify-between">
            <span>পেশা:</span>
            <span>ইঞ্জিনিয়ার</span>
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button
          className="w-full text-white bg-[#E25A6F]  hover:bg-[#D14A5F]"
          onClick={handleOnClick}
        >
          বায়োডাটা দেখুন
        </Button>
      </CardFooter>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageFilters.tsx

"use client";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { useState } from "react";

export default function BiodatasPageFilters() {
  const [ageRange, setAgeRange] = useState<number[]>([18, 80]);
  const [heightRange, setHeightRange] = useState<number[]>([36, 84]);

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">ফিল্টার করুন</div>
      </div>
      <div className="flex justify-center mb-4">
        <button className="mr-[-1rem] rounded-xl py-3 text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-[#989898] pr-4 pl-6 border border-[#989898]">
          আমাকে খুঁজছে
        </button>
        {/* <button className="mr-[-1rem] rounded-xl py-3 text-[#989898] pl-4 pr-6 border border-[#989898]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমাকে খুঁজছে
        </button> */}
      </div>
      <form className="flex flex-col space-y-2">
        <Accordion type="multiple" className="flex flex-col space-y-2 mb-2">
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বায়োডাটার ধরন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বায়োডাটার ধরন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বৈবাহিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বৈবাহিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বয়স"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বয়স
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{ageRange[0]}</div>
                <Slider
                  value={ageRange}
                  onValueChange={setAgeRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{ageRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="উচ্চতা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              উচ্চতা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{heightRange[0]}</div>
                <Slider
                  value={heightRange}
                  onValueChange={setHeightRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{heightRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="গাত্রবর্ণ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              গাত্রবর্ণ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="স্থায়ী ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              স্থায়ী ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বর্তমান ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বর্তমান ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা মাইগ্রেশন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা মাইগ্রেশন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পেশা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পেশা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পরিবারের আর্থসামাজিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পরিবারের আর্থসামাজিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="মাজহাব/মাসলাহ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              মাজহাব/মাসলাহ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="রক্তের গ্রুপ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              রক্তের গ্রুপ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বিশেষ অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বিশেষ অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </form>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\SearchByBiodataNo.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/SearchByBiodataNo.tsx

import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Search } from "lucide-react";

export default function BiodatasPageSearchByBiodataNo() {
  return (
    <form className="flex items-center space-x-4">
      <div className="w-32">
        <Select>
          <SelectTrigger className="text-[#1f4f69]">
            <SelectValue placeholder="SNM" />
          </SelectTrigger>
          <SelectContent className="bg-white text-[#1f4f69]">
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="all"
            >
              SNM
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="male"
            >
              পুরুষ
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="female"
            >
              নারী
            </SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="relative w-64">
        <div className="space-y-2">
          <Input
            className="w-full px-4 py-2 border rounded-md text-[#1f4f69] selection:bg-[#E25A6F] selection:text-white"
            id="biodataNo"
            type="text"
            placeholder="বায়োডাটা নং"
          />
        </div>
        <button className="absolute right-3 top-1/2 transform -translate-y-1/2">
          <Search className="w-4 h-4 text-gray-400" />
        </button>
      </div>
    </form>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\page.tsx
// --------------------
import BiodatasPageAppliedFilters from "./listPageComponentes/BiodatasPageAppliedFilters";
import BiodatasPageCard from "./listPageComponentes/BiodatasPageCard";
import BiodatasPageFilters from "./listPageComponentes/BiodatasPageFilters";
import BiodatasPageSearchByBiodataNo from "./listPageComponentes/SearchByBiodataNo";

export default function BiodatasPage() {
  return (
    <>
      <div className="mt-12 text-3xl text-center text-black mb-4">
        বায়োডাটা সমূহ
      </div>
      <div className="flex justify-between">
        <BiodatasPageFilters />
        <div className="flex-grow max-w-7xl">
          <div className="flex justify-end items-center mb-6">
            <BiodatasPageSearchByBiodataNo />
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[...Array(6)].map((_, i) => (
              <BiodatasPageCard key={i} id={i} />
            ))}
          </div>
        </div>
        <BiodatasPageAppliedFilters />
      </div>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\page.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/page.tsx
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import AddressInfo from "./viewBioDataComponents/AddressInfo";
import EducationAndOccupationInfo from "./viewBioDataComponents/EducationAndOccupationInfo";
import FamilyInfo from "./viewBioDataComponents/FamilyInfo";
import FooterSection from "./viewBioDataComponents/FooterSection";
import GeneralInfo from "./viewBioDataComponents/GeneralInfo";
import HeaderSection from "./viewBioDataComponents/HeaderSection";
import MarriageInfo from "./viewBioDataComponents/MarriageInfo";
import PersonalInfo from "./viewBioDataComponents/PersonalInfo";
import PrimaryInfo from "./viewBioDataComponents/PrimaryInfo";
import ReligiousInfo from "./viewBioDataComponents/ReligiousInfo";
import SpousePreferenceInfo from "./viewBioDataComponents/SpousePreferenceInfo";

export default function BiodataPage() {
  const tabs = [
    "প্রাথমিক তথ্য",
    "সাধারণ তথ্য",
    "ঠিকানা",
    "শিক্ষা ও পেশা",
    "পারিবারিক তথ্য",
    "ধর্মীয় লাইফস্টাইল",
    "ব্যক্তিগত তথ্য",
    "বিয়ে সংক্রান্ত তথ্য",
    "যেমন জীবনসঙ্গী আশা করেন",
  ];

  return (
    <>
      <HeaderSection />
      <div className="py-12 flex flex-col items-center justify-center space-y-6">
        <div className="text-4xl text-center text-black">সম্পূর্ণ বায়োডাটা</div>
        <Tabs defaultValue="ঠিকানা" className="max-w-7xl">
          <TabsList className="flex flex-wrap h-auto space-x-2 bg-[#f6f6f6] rounded-2xl p-2">
            {tabs.map((tab) => (
              <TabsTrigger
                key={tab}
                value={tab}
                className="data-[state=active]:bg-[#e25a6f] data-[state=active]:text-white text-[#004972] rounded-full px-4 py-2"
              >
                {tab}
              </TabsTrigger>
            ))}
          </TabsList>
        </Tabs>

        <div className="w-full max-w-6xl space-y-6">
          <PrimaryInfo />
          <GeneralInfo />
          <AddressInfo />
          <EducationAndOccupationInfo />
          <FamilyInfo />
          <ReligiousInfo />
          <PersonalInfo />
          <MarriageInfo />
          <SpousePreferenceInfo />
        </div>
      </div>
      <FooterSection />
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/AddressInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function AddressInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ঠিকানা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোথায় বেড়ে উঠেছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\EducationAndOccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/EducationAndOccupationInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function EducationAndOccupationInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          শিক্ষাগত যোগ্যতা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষার ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">জেনারেল</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এস.এস.সি/দাখিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এস.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এইচ.এস.সি/আলিম/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এইচ.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(ডিপ্লোমা):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">ডিপ্লোমা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(অনার্স/ফাজিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অনার্স</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(মাস্টার্স/কামিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>

        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা নিয়ে বিস্তারিত লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাসিক আয়:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FamilyInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function FamilyInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          পারিবারিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পিতা-মাতা উভয়েই জীবিত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনারা ভাই-বোন কতজন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ভাই-বোন কে কি করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">চাচা মামাদের পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">যৌথ পরিবার</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পারিবারিক বিষয়ে আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FooterSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FooterSection.tsx

import { Card, CardContent } from "@/components/ui/card";
import Link from "next/link";
export default function FooterSection() {
  return (
    <div className="py-12 flex flex-col items-center justify-center">
      <div className="text-4xl text-center text-[#004972] mb-4">
        বায়োডাটা পছন্দ হয়েছে?
      </div>
      <div className="text-md text-center text-black mb-8">
        আপনি আগ্রহী হলে আপনার জন্য ৩টি অপশন রয়েছে।
      </div>
      <div className="max-w-6xl flex space-x-6 text-black">
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                প্রাথমিক প্রস্তাব পাঠিয়ে আপনার প্রতি আগ্রহী কিনা জানতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                প্রাথমিক প্রস্তাব পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                ছবি দেখার জন্য অনুরোধ পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                যোগাযোগ তথ্য দেখুন
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        {/* <div>পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন</div>
        <div>সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন</div> */}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/GeneralInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function GeneralInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          সাধারণ তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জন্ম তারিখ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অবিবাহিত</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'১"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ওজন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">রক্তের গ্রুপ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">AB−</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জাতীয়তা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বাংলাদেশী, ফরেইন সিটিজেন
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSection.tsx

import male from "@/assets/images/male-5.svg";
import { Card, CardContent } from "@/components/ui/card";
import {
  CircleChevronDown,
  Copy,
  Heart,
  IdCard,
  Mail,
  Send,
} from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import HeaderShortBio from "./HeaderShortBio";
import HeaderSpousePreferenceRequierment from "./HeaderSpousePreferenceRequierment";

export default function HeaderSection() {
  return (
    <div className="py-12 flex justify-center bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <div className="min-w-7xl flex space-x-8">
        <div className="w-1/4 flex flex-col space-y-8">
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col items-center space-y-4">
                <div className="w-full flex items-start justify-between">
                  <div className="w-1 text-[#00b754] text-md font-semibold">
                    Verified
                  </div>
                  <Image
                    src={male}
                    alt="Male"
                    width={100}
                    height={40}
                    priority
                  />
                  <div className="w-1"></div>
                </div>

                <div className="text-lg">
                  বায়োডাটা কোড: <span className="font-semibold">SNM-392</span>
                </div>

                <div className="flex space-x-4 border border-gray-400 rounded-xl p-4">
                  <Heart className="h-6 w-6" />
                  <IdCard className="h-6 w-6" />
                  <Copy className="h-6 w-6 rotate-90" />
                  <Mail className="h-6 w-6" />
                  <CircleChevronDown className="h-6 w-6 text-[#b52d1f]" />
                </div>
              </div>
            </CardContent>
          </Card>
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col space-y-4">
                <div className="text-xl font-medium text-center mb-4 text-[#b52d1f]">
                  আপনি আগ্রহী?
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col">
                    <div>প্রাথমিক প্রস্তাব পাঠান</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col space-x-2">
                    <div>অভিভাবকের যোগাযোগ তথ্য দেখুন</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <Link
                  href="/tutorial"
                  className="text-xs text-center hover:underline text-blue-300"
                >
                  (বিস্তারিত জানুন)
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className="w-3/4 flex space-x-8">
          <HeaderShortBio />
          <HeaderSpousePreferenceRequierment />
        </div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderShortBio.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderShortBio.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderShortBio() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          পাত্রের সংক্ষিপ্ত বিবরণ
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSpousePreferenceRequierment.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSpousePreferenceRequierment.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderSpousePreferenceRequierment() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          যেমন জীবনসঙ্গী আশা করেন
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/MarriageInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function MarriageInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          বিয়ে সংক্রান্ত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?</div> */}
          <div className="w-1/2">
            বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">
            বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?
          </div> */}
          <div className="w-1/2">
            আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?</div> */}
          <div className="w-1/2">
            যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* Male only */}
          <div className="w-1/2">
            বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে
            পারবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক বা উপহার
            বা অর্থ আশা করবেন কিনা?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পাত্রপক্ষ/পাত্রীপক্ষ অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিয়ে সংক্রান্ত আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PersonalInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PersonalInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ব্যক্তিগত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি দাড়ি পছন্দ?/দাড়ি রেখেছেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পরতে পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মানসিক বা শারীরিক কোনো রোগ আছে কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের কিছু গুণাবলী চিহ্নিত করুন</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শান্ত-শিষ্ট, ধৈর্যশীল, ইমোশনাল
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            আমি একজন সমাজ সেবক, আমি বন্ধ্যা-ইনফার্টিলিটি
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের মতো করে নিজের সম্পর্কে কিছু লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            রাজনীতি নিয়ে আপনার দৃষ্টিভঙ্গি কি? এর সাথে যুক্ত থাকলে বিস্তারিত
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অবসর সময়ে কি করতে পছন্দ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">সামাজিক বা ধর্মীয় কোনো কাজে যুক্ত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কিছু বইয়ের নাম (যদি পড়ে থাকেন)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">দৈনন্দিন খাবারে কি কি পছন্দ এবং অপছন্দ?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কয়েকজন ব্যক্তিত্বের নাম যাদেরকে নিয়মিত ফলো করেন
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার জীবনের লক্ষ্য কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন কোন সোসাল মিডিয়া ব্যবহার করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার আগ্রহ ও শখ কি কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div> */}
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PrimaryInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PrimaryInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          প্রাথমিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটার ধরন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটা কার জন্য তৈরী করছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/ReligiousInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function ReligiousInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ধর্মীয় লাইফস্টাইল
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি কি আপনার জীবনকে পরিপূর্ণ ভাবে ইসলামিক বিধি-বিধান অনুযায়ী
            পরিচালনা করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            জেনারেল/নন-প্রাক্টিসিং
          </div>
        </div>

        {/* Non Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় কোন মতাদর্শ মেনে চলেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সুন্নি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন মাজহাব / মানহাজ অনুসরণ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সালাফি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">প্রতিদিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Try Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি নামাজ কাযা হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Common */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু করেছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Male */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">টাখনুর উপরে কাপড় পরেন কিনা?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Female */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কি নিকাব সহ পর্দা করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/SpousePreferenceInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function SpousePreferenceInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          যেমন জীবনসঙ্গী আশা করেন
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত বয়স:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'২"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিশেষ শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মুহাদ্দিসা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            অবিবাহিত, ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেন, শর্ট ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় লাইফস্টাইল:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আল্লাহ যাদেরকে গাঢ় ত্বক বা কালো বর্ণ দিয়েছেন, এরকম পাত্রীর প্রতি
            আপনি আগ্রহী?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div> */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শহরে বসবাসকারী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardLeftNav.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardLeftNav.tsx
import profilePic from "@/assets/images/profile-pic.png";
import { Separator } from "@/components/ui/separator";
import Image from "next/image";

export default function DashboardLeftNav() {
  return (
    <div className="py-12 w-72 flex flex-col items-center space-y-1 bg-[#5b8eaa]">
      <Image
        src={profilePic}
        alt="Male"
        width={80}
        height={40}
        priority
        className="bg-[#77a1b8] p-4 rounded-full"
      />
      <div className="p-2">আব্দুল্লাহ বিন আব্দুর রাজ্জাক</div>
      <div className="mb-4 p-3 bg-[#c6d8e1] text-black rounded-xl">
        বায়োডাটা নং: <span className="font-semibold">43527</span>
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        বায়োডাটা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        নোটিফিকেশন
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        পছন্দের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        শর্টলিস্টের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        শর্টলিস্টের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        যোগাযোগ তথ্যের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        টোকেন
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        বিবাহ সম্পন্ন
      </div>
      <Separator className="bg-white my-4" />
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        জিজ্ঞাসা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        অভিযোগ
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        পরামর্শ
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        মন্তব্য
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainBioStatus.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainBioStatus.tsx
import { Slider } from "@/components/ui/slider";

export default function DashboardMainBioStatus() {
  return (
    <div className="bg-[#f2f4fc] p-8 flex flex-col space-y-2 rounded-xl">
      <div className="text-[#005381] text-center text-2xl">বায়োডাটা</div>
      <div className="text-xs text-[#8c8e92] text-center">
        বায়োডাটা পাবলিশ হয়েছে ৫ নভেম্বর, ২০২৪
      </div>
      <div className="flex space-x-6 text-black mt-4">
        <div className="flex flex-col items-center bg-[#e7ecf6] p-6 space-y-6 rounded-xl">
          <div className="text-lg">বায়োডাটা স্ট্যাটাস</div>
          <div className="flex">
            <div className="py-4 rounded-3xl mr-[-2rem] px-6 bg-[#c65c5c] text-white z-10">
              প্রাইভেট
            </div>
            <div className="py-4 rounded-3xl pr-6 pl-12 bg-[#d9d9d9] text-[#777] ">
              পাবলিক
            </div>
            {/* <div className="py-4 rounded-3xl mr-[-2rem] pl-6 pr-12 bg-[#d9d9d9] text-[#777]">
                প্রাইভেট
              </div>
              <div className="py-4 rounded-3xl px-6 bg-[#c65c5c] text-white z-10">
                পাবলিক
              </div> */}
          </div>
        </div>
        <div className="w-72 flex flex-col items-center bg-[#e7ecf6] p-6 space-y-6 rounded-xl">
          <div className="text-lg">বায়োডাটা সম্পূর্ণতা</div>
          <Slider value={[70]} min={0} max={100} step={1} className="w-full" />
          <div>৭০%</div>
        </div>
        <div className="flex flex-col items-center space-y-6">
          <div className="w-48 p-4 bg-[#5b8eaa] rounded-xl text-white text-center">
            বায়োডাটা দেখুন
          </div>
          <div className="w-48 p-4 bg-[#5b8eaa] rounded-xl text-white text-center">
            বায়োডাটা এডিট করুন
          </div>
        </div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainContactUs.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainContactUs.tsx
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Textarea } from "@/components/ui/textarea";

export default function DashboardMainContactUs() {
  const tabs = ["জিজ্ঞাসা", "অভিযোগ", "পরামর্শ", "মন্তব্য"];

  return (
    <Tabs defaultValue="জিজ্ঞাসা" className="bg-[#f2f4fc] p-4 rounded-xl gap-0">
      <TabsList className="bg-[#5b8eaa] text-white p-0">
        {tabs.map((x) => (
          <TabsTrigger
            key={x}
            className="p-0 data-[state=active]:bg-[#f2f4fc] data-[state=active]:text-black"
            value={x}
          >
            <div className="px-4 py-2">{x}</div>
          </TabsTrigger>
        ))}
      </TabsList>
      {tabs.map((x) => (
        <TabsContent key={x} value={x}>
          <ContactUsCard />
        </TabsContent>
      ))}
    </Tabs>
  );
}

export function ContactUsCard() {
  return (
    <Card className="bg-transparent border-none shadow-none p-4">
      <CardContent className="flex p-0 items-center space-x-8">
        <Textarea
          className="bg-white text-black selection:bg-[#E25A6F] selection:text-white"
          id="comment"
        />
        <Button className="bg-[#5b8eaa] text-white">Send</Button>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainContent.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainContent.tsx
import DashboardMainBioStatus from "./DashboardMainBioStatus";
import DashboardMainContactUs from "./DashboardMainContactUs";
import DashboardMainMyActivityStatus from "./DashboardMainMyActivityStatus";
import DashboardMainMyBioStatus from "./DashboardMainMyBioStatus";
import DashboardMainNotifications from "./DashboardMainNotifications";

export default function DashboardMainContent() {
  return (
    <div className="py-12 flex flex-col space-y-8 max-w-7xl">
      <DashboardMainBioStatus />
      <div className="flex justify-center space-x-16 text-black">
        <DashboardMainMyActivityStatus />
        <DashboardMainMyBioStatus />
      </div>
      <DashboardMainNotifications />
      <DashboardMainContactUs />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainMyActivityStatus.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainMyActivityStatus.tsx
export default function DashboardMainMyActivityStatus() {
  return (
    <div className="w-96 bg-[#f2f4fc] p-8 flex flex-col space-y-4 rounded-xl">
      <div className="text-2xl text-[#005381] text-center mb-8">
        আপনার বায়োডাটা সর্বমোট
      </div>
      <div className="flex justify-between">
        <div>ভিউ হয়েছে</div>
        <div className="w-6 text-center">১২</div>
      </div>
      <div className="flex justify-between">
        <div>পছন্দের তালিকায় রেখেছে</div>
        <div className="w-6 text-center">৮</div>
      </div>
      <div className="flex justify-between">
        <div>শর্টলিস্টে রেখেছে</div>
        <div className="w-6 text-center">৫</div>
      </div>
      <div className="flex justify-between">
        <div>প্রাথমিক প্রস্তাব এসেছে</div>
        <div className="w-6 text-center">১২</div>
      </div>
      <div className="flex justify-between">
        <div>যোগাযোগ তথ্য নিয়েছে</div>
        <div className="w-6 text-center">৩</div>
      </div>
      <div className="flex justify-between">
        <div>রিপোর্ট এসেছে</div>
        <div className="w-6 text-center">৩</div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainMyBioStatus.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainMyBioStatus.tsx
export default function DashboardMainMyBioStatus() {
  return (
    <div className="w-96 bg-[#f2f4fc] p-8 flex flex-col space-y-4 rounded-xl">
      <div className="text-2xl text-[#005381] text-center mb-8">
        আপনি সর্বমোট বায়োডাটা
      </div>
      <div className="flex justify-between">
        <div>পছন্দের তালিকায় রেখেছেন</div>
        <div className="w-6 text-center">৮</div>
      </div>
      <div className="flex justify-between">
        <div>শর্টলিস্টে রেখেছেন</div>
        <div className="w-6 text-center">৮</div>
      </div>
      <div className="flex justify-between">
        <div>প্রাথমিক প্রস্তাব পাঠিয়েছেন</div>
        <div className="w-6 text-center">৫</div>
      </div>
      <div className="flex justify-between">
        <div>যোগাযোগ তথ্য নিয়েছেন </div>
        <div className="w-6 text-center">৩</div>
      </div>
      <div className="flex justify-between">
        <div>রিপোর্ট করেছেন</div>
        <div className="w-6 text-center">৩</div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainNotifications.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainNotifications.tsx

export default function DashboardMainNotifications() {
  const notiication = [
    {
      id: 1,
      description: "নোটিফিকেশন 1",
    },
    {
      id: 2,
      description: "নোটিফিকেশন 2",
    },
  ];

  return (
    <div className="bg-[#f2f4fc] p-8 flex flex-col space-y-4 rounded-xl text-black">
      <div className="text-[#005381] text-center text-2xl mb-4">নোটিফিকেশন</div>
      {notiication &&
        notiication.map((x) => (
          <div key={x.id} className="bg-[#e8e8ed] mx-8 p-2 rounded-md text-sm">
            {x.description}
          </div>
        ))}
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardRightSection.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardRightSection.tsx
export default function DashboardRightSection() {
  return (
    <div className="py-12 mr-8 flex flex-col items-center space-y-6">
      <div className="p-10 bg-[#f9f3f9] rounded-3xl flex flex-col items-center justify-center space-y-4">
        <div className="text-black text-center">আপনার সর্বমোট টোকেন সংখ্যা</div>
        <div className="text-8xl text-[#ad0000] font-semibold">১</div>
        <div className="px-6 py-4 bg-[#3c4652] rounded-md">টোকেন কিনুন</div>
      </div>
      <div className="p-10 bg-[#f9f3f9] rounded-3xl flex flex-col items-center justify-center space-y-4">
        <div className="text-black text-center">
          আপনার কি বিবাহ সম্পন্ন হয়েছে?
        </div>
        <div className="px-16 py-4 bg-[#5b8eaa] rounded-md">হ্যা</div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\page.tsx
// --------------------
// File: src/app/(main)/dashboard/page.tsx
"use client";
import { useAppSelector } from "@/redux/hooks";
import { redirect } from "next/navigation";
import DashboardLeftNav from "./DashboardLeftNav";
import DashboardMainContent from "./DashboardMainContent";
import DashboardRightSection from "./DashboardRightSection";

export default function DashboardPage() {
  const user = useAppSelector((state) => state.auth.user);
  const token = useAppSelector((state) => state.auth.acesstoken);
  console.log(user);
  if (!user || !token) {
    redirect("/login");
  }
  return (
    <main className="flex justify-between flex-grow bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <DashboardLeftNav />

      <DashboardMainContent />
      <DashboardRightSection />
    </main>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\layout.tsx
// --------------------
// File: src/app/(main)/layout.tsx
import { Footer } from "@/components/footer";
import { Navbar } from "@/components/navbar";
import { ReactNode } from "react";

export default function MainLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <div className="flex flex-col min-h-screen bg-white">
      <Navbar />
      {children}
      <Footer />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\tutorial\page.tsx
// --------------------
// File: src/app/(main)/tutorial/page.tsx
const Page = () => {
  return (
    <div>
      <h1>This is Page component</h1>
    </div>
  );
};

export default Page;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\favicon.png
// --------------------
�PNG

   IHDR           ½"   sRGB ���  �IDATHK�V	PUe������Mȥ�u,��1Qf25M��}JSS) �QpI1-�\��r�6&wSGs�Q-DӔ2AA��x����/<|<�ٝ��޽�?�����s�#�ŕ����kPSo�,	�C�d��-�\�(��v������k��M�u�qz�u�¼dt��"�S�E�Pl��J��T����C�I?x�~�/�?w0[���G�����a������YZ7)V(����{����'�R�:�LߕG{.��O�����a�>.d��:L���s�� ��@����1*v�0�OG�9Hp Tl�AJ�%�,�R��:-t�:"8=����9Ag
+�����#��%
(��Ԛ��K�N#!������j#�-v0���VQ�5��@�D���0���T+�,���L�.,ؓO�N�h:���],6��i$����hB�S����R��ƽ0�q��U���.%���H���A3'�o�֒����Q a![��K�M�&h$��zi����\��ͧioA$Q�Y���U�S����;n �fOr1�=%Y�+�A��=�y&_�h/��3� o/ݦH��L�pM��J&%�9D�\�&@U�Wd�+P���k��֏���V����n+DL���ƝgD�	�"�w|��t�{D����ԡ㗫��0��]���- @�m$0�=b�go�we?X��d��� �!r�2�v�)m={��*����5#�c=�&��A�)n�jr�"ù|UL�1]�4�]�����Œ���T	p��,�%��E���6�^���tZf*S>"sQ�ZD��j����\2�m|m���V�m�%�%�" ���޶��$�͎��z#cDO�t�"�E�
?_DnZ�*��.ІS�<z�;�v��w�	ܚ���:���}���_���yE<� Vr���������k�2< Ao��q�%����V����N�7� �<$h$Dm�؅@�%�����+�[hG�5c!)F�Z�r���׹c}��@\�`�3.��i���q 9"�-��K��l
��Ӟ댭S�� w27QåkjZ�$��ڠ�1�(�!{�#8�(MIQ�ٷBޟ��,؝Ok�]s԰}�x'ے�I�Q�(���AhZ�>$�8�*�����{E`���m�\�)���� ��FU��_�J��r v�׽�D�����͜��[W�3���]�-���8|���P�¹U��ز�ed�S�S&�� r�N�ѫ圀�����d[���l�U��
GؚTa�Z{�/X���Ɇ��D��}�j���~?l�):�g9�b�$ռ�̌����(��+����`�� ����`�ا]n�qp=4P���]����DX8�V�v����y���+�Be��7c�`��g[��.���Ⳁ��?c� &|G|$`J�F��QN��>���ޮU�<$o�������m�g��G��r2�N����� ��z��NF���MVܩk��X�Y�l�����킪5[�t�2�� x�d�g^.���FQ�.��쌀V��Ʊ�C�b�+Y>o%�+��8���<B7*��j���8��SQ8:���[
���Gb�U������Ow�,���2��A6���1�8옶�h�o��#�-w�gd��DQ� ���q2�`7�@Z�K�v���E�	��~�
��
A��}�����9��xa��    IEND�B`�

// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\globals.css
// --------------------
/* File: src/app/globals.css */
@import "tailwindcss";

@plugin "tailwindcss-animate";

@custom-variant dark (&:is(.dark *));

:root {
  --background: hsl(0 0% 100%);
  --foreground: hsl(0 0% 3.9%);
  --card: hsl(0 0% 100%);
  --card-foreground: hsl(0 0% 3.9%);
  --popover: hsl(0 0% 100%);
  --popover-foreground: hsl(0 0% 3.9%);
  --primary: hsl(0 0% 9%);
  --primary-foreground: hsl(0 0% 98%);
  --secondary: hsl(0 0% 96.1%);
  --secondary-foreground: hsl(0 0% 9%);
  --muted: hsl(0 0% 96.1%);
  --muted-foreground: hsl(0 0% 45.1%);
  --accent: hsl(0 0% 96.1%);
  --accent-foreground: hsl(0 0% 9%);
  --destructive: hsl(0 84.2% 60.2%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(0 0% 89.8%);
  --input: hsl(0 0% 89.8%);
  --ring: hsl(0 0% 3.9%);
  --chart-1: hsl(12 76% 61%);
  --chart-2: hsl(173 58% 39%);
  --chart-3: hsl(197 37% 24%);
  --chart-4: hsl(43 74% 66%);
  --chart-5: hsl(27 87% 67%);
  --radius: 0.6rem;
  --sidebar: hsl(0 0% 98%);
  --sidebar-foreground: hsl(240 5.3% 26.1%);
  --sidebar-primary: hsl(240 5.9% 10%);
  --sidebar-primary-foreground: hsl(0 0% 98%);
  --sidebar-accent: hsl(240 4.8% 95.9%);
  --sidebar-accent-foreground: hsl(240 5.9% 10%);
  --sidebar-border: hsl(220 13% 91%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
}

.dark {
  --background: hsl(0 0% 3.9%);
  --foreground: hsl(0 0% 98%);
  --card: hsl(0 0% 3.9%);
  --card-foreground: hsl(0 0% 98%);
  --popover: hsl(0 0% 3.9%);
  --popover-foreground: hsl(0 0% 98%);
  --primary: hsl(0 0% 98%);
  --primary-foreground: hsl(0 0% 9%);
  --secondary: hsl(0 0% 14.9%);
  --secondary-foreground: hsl(0 0% 98%);
  --muted: hsl(0 0% 14.9%);
  --muted-foreground: hsl(0 0% 63.9%);
  --accent: hsl(0 0% 14.9%);
  --accent-foreground: hsl(0 0% 98%);
  --destructive: hsl(0 62.8% 30.6%);
  --destructive-foreground: hsl(0 0% 98%);
  --border: hsl(0 0% 14.9%);
  --input: hsl(0 0% 14.9%);
  --ring: hsl(0 0% 83.1%);
  --chart-1: hsl(220 70% 50%);
  --chart-2: hsl(160 60% 45%);
  --chart-3: hsl(30 80% 55%);
  --chart-4: hsl(280 65% 60%);
  --chart-5: hsl(340 75% 55%);
  --sidebar: hsl(240 5.9% 10%);
  --sidebar-foreground: hsl(240 4.8% 95.9%);
  --sidebar-primary: hsl(224.3 76.3% 48%);
  --sidebar-primary-foreground: hsl(0 0% 100%);
  --sidebar-accent: hsl(240 3.7% 15.9%);
  --sidebar-accent-foreground: hsl(240 4.8% 95.9%);
  --sidebar-border: hsl(240 3.7% 15.9%);
  --sidebar-ring: hsl(217.2 91.2% 59.8%);
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
  --color-sidebar-ring: var(--sidebar-ring);
  --color-sidebar-border: var(--sidebar-border);
  --color-sidebar-accent-foreground: var(--sidebar-accent-foreground);
  --color-sidebar-accent: var(--sidebar-accent);
  --color-sidebar-primary-foreground: var(--sidebar-primary-foreground);
  --color-sidebar-primary: var(--sidebar-primary);
  --color-sidebar-foreground: var(--sidebar-foreground);
  --color-sidebar: var(--sidebar);
  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }

  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
  }
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\HomeSearchBiodata.tsx
// --------------------
// File: src/app/HomeSearchBiodata.tsx

"use client";

import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Slider } from "@/components/ui/slider";
import { useRouter } from "next/navigation";
import { MouseEvent, useState } from "react";

export function HomeSearchBiodata() {
  const router = useRouter();
  const [range, setRange] = useState<number[]>([18, 80]);

  const handleSearchClick = (event: MouseEvent<HTMLButtonElement>) => {
    event.preventDefault();
    router.push("/biodatas");
  };

  return (
    <form className="bg-white p-8 shadow-lg flex flex-wrap">
      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="biodataType"
        >
          আমি খুঁজছি
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="আমি খুঁজছি" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল বায়োডাটা</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="maritalStatus"
        >
          বৈবাহিক অবস্থা
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="বৈবাহিক অবস্থা" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল অবস্থা</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="address"
        >
          স্থায়ী ঠিকানা
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="স্থায়ী ঠিকানা" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল ঠিকানা</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="w-1/3 space-y-2 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="religious"
        >
          ধর্মীয় লাইফস্টাইল
        </Label>
        <Select>
          <SelectTrigger className="w-full border rounded-md focus:ring-2 focus:ring-blue-400">
            <SelectValue placeholder="ধর্মীয় লাইফস্টাইল" />
          </SelectTrigger>
          <SelectContent>
            <SelectItem value="all">সকল</SelectItem>
            <SelectItem value="male">পুরুষ</SelectItem>
            <SelectItem value="female">নারী</SelectItem>
          </SelectContent>
        </Select>
      </div>
      <div className="w-1/3 space-y-3 p-2">
        <Label
          className="block font-medium text-[#1f4f69] text-center"
          htmlFor="religious"
        >
          বয়স
        </Label>
        <div className="flex items-center space-x-1">
          <div className="text-[#1f4f69]">{range[0]}</div>
          <Slider
            value={range}
            onValueChange={setRange}
            min={18}
            max={80}
            step={1}
            className="w-full"
          />
          <div className="text-[#1f4f69]">{range[1]}</div>
        </div>
      </div>

      <div className="w-1/3 space-y-1 p-2">
        <p className="text-center text-sm text-gray-700">বিসমিল্লাহ</p>
        <Button
          className="w-full p-2 bg-[#E25A6F] text-white rounded hover:bg-[#D14A5F]"
          onClick={handleSearchClick}
        >
          খুঁজুন
        </Button>
      </div>
    </form>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\interfaces\biodata.interfaces.ts
// --------------------
export type BiodataStatus =
  | "draft"
  | "completed"
  | "pendingApproval"
  | "approved";

export interface CreateBiodataResponse {
  id: string;
  status: BiodataStatus;
}

export interface UpdateBiodataResponse {
  id: string;
  status: BiodataStatus;
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\layout.tsx
// --------------------
// File: src/app/layout.tsx
import RootProvider from "@/lib/provider/RootProvider";
import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";
import { Inter } from "next/font/google";
import { ReactNode } from "react";
import { Toaster } from "sonner";
import "./globals.css";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: {
    template: "%s - Sohoz Nikah",
    absolute: "Sohoz Nikah",
  },
  description:
    "Sohoz Nikah is the easiest way to create and search life partners.",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <body className={inter.className}>
        <RootProvider>
          <ThemeProvider
            attribute="class"
            defaultTheme="system"
            enableSystem
            disableTransitionOnChange
          >
            {children}
            <Toaster />
          </ThemeProvider>
        </RootProvider>
      </body>
    </html>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\loading.tsx
// --------------------
// File: src/app/loading.tsx

import { Loader2 } from "lucide-react";

export default function Loading() {
  return (
    <div className="flex items-center justify-center min-h-screen bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <Loader2 className="animate-spin text-[#E25A6F]" size={64} />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\page.tsx
// --------------------
// File: src/app/page.tsx
import { Footer } from "@/components/footer";
import { Navbar } from "@/components/navbar";
import { HomeSearchBiodata } from "./HomeSearchBiodata";

export default function HomePage() {
  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <Navbar />

      <main className="flex-grow max-w-7xl mt-12 mx-auto flex flex-col text-[#1f4f69]">
        <div className="text-3xl text-center mb-8">
          বিবাহযোগ্য মুসলিম পাত্র-পাত্রী খোঁজার সহজ মাধ্যম
        </div>

        <p className="text-center mb-4">
          Bangladesh's Trusted Matrimony Platform
        </p>

        <div className="text-center mb-12">
          <blockquote className="italic text-[#b1466e]">
            "তোমরা সহজ করো এবং কঠিন করো না।
            <br />
            সুসংবাদ দাও এবং বিরক্ত করো না।"
          </blockquote>
          <p className="text-gray-500 mt-2">(বুখারী ৩০৩৮)</p>
        </div>

        <div className="flex items-center justify-center">
          <div className="text-2xl text-center mb-4 pb-4 border-b-4 border-[#1f4f69]">
            জীবনসঙ্গী খুঁজুন
          </div>
        </div>
        <div className="p-4 bg-gradient-to-r from-[#dce9f0] to-[#fbe6e9]">
          <HomeSearchBiodata />
        </div>
      </main>

      <Footer />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\services\base.ts
// --------------------
import axios from "axios";

// Create an axios instance
export const http = axios.create({
  withCredentials: true,
  baseURL: process.env.NEXT_PUBLIC_API_URL, // Replace with your base URL
  headers: {
    "Content-Type": "application/json", // Default headers
  },
});

http.interceptors.request.use(
  function (config) {
    // Do something before request is sent
    console.log("request interceptor");
    return config;
  },
  function (error) {
    // Do something with request error
    console.log("request interceptor error");
    return Promise.reject(error);
  }
);

http.interceptors.response.use(
  function (response) {
    // Any status code that lie within the range of 2xx cause this function to trigger
    // Do something with response data
    console.log("response interceptor");
    return response;
  },
  function (error) {
    // Any status codes that falls outside the range of 2xx cause this function to trigger
    // Do something with response error
    console.log("response interceptor error");
    if (error.response?.status === 401) {
      // Handle session expiry globally
      // useUserStore.getState().setUser(null);
      // useSessionStore.getState().setIsAdmin(false);
      // useSessionStore.getState().setIsAuthenticated(false);
    }
    return Promise.reject(error);
  }
);


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\services\biodata.service.ts
// --------------------
import {
  FirstWordsFormData,
  GeneralInfoFormData,
  PrimaryInfoFormData,
} from "@/lib/types";
import {
  CreateBiodataResponse,
  UpdateBiodataResponse,
} from "../interfaces/biodata.interfaces";
import { http } from "./base";

export const createBiodata = async (
  data: FirstWordsFormData
): Promise<CreateBiodataResponse> => {
  //   const result = await http.post<CreateBiodataResponse>(`/biodatas`);
  //   return result.data;
  console.log(data);
  return new Promise((resolve) => {
    setTimeout(() => {
      resolve({
        id: "12345",
        status: "draft",
      });
    }, 1000); // Simulate network delay
  });
};

export const updatePrimaryInfo = async (
  id: string,
  data: PrimaryInfoFormData
): Promise<UpdateBiodataResponse> => {
  const result = await http.patch<UpdateBiodataResponse>(
    `/biodatas/${id}/primary-info`
  );
  return result.data;
};

export const updateGeneralInfo = async (
  id: string,
  data: GeneralInfoFormData
): Promise<UpdateBiodataResponse> => {
  const result = await http.patch<UpdateBiodataResponse>(
    `/biodatas/${id}/general-info`
  );
  return result.data;
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\BiodataEditor.tsx
// --------------------
// File: src/app/(main)/biodata-editor/BiodataEditor.tsx
"use client";

import { createBiodata } from "@/app/services/biodata.service";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";
import { useSearchParams } from "next/navigation";
import { useCallback, useMemo } from "react";
import Breadcrumbs from "./biodataFormComponents/Breadcrumbs";
import { steps } from "./steps";

interface BiodataEditorProps {
  biodataToEdit: any | null;
}

export default function BiodataEditor({ biodataToEdit }: BiodataEditorProps) {
  const dispatch = useAppDispatch();
  const biodataFormData = useAppSelector(
    (state) => state.biodata.biodataFormData
  );

  const searchParams = useSearchParams();
  const currentStepKey = searchParams.get("step") || steps[0].key;
  const currentStep = useMemo(
    () => steps.find((x) => x.key === currentStepKey),
    [currentStepKey]
  );

  const setStep = useCallback(
    (key: string) => {
      const newSearchParams = new URLSearchParams(searchParams);
      newSearchParams.set("step", key);
      window.history.pushState(null, "", `?${newSearchParams.toString()}`);
    },
    [searchParams]
  );

  const FormComponent = useMemo(() => currentStep?.component, [currentStep]);

  const handleFormDataUpdate = useCallback(
    (data: any) => {
      // Create a clean copy of the data without any circular references
      const cleanData = JSON.parse(JSON.stringify(data));

      dispatch(
        setBiodataFormData({
          key: `${currentStepKey}FormData`,
          data: cleanData,
        })
      );
    },
    [dispatch, currentStepKey]
  );

  const handleSave = useCallback(async () => {
    if (!currentStep) return;

    switch (currentStep.key) {
      case "first-words":
        // Create a clean copy of the data before sending to API
        const cleanData = JSON.parse(
          JSON.stringify(biodataFormData?.firstWordsFormData)
        );
        await createBiodata(cleanData);
        setStep(currentStep.next);
        break;
      default:
        setStep(currentStep.next);
        break;
    }
  }, [currentStep, biodataFormData, setStep]);

  if (!FormComponent) return null;

  return (
    <>
      <Breadcrumbs currentStep={currentStep?.key} setCurrentStep={setStep} />
      <div className="mt-8 w-full">
        <FormComponent
          biodataFormData={biodataFormData}
          setBiodataFormData={handleFormDataUpdate}
          handleSave={handleSave}
          currentStep={currentStep}
          setCurrentStep={setStep}
        />
      </div>
      {process.env.NODE_ENV === "development" && (
        <pre className="text-sm bg-white p-2 rounded-md shadow">
          {JSON.stringify(biodataFormData, null, 2)}
        </pre>
      )}
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/AddressInfo.tsx

"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { citizenshipOptions, locations, types } from "@/lib/consts";
import { AddressInfoFormData, BiodataFormDataProps } from "@/lib/types";
import { addressInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function AddressInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<AddressInfoFormData>({
    resolver: zodResolver(addressInfoFormData),
    defaultValues: {
      addresses: biodataFormData?.addressInfoFormData?.addresses || [
        {
          type: "",
          location: "",
          state: "",
          city: "",
          detail: "",
          country: "",
          cityzenshipStatus: "",
        },
      ],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "addresses",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        addressInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ঠিকানা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`addresses.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার ধরন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="ঠিকানার ধরন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {types.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.location`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      অবস্থান ধরণ:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="অবস্থান ধরণ:" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {locations.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.state`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "স্টেট"
                      : "স্থায়ী জেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        {label}:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.city`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "শহর"
                      : "স্থায়ী উপজেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        <div>{label}:</div>
                        <div className="text-xs">(যদি থাকে)</div>
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.detail`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার বিস্তারিত:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            type="text"
                            placeholder="ঠিকানার বিস্তারিত"
                          />
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.country`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        দেশের নাম:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              id="emailMobileNumber"
                              type="text"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.cityzenshipStatus`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        সিটিজেনশিপ আছে?
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <RadioGroup
                              className="w-full flex flex-wrap gap-0 min-h-12"
                              onValueChange={field.onChange}
                              value={field.value}
                            >
                              {citizenshipOptions.map((x) => (
                                <div
                                  key={x.id}
                                  className="w-1/3 flex items-center space-x-2"
                                >
                                  <RadioGroupItem value={x.id} id={x.id} />
                                  <Label htmlFor={x.id}>{x.title}</Label>
                                </div>
                              ))}
                            </RadioGroup>
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
            </div>
          ))}

          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                location: "",
                state: "",
                city: "",
                detail: "",
                country: "",
                cityzenshipStatus: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ঠিকানা যোগ করুন</span>
          </Button>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\Breadcrumbs.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/Breadcrumbs.tsx

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
} from "@/components/ui/breadcrumb";
import { steps } from "../steps";

interface BreadcrumbsProps {
  currentStep: string;
  setCurrentStep: (step: string) => void;
}

export default function Breadcrumbs({
  currentStep,

  setCurrentStep,
}: BreadcrumbsProps) {
  return (
    <Breadcrumb className="max-w-6xl bg-[#f6f6f6] rounded-2xl p-2">
      <BreadcrumbList className="flex justify-center">
        {steps.map((step) => (
          <BreadcrumbItem
            key={step.key}
            className="text-[#004972] rounded-full"
          >
            {step.key === currentStep ? (
              <BreadcrumbPage className="bg-[#e25a6f] text-white px-3 py-2 rounded-full">
                {step.title}
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink
                asChild
                className="hover:text-[#e25a6f] px-3 py-2 cursor-pointer"
              >
                <button onClick={() => setCurrentStep(step.key)}>
                  {step.title}
                </button>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        ))}
      </BreadcrumbList>
    </Breadcrumb>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\EducationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/EducationInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { educationTypes, religiousEducationQualities } from "@/lib/consts";
import { BiodataFormDataProps, EducationInfoFormData } from "@/lib/types";
import { educationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function EducationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<EducationInfoFormData>({
    resolver: zodResolver(educationInfoFormData),
    defaultValues: {
      type: biodataFormData?.educationInfoFormData?.type || "",
      highestDegree:
        biodataFormData?.educationInfoFormData?.highestDegree || "",
      degrees:
        biodataFormData?.educationInfoFormData?.degrees?.length > 0
          ? biodataFormData?.educationInfoFormData?.degrees.map((x) => {
              return {
                name: x.name,
                passYear: x.passYear,
                group: x.group,
                institute: x.institute,
              };
            })
          : [{ name: "", passYear: "", group: "", institute: "" }],
      religiousEducation:
        biodataFormData?.educationInfoFormData?.religiousEducation || [],
      detail: biodataFormData?.educationInfoFormData?.detail || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        educationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "degrees",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">শিক্ষাগত যোগ্যতা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষার ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="শিক্ষার ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {educationTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="highestDegree"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার সর্বোচ্চ শিক্ষাগত ডিগ্রীর নাম:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="text-[#E25A6F]">
            মাধ্যমিক পর্যায় থেকে শুরু করে এখন পর্যন্ত যেসকল ডিগ্রী অর্জন করেছেন
            বা চলমান রয়েছে সেগুলো নিচে প্লাস বাটন চাপ দিয়ে ধাপে ধাপে যুক্ত করুন।
            কোনো ডিগ্রী না থাকলে খালি রাখুন।
          </div>
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`degrees.${index}.name`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ডিগ্রীর নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            placeholder="ডিগ্রীর নাম"
                          />
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.passYear`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পাশের সন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পাশের সন"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.group`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বিভাগ/বিষয়:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বিভাগ/বিষয়"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.institute`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      শিক্ষা প্রতিষ্ঠানের নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="শিক্ষা প্রতিষ্ঠানের নাম"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                name: "",
                passYear: "",
                group: "",
                institute: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ডিগ্রী যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="religiousEducation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value?.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষা সম্পর্কিত আরো কিছু জানাতে চাইলে নিচে লিখুন। অন্যথায়
                    খালি রাখুন।
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FamilyInfo.tsx

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { familyBackgrounds, familyTypes, siblingTypes } from "@/lib/consts";
import { BiodataFormDataProps, FamilyInfoFormData } from "@/lib/types";
import { familyInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function FamilyInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FamilyInfoFormData>({
    resolver: zodResolver(familyInfoFormData),
    defaultValues: {
      parentsAlive: biodataFormData?.familyInfoFormData?.parentsAlive || "",
      fatherOccupation:
        biodataFormData?.familyInfoFormData?.fatherOccupation || "",
      motherOccupation:
        biodataFormData?.familyInfoFormData?.motherOccupation || "",
      siblings: biodataFormData?.familyInfoFormData?.siblings || [],
      fatherSideDetail:
        biodataFormData?.familyInfoFormData?.fatherSideDetail || "",
      motherSideDetail:
        biodataFormData?.familyInfoFormData?.motherSideDetail || "",
      familyType: biodataFormData?.familyInfoFormData?.familyType || "",
      familyBackground:
        biodataFormData?.familyInfoFormData?.familyBackground || "",
      livingCondition:
        biodataFormData?.familyInfoFormData?.livingCondition || "",
      wealthDescription:
        biodataFormData?.familyInfoFormData?.wealthDescription || "",
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "siblings",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        familyInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পারিবারিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="parentsAlive"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পিতা-মাতা উভয়েই জীবিত আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনার পিতা-মাতা উভয়েই জীবিত আছেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`siblings.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ভাই/বোন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center gap-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                              <SelectValue placeholder="ভাই/বোন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {siblingTypes.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.occupation`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পেশা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পেশা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.maritalStatus`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বৈবাহিক অবস্থা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বৈবাহিক অবস্থা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.children`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      সন্তান সংখ্যা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="সন্তান সংখ্যা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                occupation: "",
                maritalStatus: "",
                children: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ভাই/বোন যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="fatherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    চাচা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="চাচা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মামা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মামা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের অর্থনৈতিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyBackgrounds.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="livingCondition"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া
                    বাড়িতে?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="wealthDescription"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FinalWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FinalWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Label } from "@/components/ui/label";
import { BiodataFormDataProps, FinalWordsFormData } from "@/lib/types";
import { finalWordsFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function FinalWords({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FinalWordsFormData>({
    resolver: zodResolver(finalWordsFormData),
    defaultValues: {
      postApprovalOathTruthfulInfo:
        biodataFormData?.finalWordsFormData?.postApprovalOathTruthfulInfo ||
        false,
      postApprovalOathNoMisuse:
        biodataFormData?.finalWordsFormData?.postApprovalOathNoMisuse || false,
      postApprovalOathLegalResponsibility:
        biodataFormData?.finalWordsFormData
          ?.postApprovalOathLegalResponsibility || false,
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        finalWordsFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">শেষ কথা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-10 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl text-center">
            প্রতিশ্রুতি নামা
          </div>
          <div className="text-[#cd0000] space-y-3">
            <div className="flex items-center space-x-2">
              <Label htmlFor="preApprove1" className="text-[#6C0011] leading-5">
                আমি আল্লাহর নামে শপথ করছি যে,
              </Label>
            </div>
            <FormField
              control={form.control}
              name="postApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি বায়োডাটায় সকল তথ্য সত্য প্রদান করেছি।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathNoMisuse"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      সহজনিকাহ ম্যাট্রিমনি ওয়েবসাইটের কোনো তথ্য অসৎ কাজে ব্যবহার
                      করবো না।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      কোনো মিথ্যা তথ্য প্রদান করলে বা কোনো তথ্য অসৎ কাজে ব্যবহার
                      করে থাকলে, দুনিয়াবী যেকোনো আইনী জটিলতা এবং পরকালীন সকল
                      দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-ful">
        <Button className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]">
          Submit and Send For Approval
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FirstWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FirstWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { FirstWordsFormData } from "@/lib/types";
import { firstWordsFormData } from "@/lib/validations";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch } from "@/redux/hooks";
import { zodResolver } from "@hookform/resolvers/zod";
import { useState } from "react";
import { useForm } from "react-hook-form";

interface BiodataFormDataProps {
  biodataFormData: any;
  handleSave: () => void;
  currentStep: any;
  setCurrentStep: (step: string) => void;
}

export default function FirstWords({
  biodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const dispatch = useAppDispatch();
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FirstWordsFormData>({
    resolver: zodResolver(firstWordsFormData),
    defaultValues: {
      preApprovalAcceptTerms:
        biodataFormData?.firstWordsFormData?.preApprovalAcceptTerms || false,
      preApprovalOathTruthfulInfo:
        biodataFormData?.firstWordsFormData?.preApprovalOathTruthfulInfo ||
        false,
      preApprovalOathLegalResponsibility:
        biodataFormData?.firstWordsFormData
          ?.preApprovalOathLegalResponsibility || false,
    },
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      const formValues = form.getValues();
      // Only update if we have valid values
      if (Object.values(formValues).some((value) => value !== undefined)) {
        dispatch(
          setBiodataFormData({
            key: "firstWordsFormData",
            data: formValues,
          })
        );
        handleSave();
      }
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">
        বায়োডাটা তৈরির পূর্বে কিছু গুরুত্বপূর্ণ কথা
      </div>
      <div className="max-w-4xl w-full space-y-4 text-sm text-black">
        <div>
          আপনি যখন সহজনিকাহ ম্যাট্রিমনিতে জীবনসঙ্গী খুঁজতে এসেছেন, এর মানে হলো,
          আপনি বিবাহের একটি অত্যন্ত গুরুত্বপূর্ণ অধ্যায় অতিবাহিত করছেন। চাকরির
          জন্য যেমন সুন্দর করে গুছিয়ে একটি সিভি তৈরি করা হয়, ঠিক তেমনি
          জীবনসঙ্গী নির্বাচনের ক্ষেত্রে আরও বেশি সুন্দর করে এবং গুরুত্ব দিয়ে
          বায়োডাটা তৈরি করা উচিত। কেননা যিনি আপনার কাছে জীবনসঙ্গী হয়ে আসবেন,
          তিনি যেন এই বায়োডাটার মাধ্যমে আপনাকে সঠিকভাবে জানাতে এবং বুঝতে পারেন।
        </div>
        <div>
          তাই সময় নিয়ে, মনোযোগ দিয়ে আপনার বায়োডাটা গুছিয়ে তৈরি করুন। প্রতিটি
          প্রশ্নের উত্তর সত্য এবং সঠিকভাবে দিন এবং নিশ্চিত করুন যে, তথ্যগুলো
          আপনাকে অপরপক্ষের কাছে সঠিকভাবে উপস্থাপন করছে। সম্পূর্ণ বায়োডাটা
          তৈরিতে বেশ কিছুটা সময় লাগবে, কারণ এখানে অনেকগুলো প্রশ্ন আছে। কাজেই
          ধৈর্য্য সহকারে, বেশ কিছুটা সময় নিয়ে বায়োডাটা ফর্ম পূরণ করুন।
          (আনুমানিক ৩০ মিনিট)
        </div>
        <div>
          বি: দ্র:{" "}
          <span className="text-[#005A8B]">
            আপনার এই বায়োডাটা কেউ পছন্দ করলে এবং আপনার সাথে যোগাযোগ করতে চাইলে
            শুধুমাত্র আপনার অভিভাবকের যোগাযোগের মোবাইল নম্বর প্রদান করা হবে।
            একইভাবে আপনিও কোনো বায়োডাটার যোগাযোগ তথ্য নিতে চাইলে শুধুমাত্র
            অভিভাবকের যোগাযোগ নম্বর নিতে পারবেন।
          </span>
        </div>
      </div>
      <div className="max-w-4xl w-full bg-[#f6f6f6] py-6 px-12 space-y-4 text-black rounded-4xl">
        <div className="text-[#005A8B] text-xl">
          বায়োডাটা অ্যাপ্রুভ হওয়ার শর্তসমূহ:
        </div>
        <div className="text-sm">
          <ol className="list-decimal space-y-1">
            <li>
              অবশ্যই মুসলিম হতে হবে। সহজনিকাহ শুধুমাত্র প্রাক্টিসিং,
              নন-প্রাক্টিসিং সহ সকল ধরণের মুসলিমদের নিয়ে কাজ করে থাকে।
            </li>
            <li>
              ছেলেদের বয়স কমপক্ষে ২১ বছর এবং মেয়েদের ক্ষেত্রে ১৮ বছর হতে হবে।
            </li>
            <li>
              অভিভাবকের যোগাযোগ তথ্যের ঘরে পাত্র/পাত্রীর নিজের বা বন্ধুর মোবাইল
              নম্বর প্রদান করা যাবে না।
            </li>
            <li>
              বাংলা, ইংলিশ মিশ্রিত বাংলিশ ভাষায় লেখা যাবে না। পুরোটাই বাংলায়
              অথবা পুরোটাই ইংরেজিতে লিখতে হবে।
            </li>
            <li>
              নিজের শিক্ষা, পেশা এবং পারিবারিক তথ্যে বিস্তারিত উত্তর লিখতে হবে।
            </li>
            <li>
              তথ্য ভেরিফিকেশনের সময় বায়োডাটায় দেওয়া তথ্যের সাথে মিল থাকতে হবে।
            </li>
          </ol>
        </div>
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-6 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl">প্রতিশ্রুতি নামা:</div>
          <div className="text-[#cd0000] space-y-2">
            <FormField
              control={form.control}
              name="preApprovalAcceptTerms"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি শর্তসমূহ পড়েছি এবং তা মেনে চলার প্রতিশ্রুতি দিচ্ছি।
                    </FormLabel>

                    {/* <FormDescription>
                      Describe what this resume is for.
                    </FormDescription> */}
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আল্লাহর নামে শপথ করছি যে, বায়োডাটায় সকল তথ্য সত্য
                      প্রদান করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আরও শপথ করছি যে, কোনো মিথ্যা তথ্য প্রদান করলে দুনিয়াবী
                      যেকোনো আইনী জটিলতা এবং পরকালীন সকল দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/GeneralInfo.tsx

"use client";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  bloodGroups,
  heights,
  maritalStatuses,
  nationalities,
  skinTones,
} from "@/lib/consts";
import { BiodataFormDataProps, GeneralInfoFormData } from "@/lib/types";
import { cn } from "@/lib/utils";
import { generalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { format } from "date-fns";
import { CalendarIcon } from "lucide-react";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function GeneralInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<GeneralInfoFormData>({
    resolver: zodResolver(generalInfoFormData),
    defaultValues: {
      dateOfBirth: biodataFormData?.generalInfoFormData?.dateOfBirth || "",
      maritalStatus: biodataFormData?.generalInfoFormData?.maritalStatus || "",
      skinTone: biodataFormData?.generalInfoFormData?.skinTone || "",
      height: biodataFormData?.generalInfoFormData?.height || "",
      weight: biodataFormData?.generalInfoFormData?.weight || "",
      bloodGroup: biodataFormData?.generalInfoFormData?.bloodGroup || "",
      nationality: biodataFormData?.generalInfoFormData?.nationality || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        generalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const maritalStatusOptions = maritalStatuses.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">সাধারণ তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="dateOfBirth"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জন্ম তারিখ:</div>
                    <div className="text-xs">(আসল, সার্টিফিকেট অনুযায়ী নয়)</div>
                  </FormLabel>
                  <FormControl>
                    <Popover>
                      <PopoverTrigger asChild>
                        <Button
                          className={cn(
                            "p-6 w-full bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]",
                            !field.value && "text-muted-foreground"
                          )}
                        >
                          <CalendarIcon className="mr-2 h-4 w-4" />
                          {field.value ? (
                            format(field.value, "PPP")
                          ) : (
                            <span>জন্ম তারিখ</span>
                          )}
                        </Button>
                      </PopoverTrigger>
                      <PopoverContent className="w-auto p-0">
                        <Calendar
                          className="bg-[#005889]"
                          classNames={{
                            day_selected: "bg-[#E25A6F]",
                            day_today: "bg-white text-black",
                          }}
                          mode="single"
                          selected={
                            field.value ? new Date(field.value) : undefined
                          }
                          onSelect={(date) =>
                            field.onChange(date?.toISOString())
                          }
                          initialFocus
                        />
                      </PopoverContent>
                    </Popover>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বৈবাহিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {maritalStatusOptions.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="গাত্রবর্ণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {skinTones.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="weight"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ওজন:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ওজন"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="bloodGroup"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    রক্তের গ্রুপ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="রক্তের গ্রুপ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {bloodGroups.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="nationality"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জাতীয়তা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="জাতীয়তা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {nationalities.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/MarriageInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { afterMarriageJobs, afterMarriageStuties } from "@/lib/consts";
import { BiodataFormDataProps, MarriageInfoFormData } from "@/lib/types";
import { marriageInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function MarriageInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<MarriageInfoFormData>({
    resolver: zodResolver(marriageInfoFormData),
    defaultValues: {
      guardianApproval:
        biodataFormData?.marriageInfoFormData?.guardianApproval || "",
      continueStudy: biodataFormData?.marriageInfoFormData?.continueStudy || "",
      careerPlan: biodataFormData?.marriageInfoFormData?.careerPlan || "",
      residence: biodataFormData?.marriageInfoFormData?.residence || "",
      arrangeHijab: biodataFormData?.marriageInfoFormData?.arrangeHijab || "",
      dowryExpectation:
        biodataFormData?.marriageInfoFormData?.dowryExpectation || "",
      allowShowingPhotoOnline:
        biodataFormData?.marriageInfoFormData?.allowShowingPhotoOnline || "",
      additionalMarriageInfo:
        biodataFormData?.marriageInfoFormData?.additionalMarriageInfo || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        marriageInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const afterMarriageStutyOptions = afterMarriageStuties.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  const afterMarriageJobOptions = afterMarriageJobs.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">বিয়ে সংক্রান্ত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="guardianApproval"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
                    <div className="text-xs">
                      (যদি অভিভাবক রাজি নাও থাকে তাহলে এর কারণ লিখুন এবং
                      সেক্ষেত্রে আপনি কেন বিবাহে আগাচ্ছেন সেটা বিস্তারিত লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="continueStudy"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?"
                      : "বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageStutyOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="careerPlan"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?"
                      : "আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageJobOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="residence"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?"
                      : "যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="arrangeHijab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে পারবেন?"
                      : "বাড়িতে বা বাহিরে পর্দা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="dowryExpectation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক / উপহার / অর্থ আশা করবেন কিনা?"
                      : "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রপক্ষকে যৌতুক / উপহার / অর্থ দিতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="allowShowingPhotoOnline"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "পাত্রীপক্ষ"
                      : "পাত্রপক্ষ"}{" "}
                    অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="additionalMarriageInfo"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>
                      বিয়ে সংক্রান্ত আরো কিছু জানাতে চাইলে এখানে লিখুন: অন্যথায়
                      খালি রাখুন।
                    </div>
                    <div className="text-xs">
                      (যেমন: পাত্র-পাত্রী সাক্ষাতের ব্যাপারে, অভিভাবকদের মতামত
                      নিয়ে, কেমন বিয়ে চান, বিয়ের পর কোন কোন বিষয় ছাড় দিতে রাজি
                      নন ইত্যাদি কিছু জানানোর থাকলে লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\OccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/OccupationInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { occupationsList } from "@/lib/consts";
import { BiodataFormDataProps, OccupationInfoFormData } from "@/lib/types";
import { occupationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function OccupationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<OccupationInfoFormData>({
    resolver: zodResolver(occupationInfoFormData),
    defaultValues: {
      occupations: biodataFormData?.occupationInfoFormData?.occupations || [],
      detail: biodataFormData?.occupationInfoFormData?.detail || "",
      monthlyIncome:
        biodataFormData?.occupationInfoFormData?.monthlyIncome || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        occupationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পেশা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="occupations"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পেশা নিয়ে বিস্তারিত লিখুন:</div>
                    <div className="text-xs">
                      (অর্থাৎ আপনার কর্মস্থল কোথায়, কি ধরণের কাজে দায়িত্বরত আছেন
                      বা পদবি কি, এগুলো নিয়ে বিস্তারিত লিখুন। পেশা না থাকলে খালি
                      রাখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="monthlyIncome"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাসিক আয়:</div>
                    <div className="text-xs">(পেশা না থাকলে খালি রাখুন।)</div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাসিক আয়"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PersonalInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { characteristics, specialCatagories } from "@/lib/consts";
import { BiodataFormDataProps, PersonalInfoFormData } from "@/lib/types";
import { personalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function PersonalInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PersonalInfoFormData>({
    resolver: zodResolver(personalInfoFormData),
    defaultValues: {
      beardStatus: biodataFormData?.personalInfoFormData?.beardStatus || "",
      preferredOutfit:
        biodataFormData?.personalInfoFormData?.preferredOutfit || "",
      entertainmentPreferences:
        biodataFormData?.personalInfoFormData?.entertainmentPreferences || "",
      healthConditions:
        biodataFormData?.personalInfoFormData?.healthConditions || "",
      personalTraits:
        biodataFormData?.personalInfoFormData?.personalTraits || [],
      genderEqualityView:
        biodataFormData?.personalInfoFormData?.genderEqualityView || "",
      lgbtqOpinion: biodataFormData?.personalInfoFormData?.lgbtqOpinion || "",
      specialConditions:
        biodataFormData?.personalInfoFormData?.specialConditions || [],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        personalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const specialCatagoryOptions = specialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ব্যক্তিগত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="beardStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "আপনি দাড়ি রেখেছেন কি?"
                      : "আপনার কি দাড়ি পছন্দ?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="preferredOutfit"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পড়তে পছন্দ করেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="entertainmentPreferences"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="healthConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মানসিক বা শারীরিক কোনো রোগ আছে কি? থাকলে বিস্তারিত লিখুন।
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="personalTraits"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নিজের কিছু গুণাবলী চিহ্নিত করুন:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {characteristics.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="genderEqualityView"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="lgbtqOpinion"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {specialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PrimaryInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { biodataTypes } from "@/lib/consts";
import { BiodataFormDataProps, PrimaryInfoFormData } from "@/lib/types";
import { primaryInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function PrimaryInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PrimaryInfoFormData>({
    resolver: zodResolver(primaryInfoFormData),
    defaultValues: {
      biodataType: biodataFormData?.primaryInfoFormData?.biodataType || "",
      biodataFor: biodataFormData?.primaryInfoFormData?.biodataFor || "",
      fullName: biodataFormData?.primaryInfoFormData?.fullName || "",
      fatherName: biodataFormData?.primaryInfoFormData?.fatherName || "",
      motherName: biodataFormData?.primaryInfoFormData?.motherName || "",
      email: biodataFormData?.primaryInfoFormData?.email || "",
      phoneNumber: biodataFormData?.primaryInfoFormData?.phoneNumber || "",
      guardianContacts:
        biodataFormData?.primaryInfoFormData?.guardianContacts?.length > 0
          ? biodataFormData?.primaryInfoFormData?.guardianContacts.map((x) => {
              return {
                relation: x.relation,
                fullName: x.fullName,
                phoneNumber: x.phoneNumber,
              };
            })
          : [
              { relation: "", fullName: "", phoneNumber: "" },
              { relation: "", fullName: "", phoneNumber: "" },
            ],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        primaryInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "guardianContacts",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রাথমিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="biodataType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বায়োডাটার ধরন:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বায়োডাটার ধরন" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {biodataTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="biodataFor"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>বায়োডাটা কার জন্য তৈরী করছেন?</div>
                    <div className="text-xs">
                      (যেমনঃ নিজের জন্য/বোনের জন্য/বন্ধুর জন্য/ভাগ্নির জন্য
                      ইত্যাদি)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fullName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
                    <div className="text-xs">
                      (NID কার্ডে যে নাম আছে। নাম বায়োডাটায় প্রকাশ করা হবে না।
                      শুধুমাত্র ভেরিফিকেশন ও অপরপক্ষকে যোগাযোগ তথ্য প্রদানের
                      ক্ষেত্রে প্রয়োজন হবে।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="সম্পূর্ণ নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="email"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>ইমেইল আইডি:</div>
                    <div className="text-xs">
                      (পাত্র/পাত্রীর সাথে আমাদের যোগাযোগের জন্য প্রয়োজন হবে।
                      অপরপক্ষ যোগাযোগ তথ্য নিতে চাইলে যুক্তিসঙ্গত কারণ বা
                      প্রয়োজন ছাড়া পাঠানো হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ইমেইল আইডি"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="phoneNumber"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর মোবাইল নম্বর:</div>
                    <div className="text-xs">
                      (মোবাইল নম্বর শুধুমাত্র ভেরিফিকেশনের জন্য আমাদের কাছে
                      থাকবে। কাউকে প্রদান করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মোবাইল নম্বর"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="flex flex-col space-y-2">
            <FormLabel className="flex items-center justify-between space-x-8">
              <div className="text-md space-y-1 leading-4.5">
                <div>পাত্র/পাত্রীর অভিভাবকের মোবাইল নম্বর:</div>
                <div className="text-xs">
                  <div>কমপক্ষে ২ টি সচল নম্বর প্রদান করতে হবে।</div>
                </div>
              </div>
              <Button
                type="button"
                className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
                onClick={() => append({ fullName: "", phoneNumber: "" })}
              >
                <Plus size={20} /> <span>নতুন নম্বর যোগ করুন</span>
              </Button>
            </FormLabel>

            <div className="space-y-2">
              {fields.map((field, index) => (
                <div className="flex space-x-2 items-center" key={field.id}>
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.relation`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="সম্পর্ক"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.fullName`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের নাম"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.phoneNumber`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের মোবাইল নম্বর"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  {/* Remove button (except for the first two fields) */}
                  {fields.length > 2 && (
                    <Button
                      type="button"
                      className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                      onClick={() => remove(index)}
                    >
                      <Minus size={20} />
                    </Button>
                  )}
                </div>
              ))}
            </div>
          </div>
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\ProfilePic.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ProfilePic.tsx

"use client";

import female1 from "@/assets/images/female-1.svg";
import female2 from "@/assets/images/female-2.svg";
import female3 from "@/assets/images/female-3.svg";
import female4 from "@/assets/images/female-4.svg";
import female5 from "@/assets/images/female-5.svg";
import female6 from "@/assets/images/female-6.svg";
import male1 from "@/assets/images/male-1.svg";
import male2 from "@/assets/images/male-2.svg";
import male3 from "@/assets/images/male-3.svg";
import male4 from "@/assets/images/male-4.svg";
import male5 from "@/assets/images/male-5.svg";
import male6 from "@/assets/images/male-6.svg";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { BiodataFormDataProps, ProfilePicFormData } from "@/lib/types";
import { profilePicFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { CheckCircle } from "lucide-react";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ProfilePic({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ProfilePicFormData>({
    resolver: zodResolver(profilePicFormData),
    defaultValues: {
      photoId: biodataFormData?.profilePicFormData?.photoId || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        profilePicFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const images =
    biodataFormData?.primaryInfoFormData?.biodataType === "1"
      ? [male1, male2, male3, male4, male5, male6]
      : [female1, female2, female3, female4, female5, female6];

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রোফাইল পিকচার</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="photoId"
            render={({ field }) => (
              <FormItem>
                <FormLabel>
                  আপনার সাথে মানানসই বা সামঞ্জস্যপূর্ণ একটি প্রোফাইল পিকচার
                  বাছাই করুন:
                </FormLabel>
                <FormControl>
                  <div className="flex flex-wrap">
                    {images.map((image, index) => (
                      <div
                        key={index}
                        className="w-1/3 mb-4 flex items-center justify-center relative"
                      >
                        <div
                          className={`border p-12 rounded-3xl cursor-pointer transition-all relative ${
                            form.getValues().photoId === image.src
                              ? "border-[#E25A6F] ring-2 ring-[#E25A6F]"
                              : "border-gray-300"
                          } `}
                          onClick={() => {
                            field.onChange(image.src);
                          }}
                        >
                          <Image
                            src={image}
                            alt={`Profile${index + 1}`}
                            width={120}
                            height={40}
                            priority
                          />
                          {form.getValues().photoId === image.src && (
                            <CheckCircle className="absolute top-4 right-4 text-[#E25A6F]" />
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ReligiousInfo.tsx
"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { madhhabs, religiousIdeologies } from "@/lib/consts";
import { BiodataFormDataProps, ReligiousInfoFormData } from "@/lib/types";
import { religiousInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ReligiousInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ReligiousInfoFormData>({
    resolver: zodResolver(religiousInfoFormData),
    defaultValues: {
      type: biodataFormData?.religiousInfoFormData?.type || "",
      ideology: biodataFormData?.religiousInfoFormData?.ideology || "",
      madhab: biodataFormData?.religiousInfoFormData?.madhab || "",
      praysFiveTimes:
        biodataFormData?.religiousInfoFormData?.praysFiveTimes || "",
      hasQazaPrayers:
        biodataFormData?.religiousInfoFormData?.hasQazaPrayers || "",
      canReciteQuranProperly:
        biodataFormData?.religiousInfoFormData?.canReciteQuranProperly || "",
      avoidsHaramIncome:
        biodataFormData?.religiousInfoFormData?.avoidsHaramIncome || "",
      modestDressing:
        biodataFormData?.religiousInfoFormData?.modestDressing || "",
      followsMahramRules:
        biodataFormData?.religiousInfoFormData?.followsMahramRules || "",
      beliefAboutPirMurshidAndMazar:
        biodataFormData?.religiousInfoFormData?.beliefAboutPirMurshidAndMazar ||
        "",
      practicingSince:
        biodataFormData?.religiousInfoFormData?.practicingSince || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        religiousInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ধর্মীয় লাইফস্টাইল</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormControl>
                    <RadioGroup
                      className="flex"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="1" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              সেরকমভাবে মেনে চলা হয় না
                            </div>
                            <div>(জেনারেল/নন-প্রাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>
                            ১. অনিয়মিতভাবে ৫ ওয়াক্ত বা এর কম সালাত আদায় করা হয়।
                          </div>
                          <div>
                            ২. সকল ক্ষেত্রে হালাল-হারাম বাছাই করা হয় না।
                          </div>
                          <div>৩. মাহরাম-নন মাহরাম মেইনটেইন করা হয় না।</div>
                          <div>
                            ৪. হারাম উপার্জন, ব্যাংকিং সুদ, ফ্রি-মিক্সিং,
                            গান-বাজনা থেকে বিরত থাকা হয় না।
                          </div>
                          <div>
                            ৫. পরিপূর্ন ভাবে ইসলামের বিধিবিধান পালনে তেমন চেষ্টা
                            বা আগ্রহ নেই।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="2" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black">
                              পরিপূর্ণভাবে মেনে চলা হয় না কিন্তু প্রবল ইচ্ছা আছে
                              এবং চেষ্টা করছি
                            </div>
                            <div>(প্রাক্টিসিংয়ের চেষ্টায় আছি)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>
                            ২. হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত থাকছেন।
                          </div>
                          <div>
                            ৩. কিন্তু গান-বাজনা থেকে এখনো দূরে থাকা হয় না।
                          </div>
                          <div>
                            ৪. সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট বা পর্দা এখনো
                            মেনে চলতে পারছেন না।
                          </div>
                          <div>
                            ৫. এর জন্য প্রবল অনুশোচনা কাজ করে এবং পরিপূর্ন ভাবে
                            ইসলামের বিধিবিধান পালনের চেষ্টা করা হয়।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="3" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              জি পরিপূর্ণভাবে মেনে চলি এবং সর্বদা চেষ্টায় থাকি
                            </div>
                            <div>(পূর্ণ ধার্মিক/ প্র্যাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. বিশুদ্ধ ঈমান-আকিদা পোষণ করছেন।</div>
                          <div>২. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>৩. পরিপূর্ণ হালাল উপার্জন করছেন ।</div>
                          <div>
                            ৪. ফরজ, ওয়াজিব ইবাদতের পাশাপাশি সুন্নাত, নফল আমল
                            করার চেষ্টা করেন।
                          </div>
                          <div>৫. গান-বাজনা, নাটক-সিনেমা থেকে দূরে থাকছেন।</div>
                          <div>
                            ৬. পুরুষেরা সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট,
                            ইসলামিক পোশাক মেনে চলেন, নারীরা নিকাব সহ পর্দা
                            করছেন।
                          </div>
                          <div>
                            ৭. বাহিরে পর্দা মেনে চলা অর্থাৎ বেগানা নারী-পুরুষের
                            ক্ষেত্রে চক্ষু অবনত রাখছেন।
                          </div>
                          <div>
                            ৮. মাহরাম-নন মাহরাম মেইনটেইন করেন এবং ফ্রী মিক্সিং
                            এড়িয়ে চলেন।
                          </div>
                          <div>
                            ৯. সকল প্রকার হারাম ও কবীরা গুনাহ থেকে বেঁচে থাকার
                            সর্বাত্মক প্রচেষ্টায় থাকেন।
                          </div>
                          <div>
                            ১০. ইসলাম বিরোধী সকল কাজকে অপছন্দ করেন এবং জীবনটাকে
                            পরিপূর্ণভাবে কোরআন-সুন্নাহ মোতাবেক সাজাতে থাকেন।
                          </div>
                        </Label>
                      </div>
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="ideology"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় কোন মতাদর্শ মেনে চলেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {religiousIdeologies.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="madhab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কোন মাজহাব / মানহাজ অনুসরণ করেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {madhhabs.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="praysFiveTimes"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="hasQazaPrayers"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      আপনার কি নামাজ কাযা হয়?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="canReciteQuranProperly"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="avoidsHaramIncome"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <FormField
              control={form.control}
              name="modestDressing"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                        ? "টাখনুর উপরে কাপড় পরেন কিনা?"
                        : "আপনি কি নিকাব সহ পর্দা করেন?"}
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <>
              <FormField
                control={form.control}
                name="followsMahramRules"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="beliefAboutPirMurshidAndMazar"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="practicingSince"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু
                        করেছেন?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </>
          )}
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/SpousePreferenceInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import {
  familyBackgrounds,
  heights,
  maritalStatuses,
  muslimTypes,
  occupationsList,
  religiousEducationQualities,
  secondMarriageOptions,
  skinTones,
  spouseLocationOptions,
  spouseSpecialCatagories,
} from "@/lib/consts";
import {
  BiodataFormDataProps,
  SpousePreferenceInfoFormData,
} from "@/lib/types";
import { spousePreferenceInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function SpousePreferenceInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<SpousePreferenceInfoFormData>({
    resolver: zodResolver(spousePreferenceInfoFormData),
    defaultValues: {
      age: biodataFormData?.spousePreferenceInfoFormData?.age || "",
      skinTone: biodataFormData?.spousePreferenceInfoFormData?.skinTone || [],
      height: biodataFormData?.spousePreferenceInfoFormData?.height || "",
      educationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.educationalQualification || "",
      religiousEducationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.religiousEducationalQualification || [],
      address: biodataFormData?.spousePreferenceInfoFormData?.address || "",
      maritalStatus:
        biodataFormData?.spousePreferenceInfoFormData?.maritalStatus || [],
      specialCategory:
        biodataFormData?.spousePreferenceInfoFormData?.specialCategory || [],
      religiousType:
        biodataFormData?.spousePreferenceInfoFormData?.religiousType || [],
      occupation:
        biodataFormData?.spousePreferenceInfoFormData?.occupation || [],
      familyBackground:
        biodataFormData?.spousePreferenceInfoFormData?.familyBackground || [],
      secondMarrige:
        biodataFormData?.spousePreferenceInfoFormData?.secondMarrige || "",
      location: biodataFormData?.spousePreferenceInfoFormData?.location || "",
      qualities: biodataFormData?.spousePreferenceInfoFormData?.qualities || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        spousePreferenceInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const spouseSpecialCatagoryOptions = spouseSpecialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">
        যেমন জীবনসঙ্গী আশা করেন
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="age"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত বয়স:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {skinTones.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                        <SelectValue placeholder="কাঙ্খিত উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="educationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousEducationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="address"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত ঠিকানা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {maritalStatuses.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialCategory"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {spouseSpecialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় লাইফস্টাইল:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {muslimTypes.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="occupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {familyBackgrounds.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          {biodataFormData?.primaryInfoFormData?.biodataType === "2" && (
            <FormField
              control={form.control}
              name="secondMarrige"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী
                      আছেন?
                    </FormLabel>
                    <FormControl>
                      <RadioGroup
                        className="w-full flex flex-wrap gap-0"
                        onValueChange={field.onChange}
                        value={field.value}
                      >
                        {secondMarriageOptions.map((x) => (
                          <div
                            key={x.id}
                            className="w-1/4 flex items-center space-x-2 mb-2"
                          >
                            <RadioGroupItem value={x.id} id={x.id} />
                            <Label htmlFor={x.id}>{x.title}</Label>
                          </div>
                        ))}
                      </RadioGroup>
                    </FormControl>
                  </div>

                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="location"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {spouseLocationOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="qualities"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:</div>
                    <div className="text-xs">
                      (অর্থাৎ কাঙ্খিত জীবনসঙ্গীর স্বভাব, দ্বীনদারিতা, চারিত্রীক
                      গুণাবলী কেমন আশা করেন। বিশেষ কোনো কার্যক্রম বা চাওয়া থাকলে
                      জানাতে পারেন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\page.tsx
// --------------------
// File: src/app/(main)/biodata-editor/page.tsx
import { Metadata } from "next";
import BiodataEditor from "./BiodataEditor";

interface BiodataEditorPageProps {
  searchParams: Promise<{ biodataId?: string }>;
}

export const metadata: Metadata = {
  title: "Design your biodata",
};

export default async function BiodataEditorPage({
  searchParams,
}: BiodataEditorPageProps) {
  const { biodataId } = await searchParams;

  //TO:DO get userId from token

  const biodataToEdit = biodataId
    ? null // get from db
    : null;

  return (
    <main className="flex-grow">
      <div className="text-[#1f4f69] flex flex-col items-center justify-center mt-4 mb-12">
        <BiodataEditor biodataToEdit={biodataToEdit} />
      </div>
    </main>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\steps.ts
// --------------------
// File: src/app/(main)/biodata-editor/steps.ts
import { BiodataFormDataProps } from "@/lib/types";
import AddressInfo from "./biodataFormComponents/AddressInfo";
import EducationInfo from "./biodataFormComponents/EducationInfo";
import FamilyInfo from "./biodataFormComponents/FamilyInfo";
import FinalWords from "./biodataFormComponents/FinalWords";
import FirstWords from "./biodataFormComponents/FirstWords";
import GeneralInfo from "./biodataFormComponents/GeneralInfo";
import MarriageInfo from "./biodataFormComponents/MarriageInfo";
import OccupationInfo from "./biodataFormComponents/OccupationInfo";
import PersonalInfo from "./biodataFormComponents/PersonalInfo";
import PrimaryInfo from "./biodataFormComponents/PrimaryInfo";
import ProfilePic from "./biodataFormComponents/ProfilePic";
import ReligiousInfo from "./biodataFormComponents/ReligiousInfo";
import SpousePreferenceInfo from "./biodataFormComponents/SpousePreferenceInfo";

export interface BiodataFormStep {
  title: string;
  component: React.ComponentType<BiodataFormDataProps>;
  key: string;
  disabled: boolean;
  prev?: string;
  next?: string;
}

export const steps: BiodataFormStep[] = [
  {
    title: "কিছু কথা",
    component: FirstWords,
    key: "first-words",
    disabled: true,
    next: "primary-info",
  },
  {
    title: "প্রাথমিক তথ্য",
    component: PrimaryInfo,
    key: "primary-info",
    disabled: true,
    prev: "first-words",
    next: "general-info",
  },
  {
    title: "সাধারণ তথ্য",
    component: GeneralInfo,
    key: "general-info",
    disabled: true,
    prev: "primary-info",
    next: "address-info",
  },
  {
    title: "ঠিকানা",
    component: AddressInfo,
    key: "address-info",
    disabled: true,
    prev: "general-info",
    next: "education-info",
  },
  {
    title: "শিক্ষাগত যোগ্যতা",
    component: EducationInfo,
    key: "education-info",
    disabled: true,
    prev: "address-info",
    next: "occupation-info",
  },
  {
    title: "পেশা",
    component: OccupationInfo,
    key: "occupation-info",
    disabled: true,
    prev: "education-info",
    next: "family-info",
  },
  {
    title: "পারিবারিক তথ্য",
    component: FamilyInfo,
    key: "family-info",
    disabled: true,
    prev: "occupation-info",
    next: "religious-info",
  },
  {
    title: "ধর্মীয় লাইফস্টাইল",
    component: ReligiousInfo,
    key: "religious-info",
    disabled: true,
    prev: "family-info",
    next: "personal-info",
  },
  {
    title: "ব্যক্তিগত তথ্য",
    component: PersonalInfo,
    key: "personal-info",
    disabled: true,
    prev: "religious-info",
    next: "marital-info",
  },
  {
    title: "বিয়ে সংক্রান্ত তথ্য",
    component: MarriageInfo,
    key: "marital-info",
    disabled: true,
    prev: "personal-info",
    next: "spouse-preference-info",
  },
  {
    title: "যেমন জীবনসঙ্গী আশা করেন",
    component: SpousePreferenceInfo,
    key: "spouse-preference-info",
    disabled: true,
    prev: "marital-info",
    next: "profile-pic",
  },
  {
    title: "প্রোফাইল পিকচার",
    component: ProfilePic,
    key: "profile-pic",
    disabled: true,
    prev: "spouse-preference-info",
    next: "final-words",
  },
  {
    title: "শেষ কথা",
    component: FinalWords,
    key: "final-words",
    disabled: true,
    prev: "profile-pic",
  },
];


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\layout.tsx
// --------------------
// File: src/app/(main)/biodatas/layout.tsx
import { ReactNode } from "react";

export default function MainLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return <main className="flex-grow">{children}</main>;
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageAppliedFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageAppliedFilters.tsx

import { X } from "lucide-react";

export default function BiodatasPageAppliedFilters() {
  const appliedFilters = [
    {
      id: 1,
      name: "বায়োডাটার ধরন",
      selected: [
        {
          id: 1,
          name: "পুরুষ",
        },
      ],
    },
    {
      id: 2,
      name: "বৈবাহিক অবস্থা",
      selected: [
        {
          id: 1,
          name: "অবিবাহিত",
        },
        {
          id: 2,
          name: "বিবাহিত",
        },
      ],
    },
  ];

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">আপনি বাছাই করেছেন</div>
      </div>
      <div className="flex flex-col space-y-4">
        {appliedFilters.length > 0 &&
          appliedFilters.map((x) => (
            <div
              key={x.id}
              className="flex flex-col space-y-3 text-black text-xs border border-gray-300 rounded-xl px-6 py-2"
            >
              {x.selected.length > 0 &&
                x.selected.map((y) => (
                  <div key={y.id} className="flex justify-between items-center">
                    <div>{y.name}</div>
                    <X className="text-[#e25a6f] w-4 h-4" />
                  </div>
                ))}
            </div>
          ))}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageCard.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageCard.tsx

"use client";
import male from "@/assets/images/male-5.svg";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Heart } from "lucide-react";
import Image from "next/image";
import { useRouter } from "next/navigation";

export interface BiodatasPageCardProps {
  id: number;
}

export default function BioCard({ id }: BiodatasPageCardProps) {
  const router = useRouter();

  const handleOnClick = () => {
    router.push("/biodatas/asd");
  };
  return (
    <Card
      key={id}
      className="border-none overflow-hidden bg-gradient-to-t from-[#e6f2ff] to-[#fff0f6]"
    >
      <CardContent className="p-4">
        <div className="flex justify-between items-start mb-4">
          <div className="w-1/3">
            <Heart className="w-8 h-8 text-[#E25A6F]" fill="#E25A6F" />
          </div>
          <div className="w-1/3 flex items-center justify-center">
            <Image src={male} alt="Male" width={80} height={40} priority />
          </div>
          <div className="w-1/3 flex flex-col items-end space-y-2">
            <Badge className="text-[#00b754]">Verified</Badge>
            <Badge className="text-[#016ca7]">Seen</Badge>
          </div>
        </div>

        <div className="text-center mb-4 flex items-center justify-center">
          <div className="text-black bg-[#fcfafd] p-3 rounded-md">
            বায়োডাটা নং: 43527
          </div>
        </div>

        <div className="space-y-3 text-black">
          <div className="flex justify-between">
            <span>বৈবাহিক অবস্থা:</span>
            <span>অবিবাহিত</span>
          </div>
          <div className="flex justify-between">
            <span>জন্মসন:</span>
            <span>১৯৯০</span>
          </div>
          <div className="flex justify-between">
            <span>উচ্চতা:</span>
            <span>৫'৩০"</span>
          </div>
          <div className="flex justify-between">
            <span>স্থায়ী ঠিকানা:</span>
            <span>BSC in EEE</span>
          </div>
          <div className="flex justify-between">
            <span>পেশা:</span>
            <span>ইঞ্জিনিয়ার</span>
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button
          className="w-full text-white bg-[#E25A6F]  hover:bg-[#D14A5F]"
          onClick={handleOnClick}
        >
          বায়োডাটা দেখুন
        </Button>
      </CardFooter>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageFilters.tsx

"use client";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { useState } from "react";

export default function BiodatasPageFilters() {
  const [ageRange, setAgeRange] = useState<number[]>([18, 80]);
  const [heightRange, setHeightRange] = useState<number[]>([36, 84]);

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">ফিল্টার করুন</div>
      </div>
      <div className="flex justify-center mb-4">
        <button className="mr-[-1rem] rounded-xl py-3 text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-[#989898] pr-4 pl-6 border border-[#989898]">
          আমাকে খুঁজছে
        </button>
        {/* <button className="mr-[-1rem] rounded-xl py-3 text-[#989898] pl-4 pr-6 border border-[#989898]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমাকে খুঁজছে
        </button> */}
      </div>
      <form className="flex flex-col space-y-2">
        <Accordion type="multiple" className="flex flex-col space-y-2 mb-2">
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বায়োডাটার ধরন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বায়োডাটার ধরন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বৈবাহিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বৈবাহিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বয়স"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বয়স
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{ageRange[0]}</div>
                <Slider
                  value={ageRange}
                  onValueChange={setAgeRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{ageRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="উচ্চতা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              উচ্চতা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{heightRange[0]}</div>
                <Slider
                  value={heightRange}
                  onValueChange={setHeightRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{heightRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="গাত্রবর্ণ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              গাত্রবর্ণ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="স্থায়ী ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              স্থায়ী ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বর্তমান ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বর্তমান ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা মাইগ্রেশন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা মাইগ্রেশন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পেশা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পেশা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পরিবারের আর্থসামাজিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পরিবারের আর্থসামাজিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="মাজহাব/মাসলাহ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              মাজহাব/মাসলাহ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="রক্তের গ্রুপ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              রক্তের গ্রুপ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বিশেষ অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বিশেষ অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </form>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\SearchByBiodataNo.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/SearchByBiodataNo.tsx

import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Search } from "lucide-react";

export default function BiodatasPageSearchByBiodataNo() {
  return (
    <form className="flex items-center space-x-4">
      <div className="w-32">
        <Select>
          <SelectTrigger className="text-[#1f4f69]">
            <SelectValue placeholder="SNM" />
          </SelectTrigger>
          <SelectContent className="bg-white text-[#1f4f69]">
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="all"
            >
              SNM
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="male"
            >
              পুরুষ
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="female"
            >
              নারী
            </SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="relative w-64">
        <div className="space-y-2">
          <Input
            className="w-full px-4 py-2 border rounded-md text-[#1f4f69] selection:bg-[#E25A6F] selection:text-white"
            id="biodataNo"
            type="text"
            placeholder="বায়োডাটা নং"
          />
        </div>
        <button className="absolute right-3 top-1/2 transform -translate-y-1/2">
          <Search className="w-4 h-4 text-gray-400" />
        </button>
      </div>
    </form>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\page.tsx
// --------------------
import BiodatasPageAppliedFilters from "./listPageComponentes/BiodatasPageAppliedFilters";
import BiodatasPageCard from "./listPageComponentes/BiodatasPageCard";
import BiodatasPageFilters from "./listPageComponentes/BiodatasPageFilters";
import BiodatasPageSearchByBiodataNo from "./listPageComponentes/SearchByBiodataNo";

export default function BiodatasPage() {
  return (
    <>
      <div className="mt-12 text-3xl text-center text-black mb-4">
        বায়োডাটা সমূহ
      </div>
      <div className="flex justify-between">
        <BiodatasPageFilters />
        <div className="flex-grow max-w-7xl">
          <div className="flex justify-end items-center mb-6">
            <BiodatasPageSearchByBiodataNo />
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[...Array(6)].map((_, i) => (
              <BiodatasPageCard key={i} id={i} />
            ))}
          </div>
        </div>
        <BiodatasPageAppliedFilters />
      </div>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\page.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/page.tsx
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import AddressInfo from "./viewBioDataComponents/AddressInfo";
import EducationAndOccupationInfo from "./viewBioDataComponents/EducationAndOccupationInfo";
import FamilyInfo from "./viewBioDataComponents/FamilyInfo";
import FooterSection from "./viewBioDataComponents/FooterSection";
import GeneralInfo from "./viewBioDataComponents/GeneralInfo";
import HeaderSection from "./viewBioDataComponents/HeaderSection";
import MarriageInfo from "./viewBioDataComponents/MarriageInfo";
import PersonalInfo from "./viewBioDataComponents/PersonalInfo";
import PrimaryInfo from "./viewBioDataComponents/PrimaryInfo";
import ReligiousInfo from "./viewBioDataComponents/ReligiousInfo";
import SpousePreferenceInfo from "./viewBioDataComponents/SpousePreferenceInfo";

export default function BiodataPage() {
  const tabs = [
    "প্রাথমিক তথ্য",
    "সাধারণ তথ্য",
    "ঠিকানা",
    "শিক্ষা ও পেশা",
    "পারিবারিক তথ্য",
    "ধর্মীয় লাইফস্টাইল",
    "ব্যক্তিগত তথ্য",
    "বিয়ে সংক্রান্ত তথ্য",
    "যেমন জীবনসঙ্গী আশা করেন",
  ];

  return (
    <>
      <HeaderSection />
      <div className="py-12 flex flex-col items-center justify-center space-y-6">
        <div className="text-4xl text-center text-black">সম্পূর্ণ বায়োডাটা</div>
        <Tabs defaultValue="ঠিকানা" className="max-w-7xl">
          <TabsList className="flex flex-wrap h-auto space-x-2 bg-[#f6f6f6] rounded-2xl p-2">
            {tabs.map((tab) => (
              <TabsTrigger
                key={tab}
                value={tab}
                className="data-[state=active]:bg-[#e25a6f] data-[state=active]:text-white text-[#004972] rounded-full px-4 py-2"
              >
                {tab}
              </TabsTrigger>
            ))}
          </TabsList>
        </Tabs>

        <div className="w-full max-w-6xl space-y-6">
          <PrimaryInfo />
          <GeneralInfo />
          <AddressInfo />
          <EducationAndOccupationInfo />
          <FamilyInfo />
          <ReligiousInfo />
          <PersonalInfo />
          <MarriageInfo />
          <SpousePreferenceInfo />
        </div>
      </div>
      <FooterSection />
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/AddressInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function AddressInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ঠিকানা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোথায় বেড়ে উঠেছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\EducationAndOccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/EducationAndOccupationInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function EducationAndOccupationInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          শিক্ষাগত যোগ্যতা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষার ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">জেনারেল</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এস.এস.সি/দাখিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এস.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এইচ.এস.সি/আলিম/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এইচ.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(ডিপ্লোমা):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">ডিপ্লোমা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(অনার্স/ফাজিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অনার্স</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(মাস্টার্স/কামিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>

        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা নিয়ে বিস্তারিত লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাসিক আয়:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FamilyInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function FamilyInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          পারিবারিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পিতা-মাতা উভয়েই জীবিত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনারা ভাই-বোন কতজন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ভাই-বোন কে কি করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">চাচা মামাদের পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">যৌথ পরিবার</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পারিবারিক বিষয়ে আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FooterSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FooterSection.tsx

import { Card, CardContent } from "@/components/ui/card";
import Link from "next/link";
export default function FooterSection() {
  return (
    <div className="py-12 flex flex-col items-center justify-center">
      <div className="text-4xl text-center text-[#004972] mb-4">
        বায়োডাটা পছন্দ হয়েছে?
      </div>
      <div className="text-md text-center text-black mb-8">
        আপনি আগ্রহী হলে আপনার জন্য ৩টি অপশন রয়েছে।
      </div>
      <div className="max-w-6xl flex space-x-6 text-black">
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                প্রাথমিক প্রস্তাব পাঠিয়ে আপনার প্রতি আগ্রহী কিনা জানতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                প্রাথমিক প্রস্তাব পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                ছবি দেখার জন্য অনুরোধ পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                যোগাযোগ তথ্য দেখুন
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        {/* <div>পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন</div>
        <div>সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন</div> */}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/GeneralInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function GeneralInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          সাধারণ তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জন্ম তারিখ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অবিবাহিত</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'১"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ওজন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">রক্তের গ্রুপ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">AB−</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জাতীয়তা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বাংলাদেশী, ফরেইন সিটিজেন
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSection.tsx

import male from "@/assets/images/male-5.svg";
import { Card, CardContent } from "@/components/ui/card";
import {
  CircleChevronDown,
  Copy,
  Heart,
  IdCard,
  Mail,
  Send,
} from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import HeaderShortBio from "./HeaderShortBio";
import HeaderSpousePreferenceRequierment from "./HeaderSpousePreferenceRequierment";

export default function HeaderSection() {
  return (
    <div className="py-12 flex justify-center bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <div className="min-w-7xl flex space-x-8">
        <div className="w-1/4 flex flex-col space-y-8">
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col items-center space-y-4">
                <div className="w-full flex items-start justify-between">
                  <div className="w-1 text-[#00b754] text-md font-semibold">
                    Verified
                  </div>
                  <Image
                    src={male}
                    alt="Male"
                    width={100}
                    height={40}
                    priority
                  />
                  <div className="w-1"></div>
                </div>

                <div className="text-lg">
                  বায়োডাটা কোড: <span className="font-semibold">SNM-392</span>
                </div>

                <div className="flex space-x-4 border border-gray-400 rounded-xl p-4">
                  <Heart className="h-6 w-6" />
                  <IdCard className="h-6 w-6" />
                  <Copy className="h-6 w-6 rotate-90" />
                  <Mail className="h-6 w-6" />
                  <CircleChevronDown className="h-6 w-6 text-[#b52d1f]" />
                </div>
              </div>
            </CardContent>
          </Card>
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col space-y-4">
                <div className="text-xl font-medium text-center mb-4 text-[#b52d1f]">
                  আপনি আগ্রহী?
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col">
                    <div>প্রাথমিক প্রস্তাব পাঠান</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col space-x-2">
                    <div>অভিভাবকের যোগাযোগ তথ্য দেখুন</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <Link
                  href="/tutorial"
                  className="text-xs text-center hover:underline text-blue-300"
                >
                  (বিস্তারিত জানুন)
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className="w-3/4 flex space-x-8">
          <HeaderShortBio />
          <HeaderSpousePreferenceRequierment />
        </div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderShortBio.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderShortBio.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderShortBio() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          পাত্রের সংক্ষিপ্ত বিবরণ
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSpousePreferenceRequierment.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSpousePreferenceRequierment.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderSpousePreferenceRequierment() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          যেমন জীবনসঙ্গী আশা করেন
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/MarriageInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function MarriageInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          বিয়ে সংক্রান্ত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?</div> */}
          <div className="w-1/2">
            বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">
            বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?
          </div> */}
          <div className="w-1/2">
            আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?</div> */}
          <div className="w-1/2">
            যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* Male only */}
          <div className="w-1/2">
            বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে
            পারবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক বা উপহার
            বা অর্থ আশা করবেন কিনা?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পাত্রপক্ষ/পাত্রীপক্ষ অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিয়ে সংক্রান্ত আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PersonalInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PersonalInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ব্যক্তিগত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি দাড়ি পছন্দ?/দাড়ি রেখেছেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পরতে পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মানসিক বা শারীরিক কোনো রোগ আছে কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের কিছু গুণাবলী চিহ্নিত করুন</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শান্ত-শিষ্ট, ধৈর্যশীল, ইমোশনাল
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            আমি একজন সমাজ সেবক, আমি বন্ধ্যা-ইনফার্টিলিটি
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের মতো করে নিজের সম্পর্কে কিছু লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            রাজনীতি নিয়ে আপনার দৃষ্টিভঙ্গি কি? এর সাথে যুক্ত থাকলে বিস্তারিত
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অবসর সময়ে কি করতে পছন্দ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">সামাজিক বা ধর্মীয় কোনো কাজে যুক্ত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কিছু বইয়ের নাম (যদি পড়ে থাকেন)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">দৈনন্দিন খাবারে কি কি পছন্দ এবং অপছন্দ?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কয়েকজন ব্যক্তিত্বের নাম যাদেরকে নিয়মিত ফলো করেন
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার জীবনের লক্ষ্য কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন কোন সোসাল মিডিয়া ব্যবহার করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার আগ্রহ ও শখ কি কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div> */}
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PrimaryInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PrimaryInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          প্রাথমিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটার ধরন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটা কার জন্য তৈরী করছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/ReligiousInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function ReligiousInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ধর্মীয় লাইফস্টাইল
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি কি আপনার জীবনকে পরিপূর্ণ ভাবে ইসলামিক বিধি-বিধান অনুযায়ী
            পরিচালনা করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            জেনারেল/নন-প্রাক্টিসিং
          </div>
        </div>

        {/* Non Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় কোন মতাদর্শ মেনে চলেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সুন্নি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন মাজহাব / মানহাজ অনুসরণ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সালাফি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">প্রতিদিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Try Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি নামাজ কাযা হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Common */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু করেছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Male */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">টাখনুর উপরে কাপড় পরেন কিনা?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Female */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কি নিকাব সহ পর্দা করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/SpousePreferenceInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function SpousePreferenceInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          যেমন জীবনসঙ্গী আশা করেন
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত বয়স:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'২"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিশেষ শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মুহাদ্দিসা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            অবিবাহিত, ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেন, শর্ট ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় লাইফস্টাইল:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আল্লাহ যাদেরকে গাঢ় ত্বক বা কালো বর্ণ দিয়েছেন, এরকম পাত্রীর প্রতি
            আপনি আগ্রহী?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div> */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শহরে বসবাসকারী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardLeftNav.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardLeftNav.tsx
import profilePic from "@/assets/images/profile-pic.png";
import { Separator } from "@/components/ui/separator";
import Image from "next/image";

export default function DashboardLeftNav() {
  return (
    <div className="py-12 w-72 flex flex-col items-center space-y-1 bg-[#5b8eaa]">
      <Image
        src={profilePic}
        alt="Male"
        width={80}
        height={40}
        priority
        className="bg-[#77a1b8] p-4 rounded-full"
      />
      <div className="p-2">আব্দুল্লাহ বিন আব্দুর রাজ্জাক</div>
      <div className="mb-4 p-3 bg-[#c6d8e1] text-black rounded-xl">
        বায়োডাটা নং: <span className="font-semibold">43527</span>
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        বায়োডাটা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        নোটিফিকেশন
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        পছন্দের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        শর্টলিস্টের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        শর্টলিস্টের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        যোগাযোগ তথ্যের তালিকা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        টোকেন
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        বিবাহ সম্পন্ন
      </div>
      <Separator className="bg-white my-4" />
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        জিজ্ঞাসা
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        অভিযোগ
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        পরামর্শ
      </div>
      <div className="p-2 w-full text-center hover:bg-[#eff9ff] hover:text-black">
        মন্তব্য
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainBioStatus.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainBioStatus.tsx
import { Slider } from "@/components/ui/slider";

export default function DashboardMainBioStatus() {
  return (
    <div className="bg-[#f2f4fc] p-8 flex flex-col space-y-2 rounded-xl">
      <div className="text-[#005381] text-center text-2xl">বায়োডাটা</div>
      <div className="text-xs text-[#8c8e92] text-center">
        বায়োডাটা পাবলিশ হয়েছে ৫ নভেম্বর, ২০২৪
      </div>
      <div className="flex space-x-6 text-black mt-4">
        <div className="flex flex-col items-center bg-[#e7ecf6] p-6 space-y-6 rounded-xl">
          <div className="text-lg">বায়োডাটা স্ট্যাটাস</div>
          <div className="flex">
            <div className="py-4 rounded-3xl mr-[-2rem] px-6 bg-[#c65c5c] text-white z-10">
              প্রাইভেট
            </div>
            <div className="py-4 rounded-3xl pr-6 pl-12 bg-[#d9d9d9] text-[#777] ">
              পাবলিক
            </div>
            {/* <div className="py-4 rounded-3xl mr-[-2rem] pl-6 pr-12 bg-[#d9d9d9] text-[#777]">
                প্রাইভেট
              </div>
              <div className="py-4 rounded-3xl px-6 bg-[#c65c5c] text-white z-10">
                পাবলিক
              </div> */}
          </div>
        </div>
        <div className="w-72 flex flex-col items-center bg-[#e7ecf6] p-6 space-y-6 rounded-xl">
          <div className="text-lg">বায়োডাটা সম্পূর্ণতা</div>
          <Slider value={[70]} min={0} max={100} step={1} className="w-full" />
          <div>৭০%</div>
        </div>
        <div className="flex flex-col items-center space-y-6">
          <div className="w-48 p-4 bg-[#5b8eaa] rounded-xl text-white text-center">
            বায়োডাটা দেখুন
          </div>
          <div className="w-48 p-4 bg-[#5b8eaa] rounded-xl text-white text-center">
            বায়োডাটা এডিট করুন
          </div>
        </div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainContactUs.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainContactUs.tsx
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Textarea } from "@/components/ui/textarea";

export default function DashboardMainContactUs() {
  const tabs = ["জিজ্ঞাসা", "অভিযোগ", "পরামর্শ", "মন্তব্য"];

  return (
    <Tabs defaultValue="জিজ্ঞাসা" className="bg-[#f2f4fc] p-4 rounded-xl gap-0">
      <TabsList className="bg-[#5b8eaa] text-white p-0">
        {tabs.map((x) => (
          <TabsTrigger
            key={x}
            className="p-0 data-[state=active]:bg-[#f2f4fc] data-[state=active]:text-black"
            value={x}
          >
            <div className="px-4 py-2">{x}</div>
          </TabsTrigger>
        ))}
      </TabsList>
      {tabs.map((x) => (
        <TabsContent key={x} value={x}>
          <ContactUsCard />
        </TabsContent>
      ))}
    </Tabs>
  );
}

export function ContactUsCard() {
  return (
    <Card className="bg-transparent border-none shadow-none p-4">
      <CardContent className="flex p-0 items-center space-x-8">
        <Textarea
          className="bg-white text-black selection:bg-[#E25A6F] selection:text-white"
          id="comment"
        />
        <Button className="bg-[#5b8eaa] text-white">Send</Button>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainContent.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainContent.tsx
import DashboardMainBioStatus from "./DashboardMainBioStatus";
import DashboardMainContactUs from "./DashboardMainContactUs";
import DashboardMainMyActivityStatus from "./DashboardMainMyActivityStatus";
import DashboardMainMyBioStatus from "./DashboardMainMyBioStatus";
import DashboardMainNotifications from "./DashboardMainNotifications";

export default function DashboardMainContent() {
  return (
    <div className="py-12 flex flex-col space-y-8 max-w-7xl">
      <DashboardMainBioStatus />
      <div className="flex justify-center space-x-16 text-black">
        <DashboardMainMyActivityStatus />
        <DashboardMainMyBioStatus />
      </div>
      <DashboardMainNotifications />
      <DashboardMainContactUs />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainMyActivityStatus.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainMyActivityStatus.tsx
export default function DashboardMainMyActivityStatus() {
  return (
    <div className="w-96 bg-[#f2f4fc] p-8 flex flex-col space-y-4 rounded-xl">
      <div className="text-2xl text-[#005381] text-center mb-8">
        আপনার বায়োডাটা সর্বমোট
      </div>
      <div className="flex justify-between">
        <div>ভিউ হয়েছে</div>
        <div className="w-6 text-center">১২</div>
      </div>
      <div className="flex justify-between">
        <div>পছন্দের তালিকায় রেখেছে</div>
        <div className="w-6 text-center">৮</div>
      </div>
      <div className="flex justify-between">
        <div>শর্টলিস্টে রেখেছে</div>
        <div className="w-6 text-center">৫</div>
      </div>
      <div className="flex justify-between">
        <div>প্রাথমিক প্রস্তাব এসেছে</div>
        <div className="w-6 text-center">১২</div>
      </div>
      <div className="flex justify-between">
        <div>যোগাযোগ তথ্য নিয়েছে</div>
        <div className="w-6 text-center">৩</div>
      </div>
      <div className="flex justify-between">
        <div>রিপোর্ট এসেছে</div>
        <div className="w-6 text-center">৩</div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainMyBioStatus.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainMyBioStatus.tsx
export default function DashboardMainMyBioStatus() {
  return (
    <div className="w-96 bg-[#f2f4fc] p-8 flex flex-col space-y-4 rounded-xl">
      <div className="text-2xl text-[#005381] text-center mb-8">
        আপনি সর্বমোট বায়োডাটা
      </div>
      <div className="flex justify-between">
        <div>পছন্দের তালিকায় রেখেছেন</div>
        <div className="w-6 text-center">৮</div>
      </div>
      <div className="flex justify-between">
        <div>শর্টলিস্টে রেখেছেন</div>
        <div className="w-6 text-center">৮</div>
      </div>
      <div className="flex justify-between">
        <div>প্রাথমিক প্রস্তাব পাঠিয়েছেন</div>
        <div className="w-6 text-center">৫</div>
      </div>
      <div className="flex justify-between">
        <div>যোগাযোগ তথ্য নিয়েছেন </div>
        <div className="w-6 text-center">৩</div>
      </div>
      <div className="flex justify-between">
        <div>রিপোর্ট করেছেন</div>
        <div className="w-6 text-center">৩</div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardMainNotifications.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardMainNotifications.tsx

export default function DashboardMainNotifications() {
  const notiication = [
    {
      id: 1,
      description: "নোটিফিকেশন 1",
    },
    {
      id: 2,
      description: "নোটিফিকেশন 2",
    },
  ];

  return (
    <div className="bg-[#f2f4fc] p-8 flex flex-col space-y-4 rounded-xl text-black">
      <div className="text-[#005381] text-center text-2xl mb-4">নোটিফিকেশন</div>
      {notiication &&
        notiication.map((x) => (
          <div key={x.id} className="bg-[#e8e8ed] mx-8 p-2 rounded-md text-sm">
            {x.description}
          </div>
        ))}
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\DashboardRightSection.tsx
// --------------------
// File: src/app/(main)/dashboard/DashboardRightSection.tsx
export default function DashboardRightSection() {
  return (
    <div className="py-12 mr-8 flex flex-col items-center space-y-6">
      <div className="p-10 bg-[#f9f3f9] rounded-3xl flex flex-col items-center justify-center space-y-4">
        <div className="text-black text-center">আপনার সর্বমোট টোকেন সংখ্যা</div>
        <div className="text-8xl text-[#ad0000] font-semibold">১</div>
        <div className="px-6 py-4 bg-[#3c4652] rounded-md">টোকেন কিনুন</div>
      </div>
      <div className="p-10 bg-[#f9f3f9] rounded-3xl flex flex-col items-center justify-center space-y-4">
        <div className="text-black text-center">
          আপনার কি বিবাহ সম্পন্ন হয়েছে?
        </div>
        <div className="px-16 py-4 bg-[#5b8eaa] rounded-md">হ্যা</div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\dashboard\page.tsx
// --------------------
// File: src/app/(main)/dashboard/page.tsx
"use client";
import { useAppSelector } from "@/redux/hooks";
import { redirect } from "next/navigation";
import DashboardLeftNav from "./DashboardLeftNav";
import DashboardMainContent from "./DashboardMainContent";
import DashboardRightSection from "./DashboardRightSection";

export default function DashboardPage() {
  const user = useAppSelector((state) => state.auth.user);
  const token = useAppSelector((state) => state.auth.acesstoken);
  console.log(user);
  if (!user || !token) {
    redirect("/login");
  }
  return (
    <main className="flex justify-between flex-grow bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <DashboardLeftNav />

      <DashboardMainContent />
      <DashboardRightSection />
    </main>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\layout.tsx
// --------------------
// File: src/app/(main)/layout.tsx
import { Footer } from "@/components/footer";
import { Navbar } from "@/components/navbar";
import { ReactNode } from "react";

export default function MainLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <div className="flex flex-col min-h-screen bg-white">
      <Navbar />
      {children}
      <Footer />
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\tutorial\page.tsx
// --------------------
// File: src/app/(main)/tutorial/page.tsx
const Page = () => {
  return (
    <div>
      <h1>This is Page component</h1>
    </div>
  );
};

export default Page;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\BiodataEditor.tsx
// --------------------
// File: src/app/(main)/biodata-editor/BiodataEditor.tsx
"use client";

import { createBiodata } from "@/app/services/biodata.service";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";
import { useSearchParams } from "next/navigation";
import { useCallback, useMemo } from "react";
import Breadcrumbs from "./biodataFormComponents/Breadcrumbs";
import { steps } from "./steps";

interface BiodataEditorProps {
  biodataToEdit: any | null;
}

export default function BiodataEditor({ biodataToEdit }: BiodataEditorProps) {
  const dispatch = useAppDispatch();
  const biodataFormData = useAppSelector(
    (state) => state.biodata.biodataFormData
  );

  const searchParams = useSearchParams();
  const currentStepKey = searchParams.get("step") || steps[0].key;
  const currentStep = useMemo(
    () => steps.find((x) => x.key === currentStepKey),
    [currentStepKey]
  );

  const setStep = useCallback(
    (key: string) => {
      const newSearchParams = new URLSearchParams(searchParams);
      newSearchParams.set("step", key);
      window.history.pushState(null, "", `?${newSearchParams.toString()}`);
    },
    [searchParams]
  );

  const FormComponent = useMemo(() => currentStep?.component, [currentStep]);

  const handleFormDataUpdate = useCallback(
    (data: any) => {
      // Create a clean copy of the data without any circular references
      const cleanData = JSON.parse(JSON.stringify(data));

      dispatch(
        setBiodataFormData({
          key: `${currentStepKey}FormData`,
          data: cleanData,
        })
      );
    },
    [dispatch, currentStepKey]
  );

  const handleSave = useCallback(async () => {
    if (!currentStep) return;

    switch (currentStep.key) {
      case "first-words":
        // Create a clean copy of the data before sending to API
        const cleanData = JSON.parse(
          JSON.stringify(biodataFormData?.firstWordsFormData)
        );
        await createBiodata(cleanData);
        setStep(currentStep.next);
        break;
      default:
        setStep(currentStep.next);
        break;
    }
  }, [currentStep, biodataFormData, setStep]);

  if (!FormComponent) return null;

  return (
    <>
      <Breadcrumbs currentStep={currentStep?.key} setCurrentStep={setStep} />
      <div className="mt-8 w-full">
        <FormComponent
          biodataFormData={biodataFormData}
          setBiodataFormData={handleFormDataUpdate}
          handleSave={handleSave}
          currentStep={currentStep}
          setCurrentStep={setStep}
        />
      </div>
      {process.env.NODE_ENV === "development" && (
        <pre className="text-sm bg-white p-2 rounded-md shadow">
          {JSON.stringify(biodataFormData, null, 2)}
        </pre>
      )}
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/AddressInfo.tsx

"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { citizenshipOptions, locations, types } from "@/lib/consts";
import { AddressInfoFormData, BiodataFormDataProps } from "@/lib/types";
import { addressInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function AddressInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<AddressInfoFormData>({
    resolver: zodResolver(addressInfoFormData),
    defaultValues: {
      addresses: biodataFormData?.addressInfoFormData?.addresses || [
        {
          type: "",
          location: "",
          state: "",
          city: "",
          detail: "",
          country: "",
          cityzenshipStatus: "",
        },
      ],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "addresses",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        addressInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ঠিকানা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`addresses.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার ধরন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="ঠিকানার ধরন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {types.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.location`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      অবস্থান ধরণ:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="অবস্থান ধরণ:" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {locations.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.state`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "স্টেট"
                      : "স্থায়ী জেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        {label}:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.city`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "শহর"
                      : "স্থায়ী উপজেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        <div>{label}:</div>
                        <div className="text-xs">(যদি থাকে)</div>
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.detail`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার বিস্তারিত:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            type="text"
                            placeholder="ঠিকানার বিস্তারিত"
                          />
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.country`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        দেশের নাম:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              id="emailMobileNumber"
                              type="text"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.cityzenshipStatus`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        সিটিজেনশিপ আছে?
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <RadioGroup
                              className="w-full flex flex-wrap gap-0 min-h-12"
                              onValueChange={field.onChange}
                              value={field.value}
                            >
                              {citizenshipOptions.map((x) => (
                                <div
                                  key={x.id}
                                  className="w-1/3 flex items-center space-x-2"
                                >
                                  <RadioGroupItem value={x.id} id={x.id} />
                                  <Label htmlFor={x.id}>{x.title}</Label>
                                </div>
                              ))}
                            </RadioGroup>
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
            </div>
          ))}

          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                location: "",
                state: "",
                city: "",
                detail: "",
                country: "",
                cityzenshipStatus: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ঠিকানা যোগ করুন</span>
          </Button>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\Breadcrumbs.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/Breadcrumbs.tsx

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
} from "@/components/ui/breadcrumb";
import { steps } from "../steps";

interface BreadcrumbsProps {
  currentStep: string;
  setCurrentStep: (step: string) => void;
}

export default function Breadcrumbs({
  currentStep,

  setCurrentStep,
}: BreadcrumbsProps) {
  return (
    <Breadcrumb className="max-w-6xl bg-[#f6f6f6] rounded-2xl p-2">
      <BreadcrumbList className="flex justify-center">
        {steps.map((step) => (
          <BreadcrumbItem
            key={step.key}
            className="text-[#004972] rounded-full"
          >
            {step.key === currentStep ? (
              <BreadcrumbPage className="bg-[#e25a6f] text-white px-3 py-2 rounded-full">
                {step.title}
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink
                asChild
                className="hover:text-[#e25a6f] px-3 py-2 cursor-pointer"
              >
                <button onClick={() => setCurrentStep(step.key)}>
                  {step.title}
                </button>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        ))}
      </BreadcrumbList>
    </Breadcrumb>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\EducationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/EducationInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { educationTypes, religiousEducationQualities } from "@/lib/consts";
import { BiodataFormDataProps, EducationInfoFormData } from "@/lib/types";
import { educationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function EducationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<EducationInfoFormData>({
    resolver: zodResolver(educationInfoFormData),
    defaultValues: {
      type: biodataFormData?.educationInfoFormData?.type || "",
      highestDegree:
        biodataFormData?.educationInfoFormData?.highestDegree || "",
      degrees:
        biodataFormData?.educationInfoFormData?.degrees?.length > 0
          ? biodataFormData?.educationInfoFormData?.degrees.map((x) => {
              return {
                name: x.name,
                passYear: x.passYear,
                group: x.group,
                institute: x.institute,
              };
            })
          : [{ name: "", passYear: "", group: "", institute: "" }],
      religiousEducation:
        biodataFormData?.educationInfoFormData?.religiousEducation || [],
      detail: biodataFormData?.educationInfoFormData?.detail || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        educationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "degrees",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">শিক্ষাগত যোগ্যতা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষার ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="শিক্ষার ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {educationTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="highestDegree"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার সর্বোচ্চ শিক্ষাগত ডিগ্রীর নাম:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="text-[#E25A6F]">
            মাধ্যমিক পর্যায় থেকে শুরু করে এখন পর্যন্ত যেসকল ডিগ্রী অর্জন করেছেন
            বা চলমান রয়েছে সেগুলো নিচে প্লাস বাটন চাপ দিয়ে ধাপে ধাপে যুক্ত করুন।
            কোনো ডিগ্রী না থাকলে খালি রাখুন।
          </div>
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`degrees.${index}.name`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ডিগ্রীর নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            placeholder="ডিগ্রীর নাম"
                          />
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.passYear`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পাশের সন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পাশের সন"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.group`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বিভাগ/বিষয়:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বিভাগ/বিষয়"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.institute`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      শিক্ষা প্রতিষ্ঠানের নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="শিক্ষা প্রতিষ্ঠানের নাম"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                name: "",
                passYear: "",
                group: "",
                institute: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ডিগ্রী যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="religiousEducation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value?.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষা সম্পর্কিত আরো কিছু জানাতে চাইলে নিচে লিখুন। অন্যথায়
                    খালি রাখুন।
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FamilyInfo.tsx

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { familyBackgrounds, familyTypes, siblingTypes } from "@/lib/consts";
import { BiodataFormDataProps, FamilyInfoFormData } from "@/lib/types";
import { familyInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function FamilyInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FamilyInfoFormData>({
    resolver: zodResolver(familyInfoFormData),
    defaultValues: {
      parentsAlive: biodataFormData?.familyInfoFormData?.parentsAlive || "",
      fatherOccupation:
        biodataFormData?.familyInfoFormData?.fatherOccupation || "",
      motherOccupation:
        biodataFormData?.familyInfoFormData?.motherOccupation || "",
      siblings: biodataFormData?.familyInfoFormData?.siblings || [],
      fatherSideDetail:
        biodataFormData?.familyInfoFormData?.fatherSideDetail || "",
      motherSideDetail:
        biodataFormData?.familyInfoFormData?.motherSideDetail || "",
      familyType: biodataFormData?.familyInfoFormData?.familyType || "",
      familyBackground:
        biodataFormData?.familyInfoFormData?.familyBackground || "",
      livingCondition:
        biodataFormData?.familyInfoFormData?.livingCondition || "",
      wealthDescription:
        biodataFormData?.familyInfoFormData?.wealthDescription || "",
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "siblings",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        familyInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পারিবারিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="parentsAlive"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পিতা-মাতা উভয়েই জীবিত আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনার পিতা-মাতা উভয়েই জীবিত আছেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`siblings.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ভাই/বোন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center gap-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                              <SelectValue placeholder="ভাই/বোন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {siblingTypes.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.occupation`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পেশা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পেশা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.maritalStatus`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বৈবাহিক অবস্থা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বৈবাহিক অবস্থা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.children`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      সন্তান সংখ্যা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="সন্তান সংখ্যা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                occupation: "",
                maritalStatus: "",
                children: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ভাই/বোন যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="fatherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    চাচা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="চাচা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মামা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মামা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের অর্থনৈতিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyBackgrounds.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="livingCondition"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া
                    বাড়িতে?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="wealthDescription"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FinalWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FinalWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Label } from "@/components/ui/label";
import { BiodataFormDataProps, FinalWordsFormData } from "@/lib/types";
import { finalWordsFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function FinalWords({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FinalWordsFormData>({
    resolver: zodResolver(finalWordsFormData),
    defaultValues: {
      postApprovalOathTruthfulInfo:
        biodataFormData?.finalWordsFormData?.postApprovalOathTruthfulInfo ||
        false,
      postApprovalOathNoMisuse:
        biodataFormData?.finalWordsFormData?.postApprovalOathNoMisuse || false,
      postApprovalOathLegalResponsibility:
        biodataFormData?.finalWordsFormData
          ?.postApprovalOathLegalResponsibility || false,
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        finalWordsFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">শেষ কথা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-10 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl text-center">
            প্রতিশ্রুতি নামা
          </div>
          <div className="text-[#cd0000] space-y-3">
            <div className="flex items-center space-x-2">
              <Label htmlFor="preApprove1" className="text-[#6C0011] leading-5">
                আমি আল্লাহর নামে শপথ করছি যে,
              </Label>
            </div>
            <FormField
              control={form.control}
              name="postApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি বায়োডাটায় সকল তথ্য সত্য প্রদান করেছি।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathNoMisuse"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      সহজনিকাহ ম্যাট্রিমনি ওয়েবসাইটের কোনো তথ্য অসৎ কাজে ব্যবহার
                      করবো না।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      কোনো মিথ্যা তথ্য প্রদান করলে বা কোনো তথ্য অসৎ কাজে ব্যবহার
                      করে থাকলে, দুনিয়াবী যেকোনো আইনী জটিলতা এবং পরকালীন সকল
                      দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-ful">
        <Button className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]">
          Submit and Send For Approval
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\FirstWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FirstWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { FirstWordsFormData } from "@/lib/types";
import { firstWordsFormData } from "@/lib/validations";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch } from "@/redux/hooks";
import { zodResolver } from "@hookform/resolvers/zod";
import { useState } from "react";
import { useForm } from "react-hook-form";

interface BiodataFormDataProps {
  biodataFormData: any;
  handleSave: () => void;
  currentStep: any;
  setCurrentStep: (step: string) => void;
}

export default function FirstWords({
  biodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const dispatch = useAppDispatch();
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FirstWordsFormData>({
    resolver: zodResolver(firstWordsFormData),
    defaultValues: {
      preApprovalAcceptTerms:
        biodataFormData?.firstWordsFormData?.preApprovalAcceptTerms || false,
      preApprovalOathTruthfulInfo:
        biodataFormData?.firstWordsFormData?.preApprovalOathTruthfulInfo ||
        false,
      preApprovalOathLegalResponsibility:
        biodataFormData?.firstWordsFormData
          ?.preApprovalOathLegalResponsibility || false,
    },
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      const formValues = form.getValues();
      // Only update if we have valid values
      if (Object.values(formValues).some((value) => value !== undefined)) {
        dispatch(
          setBiodataFormData({
            key: "firstWordsFormData",
            data: formValues,
          })
        );
        handleSave();
      }
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">
        বায়োডাটা তৈরির পূর্বে কিছু গুরুত্বপূর্ণ কথা
      </div>
      <div className="max-w-4xl w-full space-y-4 text-sm text-black">
        <div>
          আপনি যখন সহজনিকাহ ম্যাট্রিমনিতে জীবনসঙ্গী খুঁজতে এসেছেন, এর মানে হলো,
          আপনি বিবাহের একটি অত্যন্ত গুরুত্বপূর্ণ অধ্যায় অতিবাহিত করছেন। চাকরির
          জন্য যেমন সুন্দর করে গুছিয়ে একটি সিভি তৈরি করা হয়, ঠিক তেমনি
          জীবনসঙ্গী নির্বাচনের ক্ষেত্রে আরও বেশি সুন্দর করে এবং গুরুত্ব দিয়ে
          বায়োডাটা তৈরি করা উচিত। কেননা যিনি আপনার কাছে জীবনসঙ্গী হয়ে আসবেন,
          তিনি যেন এই বায়োডাটার মাধ্যমে আপনাকে সঠিকভাবে জানাতে এবং বুঝতে পারেন।
        </div>
        <div>
          তাই সময় নিয়ে, মনোযোগ দিয়ে আপনার বায়োডাটা গুছিয়ে তৈরি করুন। প্রতিটি
          প্রশ্নের উত্তর সত্য এবং সঠিকভাবে দিন এবং নিশ্চিত করুন যে, তথ্যগুলো
          আপনাকে অপরপক্ষের কাছে সঠিকভাবে উপস্থাপন করছে। সম্পূর্ণ বায়োডাটা
          তৈরিতে বেশ কিছুটা সময় লাগবে, কারণ এখানে অনেকগুলো প্রশ্ন আছে। কাজেই
          ধৈর্য্য সহকারে, বেশ কিছুটা সময় নিয়ে বায়োডাটা ফর্ম পূরণ করুন।
          (আনুমানিক ৩০ মিনিট)
        </div>
        <div>
          বি: দ্র:{" "}
          <span className="text-[#005A8B]">
            আপনার এই বায়োডাটা কেউ পছন্দ করলে এবং আপনার সাথে যোগাযোগ করতে চাইলে
            শুধুমাত্র আপনার অভিভাবকের যোগাযোগের মোবাইল নম্বর প্রদান করা হবে।
            একইভাবে আপনিও কোনো বায়োডাটার যোগাযোগ তথ্য নিতে চাইলে শুধুমাত্র
            অভিভাবকের যোগাযোগ নম্বর নিতে পারবেন।
          </span>
        </div>
      </div>
      <div className="max-w-4xl w-full bg-[#f6f6f6] py-6 px-12 space-y-4 text-black rounded-4xl">
        <div className="text-[#005A8B] text-xl">
          বায়োডাটা অ্যাপ্রুভ হওয়ার শর্তসমূহ:
        </div>
        <div className="text-sm">
          <ol className="list-decimal space-y-1">
            <li>
              অবশ্যই মুসলিম হতে হবে। সহজনিকাহ শুধুমাত্র প্রাক্টিসিং,
              নন-প্রাক্টিসিং সহ সকল ধরণের মুসলিমদের নিয়ে কাজ করে থাকে।
            </li>
            <li>
              ছেলেদের বয়স কমপক্ষে ২১ বছর এবং মেয়েদের ক্ষেত্রে ১৮ বছর হতে হবে।
            </li>
            <li>
              অভিভাবকের যোগাযোগ তথ্যের ঘরে পাত্র/পাত্রীর নিজের বা বন্ধুর মোবাইল
              নম্বর প্রদান করা যাবে না।
            </li>
            <li>
              বাংলা, ইংলিশ মিশ্রিত বাংলিশ ভাষায় লেখা যাবে না। পুরোটাই বাংলায়
              অথবা পুরোটাই ইংরেজিতে লিখতে হবে।
            </li>
            <li>
              নিজের শিক্ষা, পেশা এবং পারিবারিক তথ্যে বিস্তারিত উত্তর লিখতে হবে।
            </li>
            <li>
              তথ্য ভেরিফিকেশনের সময় বায়োডাটায় দেওয়া তথ্যের সাথে মিল থাকতে হবে।
            </li>
          </ol>
        </div>
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-6 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl">প্রতিশ্রুতি নামা:</div>
          <div className="text-[#cd0000] space-y-2">
            <FormField
              control={form.control}
              name="preApprovalAcceptTerms"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি শর্তসমূহ পড়েছি এবং তা মেনে চলার প্রতিশ্রুতি দিচ্ছি।
                    </FormLabel>

                    {/* <FormDescription>
                      Describe what this resume is for.
                    </FormDescription> */}
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আল্লাহর নামে শপথ করছি যে, বায়োডাটায় সকল তথ্য সত্য
                      প্রদান করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আরও শপথ করছি যে, কোনো মিথ্যা তথ্য প্রদান করলে দুনিয়াবী
                      যেকোনো আইনী জটিলতা এবং পরকালীন সকল দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/GeneralInfo.tsx

"use client";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  bloodGroups,
  heights,
  maritalStatuses,
  nationalities,
  skinTones,
} from "@/lib/consts";
import { BiodataFormDataProps, GeneralInfoFormData } from "@/lib/types";
import { cn } from "@/lib/utils";
import { generalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { format } from "date-fns";
import { CalendarIcon } from "lucide-react";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function GeneralInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<GeneralInfoFormData>({
    resolver: zodResolver(generalInfoFormData),
    defaultValues: {
      dateOfBirth: biodataFormData?.generalInfoFormData?.dateOfBirth || "",
      maritalStatus: biodataFormData?.generalInfoFormData?.maritalStatus || "",
      skinTone: biodataFormData?.generalInfoFormData?.skinTone || "",
      height: biodataFormData?.generalInfoFormData?.height || "",
      weight: biodataFormData?.generalInfoFormData?.weight || "",
      bloodGroup: biodataFormData?.generalInfoFormData?.bloodGroup || "",
      nationality: biodataFormData?.generalInfoFormData?.nationality || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        generalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const maritalStatusOptions = maritalStatuses.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">সাধারণ তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="dateOfBirth"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জন্ম তারিখ:</div>
                    <div className="text-xs">(আসল, সার্টিফিকেট অনুযায়ী নয়)</div>
                  </FormLabel>
                  <FormControl>
                    <Popover>
                      <PopoverTrigger asChild>
                        <Button
                          className={cn(
                            "p-6 w-full bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]",
                            !field.value && "text-muted-foreground"
                          )}
                        >
                          <CalendarIcon className="mr-2 h-4 w-4" />
                          {field.value ? (
                            format(field.value, "PPP")
                          ) : (
                            <span>জন্ম তারিখ</span>
                          )}
                        </Button>
                      </PopoverTrigger>
                      <PopoverContent className="w-auto p-0">
                        <Calendar
                          className="bg-[#005889]"
                          classNames={{
                            day_selected: "bg-[#E25A6F]",
                            day_today: "bg-white text-black",
                          }}
                          mode="single"
                          selected={
                            field.value ? new Date(field.value) : undefined
                          }
                          onSelect={(date) =>
                            field.onChange(date?.toISOString())
                          }
                          initialFocus
                        />
                      </PopoverContent>
                    </Popover>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বৈবাহিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {maritalStatusOptions.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="গাত্রবর্ণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {skinTones.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="weight"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ওজন:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ওজন"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="bloodGroup"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    রক্তের গ্রুপ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="রক্তের গ্রুপ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {bloodGroups.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="nationality"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জাতীয়তা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="জাতীয়তা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {nationalities.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/MarriageInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { afterMarriageJobs, afterMarriageStuties } from "@/lib/consts";
import { BiodataFormDataProps, MarriageInfoFormData } from "@/lib/types";
import { marriageInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function MarriageInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<MarriageInfoFormData>({
    resolver: zodResolver(marriageInfoFormData),
    defaultValues: {
      guardianApproval:
        biodataFormData?.marriageInfoFormData?.guardianApproval || "",
      continueStudy: biodataFormData?.marriageInfoFormData?.continueStudy || "",
      careerPlan: biodataFormData?.marriageInfoFormData?.careerPlan || "",
      residence: biodataFormData?.marriageInfoFormData?.residence || "",
      arrangeHijab: biodataFormData?.marriageInfoFormData?.arrangeHijab || "",
      dowryExpectation:
        biodataFormData?.marriageInfoFormData?.dowryExpectation || "",
      allowShowingPhotoOnline:
        biodataFormData?.marriageInfoFormData?.allowShowingPhotoOnline || "",
      additionalMarriageInfo:
        biodataFormData?.marriageInfoFormData?.additionalMarriageInfo || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        marriageInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const afterMarriageStutyOptions = afterMarriageStuties.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  const afterMarriageJobOptions = afterMarriageJobs.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">বিয়ে সংক্রান্ত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="guardianApproval"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
                    <div className="text-xs">
                      (যদি অভিভাবক রাজি নাও থাকে তাহলে এর কারণ লিখুন এবং
                      সেক্ষেত্রে আপনি কেন বিবাহে আগাচ্ছেন সেটা বিস্তারিত লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="continueStudy"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?"
                      : "বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageStutyOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="careerPlan"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?"
                      : "আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageJobOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="residence"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?"
                      : "যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="arrangeHijab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে পারবেন?"
                      : "বাড়িতে বা বাহিরে পর্দা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="dowryExpectation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক / উপহার / অর্থ আশা করবেন কিনা?"
                      : "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রপক্ষকে যৌতুক / উপহার / অর্থ দিতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="allowShowingPhotoOnline"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "পাত্রীপক্ষ"
                      : "পাত্রপক্ষ"}{" "}
                    অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="additionalMarriageInfo"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>
                      বিয়ে সংক্রান্ত আরো কিছু জানাতে চাইলে এখানে লিখুন: অন্যথায়
                      খালি রাখুন।
                    </div>
                    <div className="text-xs">
                      (যেমন: পাত্র-পাত্রী সাক্ষাতের ব্যাপারে, অভিভাবকদের মতামত
                      নিয়ে, কেমন বিয়ে চান, বিয়ের পর কোন কোন বিষয় ছাড় দিতে রাজি
                      নন ইত্যাদি কিছু জানানোর থাকলে লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\OccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/OccupationInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { occupationsList } from "@/lib/consts";
import { BiodataFormDataProps, OccupationInfoFormData } from "@/lib/types";
import { occupationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function OccupationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<OccupationInfoFormData>({
    resolver: zodResolver(occupationInfoFormData),
    defaultValues: {
      occupations: biodataFormData?.occupationInfoFormData?.occupations || [],
      detail: biodataFormData?.occupationInfoFormData?.detail || "",
      monthlyIncome:
        biodataFormData?.occupationInfoFormData?.monthlyIncome || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        occupationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পেশা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="occupations"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পেশা নিয়ে বিস্তারিত লিখুন:</div>
                    <div className="text-xs">
                      (অর্থাৎ আপনার কর্মস্থল কোথায়, কি ধরণের কাজে দায়িত্বরত আছেন
                      বা পদবি কি, এগুলো নিয়ে বিস্তারিত লিখুন। পেশা না থাকলে খালি
                      রাখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="monthlyIncome"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাসিক আয়:</div>
                    <div className="text-xs">(পেশা না থাকলে খালি রাখুন।)</div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাসিক আয়"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PersonalInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { characteristics, specialCatagories } from "@/lib/consts";
import { BiodataFormDataProps, PersonalInfoFormData } from "@/lib/types";
import { personalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function PersonalInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PersonalInfoFormData>({
    resolver: zodResolver(personalInfoFormData),
    defaultValues: {
      beardStatus: biodataFormData?.personalInfoFormData?.beardStatus || "",
      preferredOutfit:
        biodataFormData?.personalInfoFormData?.preferredOutfit || "",
      entertainmentPreferences:
        biodataFormData?.personalInfoFormData?.entertainmentPreferences || "",
      healthConditions:
        biodataFormData?.personalInfoFormData?.healthConditions || "",
      personalTraits:
        biodataFormData?.personalInfoFormData?.personalTraits || [],
      genderEqualityView:
        biodataFormData?.personalInfoFormData?.genderEqualityView || "",
      lgbtqOpinion: biodataFormData?.personalInfoFormData?.lgbtqOpinion || "",
      specialConditions:
        biodataFormData?.personalInfoFormData?.specialConditions || [],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        personalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const specialCatagoryOptions = specialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ব্যক্তিগত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="beardStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "আপনি দাড়ি রেখেছেন কি?"
                      : "আপনার কি দাড়ি পছন্দ?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="preferredOutfit"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পড়তে পছন্দ করেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="entertainmentPreferences"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="healthConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মানসিক বা শারীরিক কোনো রোগ আছে কি? থাকলে বিস্তারিত লিখুন।
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="personalTraits"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নিজের কিছু গুণাবলী চিহ্নিত করুন:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {characteristics.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="genderEqualityView"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="lgbtqOpinion"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {specialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PrimaryInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { biodataTypes } from "@/lib/consts";
import { BiodataFormDataProps, PrimaryInfoFormData } from "@/lib/types";
import { primaryInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function PrimaryInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PrimaryInfoFormData>({
    resolver: zodResolver(primaryInfoFormData),
    defaultValues: {
      biodataType: biodataFormData?.primaryInfoFormData?.biodataType || "",
      biodataFor: biodataFormData?.primaryInfoFormData?.biodataFor || "",
      fullName: biodataFormData?.primaryInfoFormData?.fullName || "",
      fatherName: biodataFormData?.primaryInfoFormData?.fatherName || "",
      motherName: biodataFormData?.primaryInfoFormData?.motherName || "",
      email: biodataFormData?.primaryInfoFormData?.email || "",
      phoneNumber: biodataFormData?.primaryInfoFormData?.phoneNumber || "",
      guardianContacts:
        biodataFormData?.primaryInfoFormData?.guardianContacts?.length > 0
          ? biodataFormData?.primaryInfoFormData?.guardianContacts.map((x) => {
              return {
                relation: x.relation,
                fullName: x.fullName,
                phoneNumber: x.phoneNumber,
              };
            })
          : [
              { relation: "", fullName: "", phoneNumber: "" },
              { relation: "", fullName: "", phoneNumber: "" },
            ],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        primaryInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "guardianContacts",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রাথমিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="biodataType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বায়োডাটার ধরন:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বায়োডাটার ধরন" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {biodataTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="biodataFor"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>বায়োডাটা কার জন্য তৈরী করছেন?</div>
                    <div className="text-xs">
                      (যেমনঃ নিজের জন্য/বোনের জন্য/বন্ধুর জন্য/ভাগ্নির জন্য
                      ইত্যাদি)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fullName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
                    <div className="text-xs">
                      (NID কার্ডে যে নাম আছে। নাম বায়োডাটায় প্রকাশ করা হবে না।
                      শুধুমাত্র ভেরিফিকেশন ও অপরপক্ষকে যোগাযোগ তথ্য প্রদানের
                      ক্ষেত্রে প্রয়োজন হবে।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="সম্পূর্ণ নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="email"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>ইমেইল আইডি:</div>
                    <div className="text-xs">
                      (পাত্র/পাত্রীর সাথে আমাদের যোগাযোগের জন্য প্রয়োজন হবে।
                      অপরপক্ষ যোগাযোগ তথ্য নিতে চাইলে যুক্তিসঙ্গত কারণ বা
                      প্রয়োজন ছাড়া পাঠানো হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ইমেইল আইডি"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="phoneNumber"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর মোবাইল নম্বর:</div>
                    <div className="text-xs">
                      (মোবাইল নম্বর শুধুমাত্র ভেরিফিকেশনের জন্য আমাদের কাছে
                      থাকবে। কাউকে প্রদান করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মোবাইল নম্বর"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="flex flex-col space-y-2">
            <FormLabel className="flex items-center justify-between space-x-8">
              <div className="text-md space-y-1 leading-4.5">
                <div>পাত্র/পাত্রীর অভিভাবকের মোবাইল নম্বর:</div>
                <div className="text-xs">
                  <div>কমপক্ষে ২ টি সচল নম্বর প্রদান করতে হবে।</div>
                </div>
              </div>
              <Button
                type="button"
                className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
                onClick={() => append({ fullName: "", phoneNumber: "" })}
              >
                <Plus size={20} /> <span>নতুন নম্বর যোগ করুন</span>
              </Button>
            </FormLabel>

            <div className="space-y-2">
              {fields.map((field, index) => (
                <div className="flex space-x-2 items-center" key={field.id}>
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.relation`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="সম্পর্ক"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.fullName`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের নাম"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.phoneNumber`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের মোবাইল নম্বর"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  {/* Remove button (except for the first two fields) */}
                  {fields.length > 2 && (
                    <Button
                      type="button"
                      className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                      onClick={() => remove(index)}
                    >
                      <Minus size={20} />
                    </Button>
                  )}
                </div>
              ))}
            </div>
          </div>
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\ProfilePic.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ProfilePic.tsx

"use client";

import female1 from "@/assets/images/female-1.svg";
import female2 from "@/assets/images/female-2.svg";
import female3 from "@/assets/images/female-3.svg";
import female4 from "@/assets/images/female-4.svg";
import female5 from "@/assets/images/female-5.svg";
import female6 from "@/assets/images/female-6.svg";
import male1 from "@/assets/images/male-1.svg";
import male2 from "@/assets/images/male-2.svg";
import male3 from "@/assets/images/male-3.svg";
import male4 from "@/assets/images/male-4.svg";
import male5 from "@/assets/images/male-5.svg";
import male6 from "@/assets/images/male-6.svg";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { BiodataFormDataProps, ProfilePicFormData } from "@/lib/types";
import { profilePicFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { CheckCircle } from "lucide-react";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ProfilePic({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ProfilePicFormData>({
    resolver: zodResolver(profilePicFormData),
    defaultValues: {
      photoId: biodataFormData?.profilePicFormData?.photoId || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        profilePicFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const images =
    biodataFormData?.primaryInfoFormData?.biodataType === "1"
      ? [male1, male2, male3, male4, male5, male6]
      : [female1, female2, female3, female4, female5, female6];

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রোফাইল পিকচার</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="photoId"
            render={({ field }) => (
              <FormItem>
                <FormLabel>
                  আপনার সাথে মানানসই বা সামঞ্জস্যপূর্ণ একটি প্রোফাইল পিকচার
                  বাছাই করুন:
                </FormLabel>
                <FormControl>
                  <div className="flex flex-wrap">
                    {images.map((image, index) => (
                      <div
                        key={index}
                        className="w-1/3 mb-4 flex items-center justify-center relative"
                      >
                        <div
                          className={`border p-12 rounded-3xl cursor-pointer transition-all relative ${
                            form.getValues().photoId === image.src
                              ? "border-[#E25A6F] ring-2 ring-[#E25A6F]"
                              : "border-gray-300"
                          } `}
                          onClick={() => {
                            field.onChange(image.src);
                          }}
                        >
                          <Image
                            src={image}
                            alt={`Profile${index + 1}`}
                            width={120}
                            height={40}
                            priority
                          />
                          {form.getValues().photoId === image.src && (
                            <CheckCircle className="absolute top-4 right-4 text-[#E25A6F]" />
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ReligiousInfo.tsx
"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { madhhabs, religiousIdeologies } from "@/lib/consts";
import { BiodataFormDataProps, ReligiousInfoFormData } from "@/lib/types";
import { religiousInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ReligiousInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ReligiousInfoFormData>({
    resolver: zodResolver(religiousInfoFormData),
    defaultValues: {
      type: biodataFormData?.religiousInfoFormData?.type || "",
      ideology: biodataFormData?.religiousInfoFormData?.ideology || "",
      madhab: biodataFormData?.religiousInfoFormData?.madhab || "",
      praysFiveTimes:
        biodataFormData?.religiousInfoFormData?.praysFiveTimes || "",
      hasQazaPrayers:
        biodataFormData?.religiousInfoFormData?.hasQazaPrayers || "",
      canReciteQuranProperly:
        biodataFormData?.religiousInfoFormData?.canReciteQuranProperly || "",
      avoidsHaramIncome:
        biodataFormData?.religiousInfoFormData?.avoidsHaramIncome || "",
      modestDressing:
        biodataFormData?.religiousInfoFormData?.modestDressing || "",
      followsMahramRules:
        biodataFormData?.religiousInfoFormData?.followsMahramRules || "",
      beliefAboutPirMurshidAndMazar:
        biodataFormData?.religiousInfoFormData?.beliefAboutPirMurshidAndMazar ||
        "",
      practicingSince:
        biodataFormData?.religiousInfoFormData?.practicingSince || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        religiousInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ধর্মীয় লাইফস্টাইল</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormControl>
                    <RadioGroup
                      className="flex"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="1" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              সেরকমভাবে মেনে চলা হয় না
                            </div>
                            <div>(জেনারেল/নন-প্রাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>
                            ১. অনিয়মিতভাবে ৫ ওয়াক্ত বা এর কম সালাত আদায় করা হয়।
                          </div>
                          <div>
                            ২. সকল ক্ষেত্রে হালাল-হারাম বাছাই করা হয় না।
                          </div>
                          <div>৩. মাহরাম-নন মাহরাম মেইনটেইন করা হয় না।</div>
                          <div>
                            ৪. হারাম উপার্জন, ব্যাংকিং সুদ, ফ্রি-মিক্সিং,
                            গান-বাজনা থেকে বিরত থাকা হয় না।
                          </div>
                          <div>
                            ৫. পরিপূর্ন ভাবে ইসলামের বিধিবিধান পালনে তেমন চেষ্টা
                            বা আগ্রহ নেই।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="2" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black">
                              পরিপূর্ণভাবে মেনে চলা হয় না কিন্তু প্রবল ইচ্ছা আছে
                              এবং চেষ্টা করছি
                            </div>
                            <div>(প্রাক্টিসিংয়ের চেষ্টায় আছি)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>
                            ২. হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত থাকছেন।
                          </div>
                          <div>
                            ৩. কিন্তু গান-বাজনা থেকে এখনো দূরে থাকা হয় না।
                          </div>
                          <div>
                            ৪. সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট বা পর্দা এখনো
                            মেনে চলতে পারছেন না।
                          </div>
                          <div>
                            ৫. এর জন্য প্রবল অনুশোচনা কাজ করে এবং পরিপূর্ন ভাবে
                            ইসলামের বিধিবিধান পালনের চেষ্টা করা হয়।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="3" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              জি পরিপূর্ণভাবে মেনে চলি এবং সর্বদা চেষ্টায় থাকি
                            </div>
                            <div>(পূর্ণ ধার্মিক/ প্র্যাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. বিশুদ্ধ ঈমান-আকিদা পোষণ করছেন।</div>
                          <div>২. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>৩. পরিপূর্ণ হালাল উপার্জন করছেন ।</div>
                          <div>
                            ৪. ফরজ, ওয়াজিব ইবাদতের পাশাপাশি সুন্নাত, নফল আমল
                            করার চেষ্টা করেন।
                          </div>
                          <div>৫. গান-বাজনা, নাটক-সিনেমা থেকে দূরে থাকছেন।</div>
                          <div>
                            ৬. পুরুষেরা সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট,
                            ইসলামিক পোশাক মেনে চলেন, নারীরা নিকাব সহ পর্দা
                            করছেন।
                          </div>
                          <div>
                            ৭. বাহিরে পর্দা মেনে চলা অর্থাৎ বেগানা নারী-পুরুষের
                            ক্ষেত্রে চক্ষু অবনত রাখছেন।
                          </div>
                          <div>
                            ৮. মাহরাম-নন মাহরাম মেইনটেইন করেন এবং ফ্রী মিক্সিং
                            এড়িয়ে চলেন।
                          </div>
                          <div>
                            ৯. সকল প্রকার হারাম ও কবীরা গুনাহ থেকে বেঁচে থাকার
                            সর্বাত্মক প্রচেষ্টায় থাকেন।
                          </div>
                          <div>
                            ১০. ইসলাম বিরোধী সকল কাজকে অপছন্দ করেন এবং জীবনটাকে
                            পরিপূর্ণভাবে কোরআন-সুন্নাহ মোতাবেক সাজাতে থাকেন।
                          </div>
                        </Label>
                      </div>
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="ideology"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় কোন মতাদর্শ মেনে চলেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {religiousIdeologies.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="madhab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কোন মাজহাব / মানহাজ অনুসরণ করেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {madhhabs.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="praysFiveTimes"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="hasQazaPrayers"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      আপনার কি নামাজ কাযা হয়?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="canReciteQuranProperly"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="avoidsHaramIncome"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <FormField
              control={form.control}
              name="modestDressing"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                        ? "টাখনুর উপরে কাপড় পরেন কিনা?"
                        : "আপনি কি নিকাব সহ পর্দা করেন?"}
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <>
              <FormField
                control={form.control}
                name="followsMahramRules"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="beliefAboutPirMurshidAndMazar"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="practicingSince"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু
                        করেছেন?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </>
          )}
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\biodataFormComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/SpousePreferenceInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import {
  familyBackgrounds,
  heights,
  maritalStatuses,
  muslimTypes,
  occupationsList,
  religiousEducationQualities,
  secondMarriageOptions,
  skinTones,
  spouseLocationOptions,
  spouseSpecialCatagories,
} from "@/lib/consts";
import {
  BiodataFormDataProps,
  SpousePreferenceInfoFormData,
} from "@/lib/types";
import { spousePreferenceInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function SpousePreferenceInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<SpousePreferenceInfoFormData>({
    resolver: zodResolver(spousePreferenceInfoFormData),
    defaultValues: {
      age: biodataFormData?.spousePreferenceInfoFormData?.age || "",
      skinTone: biodataFormData?.spousePreferenceInfoFormData?.skinTone || [],
      height: biodataFormData?.spousePreferenceInfoFormData?.height || "",
      educationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.educationalQualification || "",
      religiousEducationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.religiousEducationalQualification || [],
      address: biodataFormData?.spousePreferenceInfoFormData?.address || "",
      maritalStatus:
        biodataFormData?.spousePreferenceInfoFormData?.maritalStatus || [],
      specialCategory:
        biodataFormData?.spousePreferenceInfoFormData?.specialCategory || [],
      religiousType:
        biodataFormData?.spousePreferenceInfoFormData?.religiousType || [],
      occupation:
        biodataFormData?.spousePreferenceInfoFormData?.occupation || [],
      familyBackground:
        biodataFormData?.spousePreferenceInfoFormData?.familyBackground || [],
      secondMarrige:
        biodataFormData?.spousePreferenceInfoFormData?.secondMarrige || "",
      location: biodataFormData?.spousePreferenceInfoFormData?.location || "",
      qualities: biodataFormData?.spousePreferenceInfoFormData?.qualities || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        spousePreferenceInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const spouseSpecialCatagoryOptions = spouseSpecialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">
        যেমন জীবনসঙ্গী আশা করেন
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="age"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত বয়স:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {skinTones.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                        <SelectValue placeholder="কাঙ্খিত উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="educationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousEducationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="address"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত ঠিকানা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {maritalStatuses.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialCategory"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {spouseSpecialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় লাইফস্টাইল:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {muslimTypes.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="occupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {familyBackgrounds.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          {biodataFormData?.primaryInfoFormData?.biodataType === "2" && (
            <FormField
              control={form.control}
              name="secondMarrige"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী
                      আছেন?
                    </FormLabel>
                    <FormControl>
                      <RadioGroup
                        className="w-full flex flex-wrap gap-0"
                        onValueChange={field.onChange}
                        value={field.value}
                      >
                        {secondMarriageOptions.map((x) => (
                          <div
                            key={x.id}
                            className="w-1/4 flex items-center space-x-2 mb-2"
                          >
                            <RadioGroupItem value={x.id} id={x.id} />
                            <Label htmlFor={x.id}>{x.title}</Label>
                          </div>
                        ))}
                      </RadioGroup>
                    </FormControl>
                  </div>

                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="location"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {spouseLocationOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="qualities"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:</div>
                    <div className="text-xs">
                      (অর্থাৎ কাঙ্খিত জীবনসঙ্গীর স্বভাব, দ্বীনদারিতা, চারিত্রীক
                      গুণাবলী কেমন আশা করেন। বিশেষ কোনো কার্যক্রম বা চাওয়া থাকলে
                      জানাতে পারেন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\page.tsx
// --------------------
// File: src/app/(main)/biodata-editor/page.tsx
import { Metadata } from "next";
import BiodataEditor from "./BiodataEditor";

interface BiodataEditorPageProps {
  searchParams: Promise<{ biodataId?: string }>;
}

export const metadata: Metadata = {
  title: "Design your biodata",
};

export default async function BiodataEditorPage({
  searchParams,
}: BiodataEditorPageProps) {
  const { biodataId } = await searchParams;

  //TO:DO get userId from token

  const biodataToEdit = biodataId
    ? null // get from db
    : null;

  return (
    <main className="flex-grow">
      <div className="text-[#1f4f69] flex flex-col items-center justify-center mt-4 mb-12">
        <BiodataEditor biodataToEdit={biodataToEdit} />
      </div>
    </main>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\steps.ts
// --------------------
// File: src/app/(main)/biodata-editor/steps.ts
import { BiodataFormDataProps } from "@/lib/types";
import AddressInfo from "./biodataFormComponents/AddressInfo";
import EducationInfo from "./biodataFormComponents/EducationInfo";
import FamilyInfo from "./biodataFormComponents/FamilyInfo";
import FinalWords from "./biodataFormComponents/FinalWords";
import FirstWords from "./biodataFormComponents/FirstWords";
import GeneralInfo from "./biodataFormComponents/GeneralInfo";
import MarriageInfo from "./biodataFormComponents/MarriageInfo";
import OccupationInfo from "./biodataFormComponents/OccupationInfo";
import PersonalInfo from "./biodataFormComponents/PersonalInfo";
import PrimaryInfo from "./biodataFormComponents/PrimaryInfo";
import ProfilePic from "./biodataFormComponents/ProfilePic";
import ReligiousInfo from "./biodataFormComponents/ReligiousInfo";
import SpousePreferenceInfo from "./biodataFormComponents/SpousePreferenceInfo";

export interface BiodataFormStep {
  title: string;
  component: React.ComponentType<BiodataFormDataProps>;
  key: string;
  disabled: boolean;
  prev?: string;
  next?: string;
}

export const steps: BiodataFormStep[] = [
  {
    title: "কিছু কথা",
    component: FirstWords,
    key: "first-words",
    disabled: true,
    next: "primary-info",
  },
  {
    title: "প্রাথমিক তথ্য",
    component: PrimaryInfo,
    key: "primary-info",
    disabled: true,
    prev: "first-words",
    next: "general-info",
  },
  {
    title: "সাধারণ তথ্য",
    component: GeneralInfo,
    key: "general-info",
    disabled: true,
    prev: "primary-info",
    next: "address-info",
  },
  {
    title: "ঠিকানা",
    component: AddressInfo,
    key: "address-info",
    disabled: true,
    prev: "general-info",
    next: "education-info",
  },
  {
    title: "শিক্ষাগত যোগ্যতা",
    component: EducationInfo,
    key: "education-info",
    disabled: true,
    prev: "address-info",
    next: "occupation-info",
  },
  {
    title: "পেশা",
    component: OccupationInfo,
    key: "occupation-info",
    disabled: true,
    prev: "education-info",
    next: "family-info",
  },
  {
    title: "পারিবারিক তথ্য",
    component: FamilyInfo,
    key: "family-info",
    disabled: true,
    prev: "occupation-info",
    next: "religious-info",
  },
  {
    title: "ধর্মীয় লাইফস্টাইল",
    component: ReligiousInfo,
    key: "religious-info",
    disabled: true,
    prev: "family-info",
    next: "personal-info",
  },
  {
    title: "ব্যক্তিগত তথ্য",
    component: PersonalInfo,
    key: "personal-info",
    disabled: true,
    prev: "religious-info",
    next: "marital-info",
  },
  {
    title: "বিয়ে সংক্রান্ত তথ্য",
    component: MarriageInfo,
    key: "marital-info",
    disabled: true,
    prev: "personal-info",
    next: "spouse-preference-info",
  },
  {
    title: "যেমন জীবনসঙ্গী আশা করেন",
    component: SpousePreferenceInfo,
    key: "spouse-preference-info",
    disabled: true,
    prev: "marital-info",
    next: "profile-pic",
  },
  {
    title: "প্রোফাইল পিকচার",
    component: ProfilePic,
    key: "profile-pic",
    disabled: true,
    prev: "spouse-preference-info",
    next: "final-words",
  },
  {
    title: "শেষ কথা",
    component: FinalWords,
    key: "final-words",
    disabled: true,
    prev: "profile-pic",
  },
];


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/AddressInfo.tsx

"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { citizenshipOptions, locations, types } from "@/lib/consts";
import { AddressInfoFormData, BiodataFormDataProps } from "@/lib/types";
import { addressInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function AddressInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<AddressInfoFormData>({
    resolver: zodResolver(addressInfoFormData),
    defaultValues: {
      addresses: biodataFormData?.addressInfoFormData?.addresses || [
        {
          type: "",
          location: "",
          state: "",
          city: "",
          detail: "",
          country: "",
          cityzenshipStatus: "",
        },
      ],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "addresses",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        addressInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ঠিকানা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`addresses.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার ধরন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="ঠিকানার ধরন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {types.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.location`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      অবস্থান ধরণ:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="অবস্থান ধরণ:" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {locations.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.state`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "স্টেট"
                      : "স্থায়ী জেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        {label}:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.city`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "শহর"
                      : "স্থায়ী উপজেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        <div>{label}:</div>
                        <div className="text-xs">(যদি থাকে)</div>
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.detail`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার বিস্তারিত:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            type="text"
                            placeholder="ঠিকানার বিস্তারিত"
                          />
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.country`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        দেশের নাম:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              id="emailMobileNumber"
                              type="text"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.cityzenshipStatus`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        সিটিজেনশিপ আছে?
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <RadioGroup
                              className="w-full flex flex-wrap gap-0 min-h-12"
                              onValueChange={field.onChange}
                              value={field.value}
                            >
                              {citizenshipOptions.map((x) => (
                                <div
                                  key={x.id}
                                  className="w-1/3 flex items-center space-x-2"
                                >
                                  <RadioGroupItem value={x.id} id={x.id} />
                                  <Label htmlFor={x.id}>{x.title}</Label>
                                </div>
                              ))}
                            </RadioGroup>
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
            </div>
          ))}

          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                location: "",
                state: "",
                city: "",
                detail: "",
                country: "",
                cityzenshipStatus: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ঠিকানা যোগ করুন</span>
          </Button>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\Breadcrumbs.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/Breadcrumbs.tsx

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
} from "@/components/ui/breadcrumb";
import { steps } from "../steps";

interface BreadcrumbsProps {
  currentStep: string;
  setCurrentStep: (step: string) => void;
}

export default function Breadcrumbs({
  currentStep,

  setCurrentStep,
}: BreadcrumbsProps) {
  return (
    <Breadcrumb className="max-w-6xl bg-[#f6f6f6] rounded-2xl p-2">
      <BreadcrumbList className="flex justify-center">
        {steps.map((step) => (
          <BreadcrumbItem
            key={step.key}
            className="text-[#004972] rounded-full"
          >
            {step.key === currentStep ? (
              <BreadcrumbPage className="bg-[#e25a6f] text-white px-3 py-2 rounded-full">
                {step.title}
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink
                asChild
                className="hover:text-[#e25a6f] px-3 py-2 cursor-pointer"
              >
                <button onClick={() => setCurrentStep(step.key)}>
                  {step.title}
                </button>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        ))}
      </BreadcrumbList>
    </Breadcrumb>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\EducationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/EducationInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { educationTypes, religiousEducationQualities } from "@/lib/consts";
import { BiodataFormDataProps, EducationInfoFormData } from "@/lib/types";
import { educationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function EducationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<EducationInfoFormData>({
    resolver: zodResolver(educationInfoFormData),
    defaultValues: {
      type: biodataFormData?.educationInfoFormData?.type || "",
      highestDegree:
        biodataFormData?.educationInfoFormData?.highestDegree || "",
      degrees:
        biodataFormData?.educationInfoFormData?.degrees?.length > 0
          ? biodataFormData?.educationInfoFormData?.degrees.map((x) => {
              return {
                name: x.name,
                passYear: x.passYear,
                group: x.group,
                institute: x.institute,
              };
            })
          : [{ name: "", passYear: "", group: "", institute: "" }],
      religiousEducation:
        biodataFormData?.educationInfoFormData?.religiousEducation || [],
      detail: biodataFormData?.educationInfoFormData?.detail || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        educationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "degrees",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">শিক্ষাগত যোগ্যতা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষার ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="শিক্ষার ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {educationTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="highestDegree"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার সর্বোচ্চ শিক্ষাগত ডিগ্রীর নাম:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="text-[#E25A6F]">
            মাধ্যমিক পর্যায় থেকে শুরু করে এখন পর্যন্ত যেসকল ডিগ্রী অর্জন করেছেন
            বা চলমান রয়েছে সেগুলো নিচে প্লাস বাটন চাপ দিয়ে ধাপে ধাপে যুক্ত করুন।
            কোনো ডিগ্রী না থাকলে খালি রাখুন।
          </div>
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`degrees.${index}.name`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ডিগ্রীর নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            placeholder="ডিগ্রীর নাম"
                          />
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.passYear`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পাশের সন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পাশের সন"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.group`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বিভাগ/বিষয়:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বিভাগ/বিষয়"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.institute`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      শিক্ষা প্রতিষ্ঠানের নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="শিক্ষা প্রতিষ্ঠানের নাম"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                name: "",
                passYear: "",
                group: "",
                institute: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ডিগ্রী যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="religiousEducation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value?.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষা সম্পর্কিত আরো কিছু জানাতে চাইলে নিচে লিখুন। অন্যথায়
                    খালি রাখুন।
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FamilyInfo.tsx

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { familyBackgrounds, familyTypes, siblingTypes } from "@/lib/consts";
import { BiodataFormDataProps, FamilyInfoFormData } from "@/lib/types";
import { familyInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function FamilyInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FamilyInfoFormData>({
    resolver: zodResolver(familyInfoFormData),
    defaultValues: {
      parentsAlive: biodataFormData?.familyInfoFormData?.parentsAlive || "",
      fatherOccupation:
        biodataFormData?.familyInfoFormData?.fatherOccupation || "",
      motherOccupation:
        biodataFormData?.familyInfoFormData?.motherOccupation || "",
      siblings: biodataFormData?.familyInfoFormData?.siblings || [],
      fatherSideDetail:
        biodataFormData?.familyInfoFormData?.fatherSideDetail || "",
      motherSideDetail:
        biodataFormData?.familyInfoFormData?.motherSideDetail || "",
      familyType: biodataFormData?.familyInfoFormData?.familyType || "",
      familyBackground:
        biodataFormData?.familyInfoFormData?.familyBackground || "",
      livingCondition:
        biodataFormData?.familyInfoFormData?.livingCondition || "",
      wealthDescription:
        biodataFormData?.familyInfoFormData?.wealthDescription || "",
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "siblings",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        familyInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পারিবারিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="parentsAlive"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পিতা-মাতা উভয়েই জীবিত আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনার পিতা-মাতা উভয়েই জীবিত আছেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`siblings.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ভাই/বোন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center gap-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                              <SelectValue placeholder="ভাই/বোন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {siblingTypes.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.occupation`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পেশা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পেশা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.maritalStatus`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বৈবাহিক অবস্থা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বৈবাহিক অবস্থা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.children`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      সন্তান সংখ্যা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="সন্তান সংখ্যা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                occupation: "",
                maritalStatus: "",
                children: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ভাই/বোন যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="fatherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    চাচা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="চাচা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মামা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মামা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের অর্থনৈতিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyBackgrounds.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="livingCondition"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া
                    বাড়িতে?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="wealthDescription"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\FinalWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FinalWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Label } from "@/components/ui/label";
import { BiodataFormDataProps, FinalWordsFormData } from "@/lib/types";
import { finalWordsFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function FinalWords({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FinalWordsFormData>({
    resolver: zodResolver(finalWordsFormData),
    defaultValues: {
      postApprovalOathTruthfulInfo:
        biodataFormData?.finalWordsFormData?.postApprovalOathTruthfulInfo ||
        false,
      postApprovalOathNoMisuse:
        biodataFormData?.finalWordsFormData?.postApprovalOathNoMisuse || false,
      postApprovalOathLegalResponsibility:
        biodataFormData?.finalWordsFormData
          ?.postApprovalOathLegalResponsibility || false,
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        finalWordsFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">শেষ কথা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-10 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl text-center">
            প্রতিশ্রুতি নামা
          </div>
          <div className="text-[#cd0000] space-y-3">
            <div className="flex items-center space-x-2">
              <Label htmlFor="preApprove1" className="text-[#6C0011] leading-5">
                আমি আল্লাহর নামে শপথ করছি যে,
              </Label>
            </div>
            <FormField
              control={form.control}
              name="postApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি বায়োডাটায় সকল তথ্য সত্য প্রদান করেছি।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathNoMisuse"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      সহজনিকাহ ম্যাট্রিমনি ওয়েবসাইটের কোনো তথ্য অসৎ কাজে ব্যবহার
                      করবো না।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="postApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      কোনো মিথ্যা তথ্য প্রদান করলে বা কোনো তথ্য অসৎ কাজে ব্যবহার
                      করে থাকলে, দুনিয়াবী যেকোনো আইনী জটিলতা এবং পরকালীন সকল
                      দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-ful">
        <Button className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]">
          Submit and Send For Approval
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\FirstWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FirstWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { FirstWordsFormData } from "@/lib/types";
import { firstWordsFormData } from "@/lib/validations";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch } from "@/redux/hooks";
import { zodResolver } from "@hookform/resolvers/zod";
import { useState } from "react";
import { useForm } from "react-hook-form";

interface BiodataFormDataProps {
  biodataFormData: any;
  handleSave: () => void;
  currentStep: any;
  setCurrentStep: (step: string) => void;
}

export default function FirstWords({
  biodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const dispatch = useAppDispatch();
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FirstWordsFormData>({
    resolver: zodResolver(firstWordsFormData),
    defaultValues: {
      preApprovalAcceptTerms:
        biodataFormData?.firstWordsFormData?.preApprovalAcceptTerms || false,
      preApprovalOathTruthfulInfo:
        biodataFormData?.firstWordsFormData?.preApprovalOathTruthfulInfo ||
        false,
      preApprovalOathLegalResponsibility:
        biodataFormData?.firstWordsFormData
          ?.preApprovalOathLegalResponsibility || false,
    },
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      const formValues = form.getValues();
      // Only update if we have valid values
      if (Object.values(formValues).some((value) => value !== undefined)) {
        dispatch(
          setBiodataFormData({
            key: "firstWordsFormData",
            data: formValues,
          })
        );
        handleSave();
      }
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">
        বায়োডাটা তৈরির পূর্বে কিছু গুরুত্বপূর্ণ কথা
      </div>
      <div className="max-w-4xl w-full space-y-4 text-sm text-black">
        <div>
          আপনি যখন সহজনিকাহ ম্যাট্রিমনিতে জীবনসঙ্গী খুঁজতে এসেছেন, এর মানে হলো,
          আপনি বিবাহের একটি অত্যন্ত গুরুত্বপূর্ণ অধ্যায় অতিবাহিত করছেন। চাকরির
          জন্য যেমন সুন্দর করে গুছিয়ে একটি সিভি তৈরি করা হয়, ঠিক তেমনি
          জীবনসঙ্গী নির্বাচনের ক্ষেত্রে আরও বেশি সুন্দর করে এবং গুরুত্ব দিয়ে
          বায়োডাটা তৈরি করা উচিত। কেননা যিনি আপনার কাছে জীবনসঙ্গী হয়ে আসবেন,
          তিনি যেন এই বায়োডাটার মাধ্যমে আপনাকে সঠিকভাবে জানাতে এবং বুঝতে পারেন।
        </div>
        <div>
          তাই সময় নিয়ে, মনোযোগ দিয়ে আপনার বায়োডাটা গুছিয়ে তৈরি করুন। প্রতিটি
          প্রশ্নের উত্তর সত্য এবং সঠিকভাবে দিন এবং নিশ্চিত করুন যে, তথ্যগুলো
          আপনাকে অপরপক্ষের কাছে সঠিকভাবে উপস্থাপন করছে। সম্পূর্ণ বায়োডাটা
          তৈরিতে বেশ কিছুটা সময় লাগবে, কারণ এখানে অনেকগুলো প্রশ্ন আছে। কাজেই
          ধৈর্য্য সহকারে, বেশ কিছুটা সময় নিয়ে বায়োডাটা ফর্ম পূরণ করুন।
          (আনুমানিক ৩০ মিনিট)
        </div>
        <div>
          বি: দ্র:{" "}
          <span className="text-[#005A8B]">
            আপনার এই বায়োডাটা কেউ পছন্দ করলে এবং আপনার সাথে যোগাযোগ করতে চাইলে
            শুধুমাত্র আপনার অভিভাবকের যোগাযোগের মোবাইল নম্বর প্রদান করা হবে।
            একইভাবে আপনিও কোনো বায়োডাটার যোগাযোগ তথ্য নিতে চাইলে শুধুমাত্র
            অভিভাবকের যোগাযোগ নম্বর নিতে পারবেন।
          </span>
        </div>
      </div>
      <div className="max-w-4xl w-full bg-[#f6f6f6] py-6 px-12 space-y-4 text-black rounded-4xl">
        <div className="text-[#005A8B] text-xl">
          বায়োডাটা অ্যাপ্রুভ হওয়ার শর্তসমূহ:
        </div>
        <div className="text-sm">
          <ol className="list-decimal space-y-1">
            <li>
              অবশ্যই মুসলিম হতে হবে। সহজনিকাহ শুধুমাত্র প্রাক্টিসিং,
              নন-প্রাক্টিসিং সহ সকল ধরণের মুসলিমদের নিয়ে কাজ করে থাকে।
            </li>
            <li>
              ছেলেদের বয়স কমপক্ষে ২১ বছর এবং মেয়েদের ক্ষেত্রে ১৮ বছর হতে হবে।
            </li>
            <li>
              অভিভাবকের যোগাযোগ তথ্যের ঘরে পাত্র/পাত্রীর নিজের বা বন্ধুর মোবাইল
              নম্বর প্রদান করা যাবে না।
            </li>
            <li>
              বাংলা, ইংলিশ মিশ্রিত বাংলিশ ভাষায় লেখা যাবে না। পুরোটাই বাংলায়
              অথবা পুরোটাই ইংরেজিতে লিখতে হবে।
            </li>
            <li>
              নিজের শিক্ষা, পেশা এবং পারিবারিক তথ্যে বিস্তারিত উত্তর লিখতে হবে।
            </li>
            <li>
              তথ্য ভেরিফিকেশনের সময় বায়োডাটায় দেওয়া তথ্যের সাথে মিল থাকতে হবে।
            </li>
          </ol>
        </div>
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-6 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl">প্রতিশ্রুতি নামা:</div>
          <div className="text-[#cd0000] space-y-2">
            <FormField
              control={form.control}
              name="preApprovalAcceptTerms"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি শর্তসমূহ পড়েছি এবং তা মেনে চলার প্রতিশ্রুতি দিচ্ছি।
                    </FormLabel>

                    {/* <FormDescription>
                      Describe what this resume is for.
                    </FormDescription> */}
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আল্লাহর নামে শপথ করছি যে, বায়োডাটায় সকল তথ্য সত্য
                      প্রদান করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আরও শপথ করছি যে, কোনো মিথ্যা তথ্য প্রদান করলে দুনিয়াবী
                      যেকোনো আইনী জটিলতা এবং পরকালীন সকল দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/GeneralInfo.tsx

"use client";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  bloodGroups,
  heights,
  maritalStatuses,
  nationalities,
  skinTones,
} from "@/lib/consts";
import { BiodataFormDataProps, GeneralInfoFormData } from "@/lib/types";
import { cn } from "@/lib/utils";
import { generalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { format } from "date-fns";
import { CalendarIcon } from "lucide-react";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function GeneralInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<GeneralInfoFormData>({
    resolver: zodResolver(generalInfoFormData),
    defaultValues: {
      dateOfBirth: biodataFormData?.generalInfoFormData?.dateOfBirth || "",
      maritalStatus: biodataFormData?.generalInfoFormData?.maritalStatus || "",
      skinTone: biodataFormData?.generalInfoFormData?.skinTone || "",
      height: biodataFormData?.generalInfoFormData?.height || "",
      weight: biodataFormData?.generalInfoFormData?.weight || "",
      bloodGroup: biodataFormData?.generalInfoFormData?.bloodGroup || "",
      nationality: biodataFormData?.generalInfoFormData?.nationality || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        generalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const maritalStatusOptions = maritalStatuses.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">সাধারণ তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="dateOfBirth"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জন্ম তারিখ:</div>
                    <div className="text-xs">(আসল, সার্টিফিকেট অনুযায়ী নয়)</div>
                  </FormLabel>
                  <FormControl>
                    <Popover>
                      <PopoverTrigger asChild>
                        <Button
                          className={cn(
                            "p-6 w-full bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]",
                            !field.value && "text-muted-foreground"
                          )}
                        >
                          <CalendarIcon className="mr-2 h-4 w-4" />
                          {field.value ? (
                            format(field.value, "PPP")
                          ) : (
                            <span>জন্ম তারিখ</span>
                          )}
                        </Button>
                      </PopoverTrigger>
                      <PopoverContent className="w-auto p-0">
                        <Calendar
                          className="bg-[#005889]"
                          classNames={{
                            day_selected: "bg-[#E25A6F]",
                            day_today: "bg-white text-black",
                          }}
                          mode="single"
                          selected={
                            field.value ? new Date(field.value) : undefined
                          }
                          onSelect={(date) =>
                            field.onChange(date?.toISOString())
                          }
                          initialFocus
                        />
                      </PopoverContent>
                    </Popover>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বৈবাহিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {maritalStatusOptions.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="গাত্রবর্ণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {skinTones.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="weight"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ওজন:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ওজন"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="bloodGroup"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    রক্তের গ্রুপ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="রক্তের গ্রুপ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {bloodGroups.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="nationality"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জাতীয়তা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="জাতীয়তা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {nationalities.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/MarriageInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { afterMarriageJobs, afterMarriageStuties } from "@/lib/consts";
import { BiodataFormDataProps, MarriageInfoFormData } from "@/lib/types";
import { marriageInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function MarriageInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<MarriageInfoFormData>({
    resolver: zodResolver(marriageInfoFormData),
    defaultValues: {
      guardianApproval:
        biodataFormData?.marriageInfoFormData?.guardianApproval || "",
      continueStudy: biodataFormData?.marriageInfoFormData?.continueStudy || "",
      careerPlan: biodataFormData?.marriageInfoFormData?.careerPlan || "",
      residence: biodataFormData?.marriageInfoFormData?.residence || "",
      arrangeHijab: biodataFormData?.marriageInfoFormData?.arrangeHijab || "",
      dowryExpectation:
        biodataFormData?.marriageInfoFormData?.dowryExpectation || "",
      allowShowingPhotoOnline:
        biodataFormData?.marriageInfoFormData?.allowShowingPhotoOnline || "",
      additionalMarriageInfo:
        biodataFormData?.marriageInfoFormData?.additionalMarriageInfo || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        marriageInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const afterMarriageStutyOptions = afterMarriageStuties.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  const afterMarriageJobOptions = afterMarriageJobs.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">বিয়ে সংক্রান্ত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="guardianApproval"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
                    <div className="text-xs">
                      (যদি অভিভাবক রাজি নাও থাকে তাহলে এর কারণ লিখুন এবং
                      সেক্ষেত্রে আপনি কেন বিবাহে আগাচ্ছেন সেটা বিস্তারিত লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="continueStudy"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?"
                      : "বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageStutyOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="careerPlan"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?"
                      : "আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageJobOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="residence"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?"
                      : "যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="arrangeHijab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে পারবেন?"
                      : "বাড়িতে বা বাহিরে পর্দা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="dowryExpectation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক / উপহার / অর্থ আশা করবেন কিনা?"
                      : "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রপক্ষকে যৌতুক / উপহার / অর্থ দিতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="allowShowingPhotoOnline"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "পাত্রীপক্ষ"
                      : "পাত্রপক্ষ"}{" "}
                    অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="additionalMarriageInfo"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>
                      বিয়ে সংক্রান্ত আরো কিছু জানাতে চাইলে এখানে লিখুন: অন্যথায়
                      খালি রাখুন।
                    </div>
                    <div className="text-xs">
                      (যেমন: পাত্র-পাত্রী সাক্ষাতের ব্যাপারে, অভিভাবকদের মতামত
                      নিয়ে, কেমন বিয়ে চান, বিয়ের পর কোন কোন বিষয় ছাড় দিতে রাজি
                      নন ইত্যাদি কিছু জানানোর থাকলে লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\OccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/OccupationInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { occupationsList } from "@/lib/consts";
import { BiodataFormDataProps, OccupationInfoFormData } from "@/lib/types";
import { occupationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function OccupationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<OccupationInfoFormData>({
    resolver: zodResolver(occupationInfoFormData),
    defaultValues: {
      occupations: biodataFormData?.occupationInfoFormData?.occupations || [],
      detail: biodataFormData?.occupationInfoFormData?.detail || "",
      monthlyIncome:
        biodataFormData?.occupationInfoFormData?.monthlyIncome || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        occupationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পেশা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="occupations"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পেশা নিয়ে বিস্তারিত লিখুন:</div>
                    <div className="text-xs">
                      (অর্থাৎ আপনার কর্মস্থল কোথায়, কি ধরণের কাজে দায়িত্বরত আছেন
                      বা পদবি কি, এগুলো নিয়ে বিস্তারিত লিখুন। পেশা না থাকলে খালি
                      রাখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="monthlyIncome"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাসিক আয়:</div>
                    <div className="text-xs">(পেশা না থাকলে খালি রাখুন।)</div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাসিক আয়"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PersonalInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { characteristics, specialCatagories } from "@/lib/consts";
import { BiodataFormDataProps, PersonalInfoFormData } from "@/lib/types";
import { personalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function PersonalInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PersonalInfoFormData>({
    resolver: zodResolver(personalInfoFormData),
    defaultValues: {
      beardStatus: biodataFormData?.personalInfoFormData?.beardStatus || "",
      preferredOutfit:
        biodataFormData?.personalInfoFormData?.preferredOutfit || "",
      entertainmentPreferences:
        biodataFormData?.personalInfoFormData?.entertainmentPreferences || "",
      healthConditions:
        biodataFormData?.personalInfoFormData?.healthConditions || "",
      personalTraits:
        biodataFormData?.personalInfoFormData?.personalTraits || [],
      genderEqualityView:
        biodataFormData?.personalInfoFormData?.genderEqualityView || "",
      lgbtqOpinion: biodataFormData?.personalInfoFormData?.lgbtqOpinion || "",
      specialConditions:
        biodataFormData?.personalInfoFormData?.specialConditions || [],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        personalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const specialCatagoryOptions = specialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ব্যক্তিগত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="beardStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "আপনি দাড়ি রেখেছেন কি?"
                      : "আপনার কি দাড়ি পছন্দ?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="preferredOutfit"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পড়তে পছন্দ করেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="entertainmentPreferences"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="healthConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মানসিক বা শারীরিক কোনো রোগ আছে কি? থাকলে বিস্তারিত লিখুন।
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="personalTraits"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নিজের কিছু গুণাবলী চিহ্নিত করুন:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {characteristics.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="genderEqualityView"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="lgbtqOpinion"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {specialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PrimaryInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { biodataTypes } from "@/lib/consts";
import { BiodataFormDataProps, PrimaryInfoFormData } from "@/lib/types";
import { primaryInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function PrimaryInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PrimaryInfoFormData>({
    resolver: zodResolver(primaryInfoFormData),
    defaultValues: {
      biodataType: biodataFormData?.primaryInfoFormData?.biodataType || "",
      biodataFor: biodataFormData?.primaryInfoFormData?.biodataFor || "",
      fullName: biodataFormData?.primaryInfoFormData?.fullName || "",
      fatherName: biodataFormData?.primaryInfoFormData?.fatherName || "",
      motherName: biodataFormData?.primaryInfoFormData?.motherName || "",
      email: biodataFormData?.primaryInfoFormData?.email || "",
      phoneNumber: biodataFormData?.primaryInfoFormData?.phoneNumber || "",
      guardianContacts:
        biodataFormData?.primaryInfoFormData?.guardianContacts?.length > 0
          ? biodataFormData?.primaryInfoFormData?.guardianContacts.map((x) => {
              return {
                relation: x.relation,
                fullName: x.fullName,
                phoneNumber: x.phoneNumber,
              };
            })
          : [
              { relation: "", fullName: "", phoneNumber: "" },
              { relation: "", fullName: "", phoneNumber: "" },
            ],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        primaryInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "guardianContacts",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রাথমিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="biodataType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বায়োডাটার ধরন:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বায়োডাটার ধরন" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {biodataTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="biodataFor"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>বায়োডাটা কার জন্য তৈরী করছেন?</div>
                    <div className="text-xs">
                      (যেমনঃ নিজের জন্য/বোনের জন্য/বন্ধুর জন্য/ভাগ্নির জন্য
                      ইত্যাদি)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fullName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
                    <div className="text-xs">
                      (NID কার্ডে যে নাম আছে। নাম বায়োডাটায় প্রকাশ করা হবে না।
                      শুধুমাত্র ভেরিফিকেশন ও অপরপক্ষকে যোগাযোগ তথ্য প্রদানের
                      ক্ষেত্রে প্রয়োজন হবে।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="সম্পূর্ণ নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="email"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>ইমেইল আইডি:</div>
                    <div className="text-xs">
                      (পাত্র/পাত্রীর সাথে আমাদের যোগাযোগের জন্য প্রয়োজন হবে।
                      অপরপক্ষ যোগাযোগ তথ্য নিতে চাইলে যুক্তিসঙ্গত কারণ বা
                      প্রয়োজন ছাড়া পাঠানো হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ইমেইল আইডি"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="phoneNumber"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর মোবাইল নম্বর:</div>
                    <div className="text-xs">
                      (মোবাইল নম্বর শুধুমাত্র ভেরিফিকেশনের জন্য আমাদের কাছে
                      থাকবে। কাউকে প্রদান করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মোবাইল নম্বর"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="flex flex-col space-y-2">
            <FormLabel className="flex items-center justify-between space-x-8">
              <div className="text-md space-y-1 leading-4.5">
                <div>পাত্র/পাত্রীর অভিভাবকের মোবাইল নম্বর:</div>
                <div className="text-xs">
                  <div>কমপক্ষে ২ টি সচল নম্বর প্রদান করতে হবে।</div>
                </div>
              </div>
              <Button
                type="button"
                className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
                onClick={() => append({ fullName: "", phoneNumber: "" })}
              >
                <Plus size={20} /> <span>নতুন নম্বর যোগ করুন</span>
              </Button>
            </FormLabel>

            <div className="space-y-2">
              {fields.map((field, index) => (
                <div className="flex space-x-2 items-center" key={field.id}>
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.relation`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="সম্পর্ক"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.fullName`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের নাম"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.phoneNumber`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের মোবাইল নম্বর"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  {/* Remove button (except for the first two fields) */}
                  {fields.length > 2 && (
                    <Button
                      type="button"
                      className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                      onClick={() => remove(index)}
                    >
                      <Minus size={20} />
                    </Button>
                  )}
                </div>
              ))}
            </div>
          </div>
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\ProfilePic.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ProfilePic.tsx

"use client";

import female1 from "@/assets/images/female-1.svg";
import female2 from "@/assets/images/female-2.svg";
import female3 from "@/assets/images/female-3.svg";
import female4 from "@/assets/images/female-4.svg";
import female5 from "@/assets/images/female-5.svg";
import female6 from "@/assets/images/female-6.svg";
import male1 from "@/assets/images/male-1.svg";
import male2 from "@/assets/images/male-2.svg";
import male3 from "@/assets/images/male-3.svg";
import male4 from "@/assets/images/male-4.svg";
import male5 from "@/assets/images/male-5.svg";
import male6 from "@/assets/images/male-6.svg";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { BiodataFormDataProps, ProfilePicFormData } from "@/lib/types";
import { profilePicFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { CheckCircle } from "lucide-react";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ProfilePic({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ProfilePicFormData>({
    resolver: zodResolver(profilePicFormData),
    defaultValues: {
      photoId: biodataFormData?.profilePicFormData?.photoId || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        profilePicFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const images =
    biodataFormData?.primaryInfoFormData?.biodataType === "1"
      ? [male1, male2, male3, male4, male5, male6]
      : [female1, female2, female3, female4, female5, female6];

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রোফাইল পিকচার</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="photoId"
            render={({ field }) => (
              <FormItem>
                <FormLabel>
                  আপনার সাথে মানানসই বা সামঞ্জস্যপূর্ণ একটি প্রোফাইল পিকচার
                  বাছাই করুন:
                </FormLabel>
                <FormControl>
                  <div className="flex flex-wrap">
                    {images.map((image, index) => (
                      <div
                        key={index}
                        className="w-1/3 mb-4 flex items-center justify-center relative"
                      >
                        <div
                          className={`border p-12 rounded-3xl cursor-pointer transition-all relative ${
                            form.getValues().photoId === image.src
                              ? "border-[#E25A6F] ring-2 ring-[#E25A6F]"
                              : "border-gray-300"
                          } `}
                          onClick={() => {
                            field.onChange(image.src);
                          }}
                        >
                          <Image
                            src={image}
                            alt={`Profile${index + 1}`}
                            width={120}
                            height={40}
                            priority
                          />
                          {form.getValues().photoId === image.src && (
                            <CheckCircle className="absolute top-4 right-4 text-[#E25A6F]" />
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ReligiousInfo.tsx
"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { madhhabs, religiousIdeologies } from "@/lib/consts";
import { BiodataFormDataProps, ReligiousInfoFormData } from "@/lib/types";
import { religiousInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ReligiousInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ReligiousInfoFormData>({
    resolver: zodResolver(religiousInfoFormData),
    defaultValues: {
      type: biodataFormData?.religiousInfoFormData?.type || "",
      ideology: biodataFormData?.religiousInfoFormData?.ideology || "",
      madhab: biodataFormData?.religiousInfoFormData?.madhab || "",
      praysFiveTimes:
        biodataFormData?.religiousInfoFormData?.praysFiveTimes || "",
      hasQazaPrayers:
        biodataFormData?.religiousInfoFormData?.hasQazaPrayers || "",
      canReciteQuranProperly:
        biodataFormData?.religiousInfoFormData?.canReciteQuranProperly || "",
      avoidsHaramIncome:
        biodataFormData?.religiousInfoFormData?.avoidsHaramIncome || "",
      modestDressing:
        biodataFormData?.religiousInfoFormData?.modestDressing || "",
      followsMahramRules:
        biodataFormData?.religiousInfoFormData?.followsMahramRules || "",
      beliefAboutPirMurshidAndMazar:
        biodataFormData?.religiousInfoFormData?.beliefAboutPirMurshidAndMazar ||
        "",
      practicingSince:
        biodataFormData?.religiousInfoFormData?.practicingSince || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        religiousInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ধর্মীয় লাইফস্টাইল</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormControl>
                    <RadioGroup
                      className="flex"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="1" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              সেরকমভাবে মেনে চলা হয় না
                            </div>
                            <div>(জেনারেল/নন-প্রাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>
                            ১. অনিয়মিতভাবে ৫ ওয়াক্ত বা এর কম সালাত আদায় করা হয়।
                          </div>
                          <div>
                            ২. সকল ক্ষেত্রে হালাল-হারাম বাছাই করা হয় না।
                          </div>
                          <div>৩. মাহরাম-নন মাহরাম মেইনটেইন করা হয় না।</div>
                          <div>
                            ৪. হারাম উপার্জন, ব্যাংকিং সুদ, ফ্রি-মিক্সিং,
                            গান-বাজনা থেকে বিরত থাকা হয় না।
                          </div>
                          <div>
                            ৫. পরিপূর্ন ভাবে ইসলামের বিধিবিধান পালনে তেমন চেষ্টা
                            বা আগ্রহ নেই।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="2" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black">
                              পরিপূর্ণভাবে মেনে চলা হয় না কিন্তু প্রবল ইচ্ছা আছে
                              এবং চেষ্টা করছি
                            </div>
                            <div>(প্রাক্টিসিংয়ের চেষ্টায় আছি)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>
                            ২. হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত থাকছেন।
                          </div>
                          <div>
                            ৩. কিন্তু গান-বাজনা থেকে এখনো দূরে থাকা হয় না।
                          </div>
                          <div>
                            ৪. সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট বা পর্দা এখনো
                            মেনে চলতে পারছেন না।
                          </div>
                          <div>
                            ৫. এর জন্য প্রবল অনুশোচনা কাজ করে এবং পরিপূর্ন ভাবে
                            ইসলামের বিধিবিধান পালনের চেষ্টা করা হয়।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="3" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              জি পরিপূর্ণভাবে মেনে চলি এবং সর্বদা চেষ্টায় থাকি
                            </div>
                            <div>(পূর্ণ ধার্মিক/ প্র্যাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. বিশুদ্ধ ঈমান-আকিদা পোষণ করছেন।</div>
                          <div>২. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>৩. পরিপূর্ণ হালাল উপার্জন করছেন ।</div>
                          <div>
                            ৪. ফরজ, ওয়াজিব ইবাদতের পাশাপাশি সুন্নাত, নফল আমল
                            করার চেষ্টা করেন।
                          </div>
                          <div>৫. গান-বাজনা, নাটক-সিনেমা থেকে দূরে থাকছেন।</div>
                          <div>
                            ৬. পুরুষেরা সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট,
                            ইসলামিক পোশাক মেনে চলেন, নারীরা নিকাব সহ পর্দা
                            করছেন।
                          </div>
                          <div>
                            ৭. বাহিরে পর্দা মেনে চলা অর্থাৎ বেগানা নারী-পুরুষের
                            ক্ষেত্রে চক্ষু অবনত রাখছেন।
                          </div>
                          <div>
                            ৮. মাহরাম-নন মাহরাম মেইনটেইন করেন এবং ফ্রী মিক্সিং
                            এড়িয়ে চলেন।
                          </div>
                          <div>
                            ৯. সকল প্রকার হারাম ও কবীরা গুনাহ থেকে বেঁচে থাকার
                            সর্বাত্মক প্রচেষ্টায় থাকেন।
                          </div>
                          <div>
                            ১০. ইসলাম বিরোধী সকল কাজকে অপছন্দ করেন এবং জীবনটাকে
                            পরিপূর্ণভাবে কোরআন-সুন্নাহ মোতাবেক সাজাতে থাকেন।
                          </div>
                        </Label>
                      </div>
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="ideology"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় কোন মতাদর্শ মেনে চলেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {religiousIdeologies.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="madhab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কোন মাজহাব / মানহাজ অনুসরণ করেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {madhhabs.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="praysFiveTimes"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="hasQazaPrayers"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      আপনার কি নামাজ কাযা হয়?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="canReciteQuranProperly"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="avoidsHaramIncome"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <FormField
              control={form.control}
              name="modestDressing"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                        ? "টাখনুর উপরে কাপড় পরেন কিনা?"
                        : "আপনি কি নিকাব সহ পর্দা করেন?"}
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <>
              <FormField
                control={form.control}
                name="followsMahramRules"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="beliefAboutPirMurshidAndMazar"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="practicingSince"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু
                        করেছেন?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </>
          )}
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/SpousePreferenceInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import {
  familyBackgrounds,
  heights,
  maritalStatuses,
  muslimTypes,
  occupationsList,
  religiousEducationQualities,
  secondMarriageOptions,
  skinTones,
  spouseLocationOptions,
  spouseSpecialCatagories,
} from "@/lib/consts";
import {
  BiodataFormDataProps,
  SpousePreferenceInfoFormData,
} from "@/lib/types";
import { spousePreferenceInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function SpousePreferenceInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<SpousePreferenceInfoFormData>({
    resolver: zodResolver(spousePreferenceInfoFormData),
    defaultValues: {
      age: biodataFormData?.spousePreferenceInfoFormData?.age || "",
      skinTone: biodataFormData?.spousePreferenceInfoFormData?.skinTone || [],
      height: biodataFormData?.spousePreferenceInfoFormData?.height || "",
      educationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.educationalQualification || "",
      religiousEducationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.religiousEducationalQualification || [],
      address: biodataFormData?.spousePreferenceInfoFormData?.address || "",
      maritalStatus:
        biodataFormData?.spousePreferenceInfoFormData?.maritalStatus || [],
      specialCategory:
        biodataFormData?.spousePreferenceInfoFormData?.specialCategory || [],
      religiousType:
        biodataFormData?.spousePreferenceInfoFormData?.religiousType || [],
      occupation:
        biodataFormData?.spousePreferenceInfoFormData?.occupation || [],
      familyBackground:
        biodataFormData?.spousePreferenceInfoFormData?.familyBackground || [],
      secondMarrige:
        biodataFormData?.spousePreferenceInfoFormData?.secondMarrige || "",
      location: biodataFormData?.spousePreferenceInfoFormData?.location || "",
      qualities: biodataFormData?.spousePreferenceInfoFormData?.qualities || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        spousePreferenceInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const spouseSpecialCatagoryOptions = spouseSpecialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">
        যেমন জীবনসঙ্গী আশা করেন
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="age"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত বয়স:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {skinTones.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                        <SelectValue placeholder="কাঙ্খিত উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="educationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousEducationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="address"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত ঠিকানা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {maritalStatuses.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialCategory"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {spouseSpecialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় লাইফস্টাইল:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {muslimTypes.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="occupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {familyBackgrounds.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          {biodataFormData?.primaryInfoFormData?.biodataType === "2" && (
            <FormField
              control={form.control}
              name="secondMarrige"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী
                      আছেন?
                    </FormLabel>
                    <FormControl>
                      <RadioGroup
                        className="w-full flex flex-wrap gap-0"
                        onValueChange={field.onChange}
                        value={field.value}
                      >
                        {secondMarriageOptions.map((x) => (
                          <div
                            key={x.id}
                            className="w-1/4 flex items-center space-x-2 mb-2"
                          >
                            <RadioGroupItem value={x.id} id={x.id} />
                            <Label htmlFor={x.id}>{x.title}</Label>
                          </div>
                        ))}
                      </RadioGroup>
                    </FormControl>
                  </div>

                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="location"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {spouseLocationOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="qualities"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:</div>
                    <div className="text-xs">
                      (অর্থাৎ কাঙ্খিত জীবনসঙ্গীর স্বভাব, দ্বীনদারিতা, চারিত্রীক
                      গুণাবলী কেমন আশা করেন। বিশেষ কোনো কার্যক্রম বা চাওয়া থাকলে
                      জানাতে পারেন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/AddressInfo.tsx

"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { citizenshipOptions, locations, types } from "@/lib/consts";
import { AddressInfoFormData, BiodataFormDataProps } from "@/lib/types";
import { addressInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function AddressInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<AddressInfoFormData>({
    resolver: zodResolver(addressInfoFormData),
    defaultValues: {
      addresses: biodataFormData?.addressInfoFormData?.addresses || [
        {
          type: "",
          location: "",
          state: "",
          city: "",
          detail: "",
          country: "",
          cityzenshipStatus: "",
        },
      ],
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "addresses",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        addressInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ঠিকানা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`addresses.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার ধরন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="ঠিকানার ধরন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {types.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.location`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      অবস্থান ধরণ:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                              <SelectValue placeholder="অবস্থান ধরণ:" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {locations.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.state`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "স্টেট"
                      : "স্থায়ী জেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        {label}:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.city`}
                render={({ field }) => {
                  const label =
                    form.getValues(`addresses.${index}.location`) === "2"
                      ? "শহর"
                      : "স্থায়ী উপজেলা";
                  return (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        <div>{label}:</div>
                        <div className="text-xs">(যদি থাকে)</div>
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              type="text"
                              placeholder={label}
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  );
                }}
              />

              <FormField
                control={form.control}
                name={`addresses.${index}.detail`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ঠিকানার বিস্তারিত:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            type="text"
                            placeholder="ঠিকানার বিস্তারিত"
                          />
                        </FormControl>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.country`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        দেশের নাম:
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              id="emailMobileNumber"
                              type="text"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
              {form.getValues(`addresses.${index}.location`) === "2" && (
                <FormField
                  control={form.control}
                  name={`addresses.${index}.cityzenshipStatus`}
                  render={({ field }) => (
                    <FormItem className="w-full">
                      <FormLabel className="text-md space-y-2 leading-4.5">
                        সিটিজেনশিপ আছে?
                      </FormLabel>
                      <div className="flex flex-col space-y-2">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <RadioGroup
                              className="w-full flex flex-wrap gap-0 min-h-12"
                              onValueChange={field.onChange}
                              value={field.value}
                            >
                              {citizenshipOptions.map((x) => (
                                <div
                                  key={x.id}
                                  className="w-1/3 flex items-center space-x-2"
                                >
                                  <RadioGroupItem value={x.id} id={x.id} />
                                  <Label htmlFor={x.id}>{x.title}</Label>
                                </div>
                              ))}
                            </RadioGroup>
                          </FormControl>
                        </div>
                        <FormMessage />
                      </div>
                    </FormItem>
                  )}
                />
              )}
            </div>
          ))}

          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                location: "",
                state: "",
                city: "",
                detail: "",
                country: "",
                cityzenshipStatus: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ঠিকানা যোগ করুন</span>
          </Button>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\Breadcrumbs.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/Breadcrumbs.tsx

import {
  Breadcrumb,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbList,
  BreadcrumbPage,
} from "@/components/ui/breadcrumb";
import { steps } from "../steps";

interface BreadcrumbsProps {
  currentStep: string;
  setCurrentStep: (step: string) => void;
}

export default function Breadcrumbs({
  currentStep,

  setCurrentStep,
}: BreadcrumbsProps) {
  return (
    <Breadcrumb className="max-w-6xl bg-[#f6f6f6] rounded-2xl p-2">
      <BreadcrumbList className="flex justify-center">
        {steps.map((step) => (
          <BreadcrumbItem
            key={step.key}
            className="text-[#004972] rounded-full"
          >
            {step.key === currentStep ? (
              <BreadcrumbPage className="bg-[#e25a6f] text-white px-3 py-2 rounded-full">
                {step.title}
              </BreadcrumbPage>
            ) : (
              <BreadcrumbLink
                asChild
                className="hover:text-[#e25a6f] px-3 py-2 cursor-pointer"
              >
                <button onClick={() => setCurrentStep(step.key)}>
                  {step.title}
                </button>
              </BreadcrumbLink>
            )}
          </BreadcrumbItem>
        ))}
      </BreadcrumbList>
    </Breadcrumb>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\EducationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/EducationInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { educationTypes, religiousEducationQualities } from "@/lib/consts";
import { BiodataFormDataProps, EducationInfoFormData } from "@/lib/types";
import { educationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function EducationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<EducationInfoFormData>({
    resolver: zodResolver(educationInfoFormData),
    defaultValues: {
      type: biodataFormData?.educationInfoFormData?.type || "",
      highestDegree:
        biodataFormData?.educationInfoFormData?.highestDegree || "",
      degrees:
        biodataFormData?.educationInfoFormData?.degrees?.length > 0
          ? biodataFormData?.educationInfoFormData?.degrees.map((x) => {
              return {
                name: x.name,
                passYear: x.passYear,
                group: x.group,
                institute: x.institute,
              };
            })
          : [{ name: "", passYear: "", group: "", institute: "" }],
      religiousEducation:
        biodataFormData?.educationInfoFormData?.religiousEducation || [],
      detail: biodataFormData?.educationInfoFormData?.detail || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        educationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "degrees",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">শিক্ষাগত যোগ্যতা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষার ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="শিক্ষার ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {educationTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="highestDegree"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার সর্বোচ্চ শিক্ষাগত ডিগ্রীর নাম:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="text-[#E25A6F]">
            মাধ্যমিক পর্যায় থেকে শুরু করে এখন পর্যন্ত যেসকল ডিগ্রী অর্জন করেছেন
            বা চলমান রয়েছে সেগুলো নিচে প্লাস বাটন চাপ দিয়ে ধাপে ধাপে যুক্ত করুন।
            কোনো ডিগ্রী না থাকলে খালি রাখুন।
          </div>
          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`degrees.${index}.name`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ডিগ্রীর নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center space-x-2">
                        <FormControl>
                          <Input
                            {...field}
                            className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                            placeholder="ডিগ্রীর নাম"
                          />
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.passYear`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পাশের সন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পাশের সন"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.group`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বিভাগ/বিষয়:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বিভাগ/বিষয়"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`degrees.${index}.institute`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      শিক্ষা প্রতিষ্ঠানের নাম:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="শিক্ষা প্রতিষ্ঠানের নাম"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                name: "",
                passYear: "",
                group: "",
                institute: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ডিগ্রী যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="religiousEducation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value?.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষা সম্পর্কিত আরো কিছু জানাতে চাইলে নিচে লিখুন। অন্যথায়
                    খালি রাখুন।
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FamilyInfo.tsx

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import { familyBackgrounds, familyTypes, siblingTypes } from "@/lib/consts";
import { BiodataFormDataProps, FamilyInfoFormData } from "@/lib/types";
import { familyInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function FamilyInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FamilyInfoFormData>({
    resolver: zodResolver(familyInfoFormData),
    defaultValues: {
      parentsAlive: biodataFormData?.familyInfoFormData?.parentsAlive || "",
      fatherOccupation:
        biodataFormData?.familyInfoFormData?.fatherOccupation || "",
      motherOccupation:
        biodataFormData?.familyInfoFormData?.motherOccupation || "",
      siblings: biodataFormData?.familyInfoFormData?.siblings || [],
      fatherSideDetail:
        biodataFormData?.familyInfoFormData?.fatherSideDetail || "",
      motherSideDetail:
        biodataFormData?.familyInfoFormData?.motherSideDetail || "",
      familyType: biodataFormData?.familyInfoFormData?.familyType || "",
      familyBackground:
        biodataFormData?.familyInfoFormData?.familyBackground || "",
      livingCondition:
        biodataFormData?.familyInfoFormData?.livingCondition || "",
      wealthDescription:
        biodataFormData?.familyInfoFormData?.wealthDescription || "",
    },
  });

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "siblings",
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        familyInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পারিবারিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="parentsAlive"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পিতা-মাতা উভয়েই জীবিত আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনার পিতা-মাতা উভয়েই জীবিত আছেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherOccupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার পেশা:</div>
                    <div className="text-xs">
                      <div>
                        -চাকরিজীবী হলে পদবি সহ কি ধরণের চাকরি তা লিখবেন।
                      </div>
                      <div>-ব্যাবসায়ী হলে কি ধরণের ব্যবসা তা লিখবেন।</div>
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার পেশা"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {fields.map((field, index) => (
            <div
              className="flex flex-col space-y-4 items-center rounded-2xl p-4 border border-[#E25A6F]"
              key={field.id}
            >
              <FormField
                control={form.control}
                name={`siblings.${index}.type`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      ভাই/বোন:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <div className="flex items-center gap-2">
                        <FormControl>
                          <Select
                            value={field.value}
                            onValueChange={field.onChange}
                          >
                            <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                              <SelectValue placeholder="ভাই/বোন" />
                            </SelectTrigger>
                            <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                              {siblingTypes.map((x) => (
                                <SelectItem
                                  key={x.id}
                                  className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                                  value={x.id}
                                >
                                  {x.title}
                                </SelectItem>
                              ))}
                            </SelectContent>
                          </Select>
                        </FormControl>
                        <Button
                          type="button"
                          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                          onClick={() => remove(index)}
                        >
                          <Minus size={20} />
                        </Button>
                      </div>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.occupation`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      পেশা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="পেশা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.maritalStatus`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      বৈবাহিক অবস্থা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="বৈবাহিক অবস্থা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />

              <FormField
                control={form.control}
                name={`siblings.${index}.children`}
                render={({ field }) => (
                  <FormItem className="w-full">
                    <FormLabel className="text-md space-y-2 leading-4.5">
                      সন্তান সংখ্যা:
                    </FormLabel>
                    <div className="flex flex-col space-y-2">
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                          placeholder="সন্তান সংখ্যা"
                        />
                      </FormControl>
                      <FormMessage />
                    </div>
                  </FormItem>
                )}
              />
            </div>
          ))}
          {/* Add New Address */}
          <Button
            type="button"
            className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
            onClick={() =>
              append({
                type: "",
                occupation: "",
                maritalStatus: "",
                children: "",
              })
            }
          >
            <Plus size={20} /> <span>নতুন ভাই/বোন যোগ করুন</span>
          </Button>
          <FormField
            control={form.control}
            name="fatherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    চাচা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="চাচা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherSideDetail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মামা কতজন এবং কি করেন?
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মামা কতজন এবং কি করেন?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের ধরণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের ধরণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="পরিবারের অর্থনৈতিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {familyBackgrounds.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="livingCondition"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া
                    বাড়িতে?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="wealthDescription"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\FirstWords.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/FirstWords.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { FirstWordsFormData } from "@/lib/types";
import { firstWordsFormData } from "@/lib/validations";
import { setBiodataFormData } from "@/redux/features/biodata/biodataSlice";
import { useAppDispatch } from "@/redux/hooks";
import { zodResolver } from "@hookform/resolvers/zod";
import { useState } from "react";
import { useForm } from "react-hook-form";

interface BiodataFormDataProps {
  biodataFormData: any;
  handleSave: () => void;
  currentStep: any;
  setCurrentStep: (step: string) => void;
}

export default function FirstWords({
  biodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const dispatch = useAppDispatch();
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<FirstWordsFormData>({
    resolver: zodResolver(firstWordsFormData),
    defaultValues: {
      preApprovalAcceptTerms:
        biodataFormData?.firstWordsFormData?.preApprovalAcceptTerms || false,
      preApprovalOathTruthfulInfo:
        biodataFormData?.firstWordsFormData?.preApprovalOathTruthfulInfo ||
        false,
      preApprovalOathLegalResponsibility:
        biodataFormData?.firstWordsFormData
          ?.preApprovalOathLegalResponsibility || false,
    },
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      const formValues = form.getValues();
      // Only update if we have valid values
      if (Object.values(formValues).some((value) => value !== undefined)) {
        dispatch(
          setBiodataFormData({
            key: "firstWordsFormData",
            data: formValues,
          })
        );
        handleSave();
      }
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-[#004972]">
        বায়োডাটা তৈরির পূর্বে কিছু গুরুত্বপূর্ণ কথা
      </div>
      <div className="max-w-4xl w-full space-y-4 text-sm text-black">
        <div>
          আপনি যখন সহজনিকাহ ম্যাট্রিমনিতে জীবনসঙ্গী খুঁজতে এসেছেন, এর মানে হলো,
          আপনি বিবাহের একটি অত্যন্ত গুরুত্বপূর্ণ অধ্যায় অতিবাহিত করছেন। চাকরির
          জন্য যেমন সুন্দর করে গুছিয়ে একটি সিভি তৈরি করা হয়, ঠিক তেমনি
          জীবনসঙ্গী নির্বাচনের ক্ষেত্রে আরও বেশি সুন্দর করে এবং গুরুত্ব দিয়ে
          বায়োডাটা তৈরি করা উচিত। কেননা যিনি আপনার কাছে জীবনসঙ্গী হয়ে আসবেন,
          তিনি যেন এই বায়োডাটার মাধ্যমে আপনাকে সঠিকভাবে জানাতে এবং বুঝতে পারেন।
        </div>
        <div>
          তাই সময় নিয়ে, মনোযোগ দিয়ে আপনার বায়োডাটা গুছিয়ে তৈরি করুন। প্রতিটি
          প্রশ্নের উত্তর সত্য এবং সঠিকভাবে দিন এবং নিশ্চিত করুন যে, তথ্যগুলো
          আপনাকে অপরপক্ষের কাছে সঠিকভাবে উপস্থাপন করছে। সম্পূর্ণ বায়োডাটা
          তৈরিতে বেশ কিছুটা সময় লাগবে, কারণ এখানে অনেকগুলো প্রশ্ন আছে। কাজেই
          ধৈর্য্য সহকারে, বেশ কিছুটা সময় নিয়ে বায়োডাটা ফর্ম পূরণ করুন।
          (আনুমানিক ৩০ মিনিট)
        </div>
        <div>
          বি: দ্র:{" "}
          <span className="text-[#005A8B]">
            আপনার এই বায়োডাটা কেউ পছন্দ করলে এবং আপনার সাথে যোগাযোগ করতে চাইলে
            শুধুমাত্র আপনার অভিভাবকের যোগাযোগের মোবাইল নম্বর প্রদান করা হবে।
            একইভাবে আপনিও কোনো বায়োডাটার যোগাযোগ তথ্য নিতে চাইলে শুধুমাত্র
            অভিভাবকের যোগাযোগ নম্বর নিতে পারবেন।
          </span>
        </div>
      </div>
      <div className="max-w-4xl w-full bg-[#f6f6f6] py-6 px-12 space-y-4 text-black rounded-4xl">
        <div className="text-[#005A8B] text-xl">
          বায়োডাটা অ্যাপ্রুভ হওয়ার শর্তসমূহ:
        </div>
        <div className="text-sm">
          <ol className="list-decimal space-y-1">
            <li>
              অবশ্যই মুসলিম হতে হবে। সহজনিকাহ শুধুমাত্র প্রাক্টিসিং,
              নন-প্রাক্টিসিং সহ সকল ধরণের মুসলিমদের নিয়ে কাজ করে থাকে।
            </li>
            <li>
              ছেলেদের বয়স কমপক্ষে ২১ বছর এবং মেয়েদের ক্ষেত্রে ১৮ বছর হতে হবে।
            </li>
            <li>
              অভিভাবকের যোগাযোগ তথ্যের ঘরে পাত্র/পাত্রীর নিজের বা বন্ধুর মোবাইল
              নম্বর প্রদান করা যাবে না।
            </li>
            <li>
              বাংলা, ইংলিশ মিশ্রিত বাংলিশ ভাষায় লেখা যাবে না। পুরোটাই বাংলায়
              অথবা পুরোটাই ইংরেজিতে লিখতে হবে।
            </li>
            <li>
              নিজের শিক্ষা, পেশা এবং পারিবারিক তথ্যে বিস্তারিত উত্তর লিখতে হবে।
            </li>
            <li>
              তথ্য ভেরিফিকেশনের সময় বায়োডাটায় দেওয়া তথ্যের সাথে মিল থাকতে হবে।
            </li>
          </ol>
        </div>
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full bg-[#f6f6f6] p-6 space-y-4 text-black rounded-4xl">
          <div className="text-[#005A8B] text-xl">প্রতিশ্রুতি নামা:</div>
          <div className="text-[#cd0000] space-y-2">
            <FormField
              control={form.control}
              name="preApprovalAcceptTerms"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি শর্তসমূহ পড়েছি এবং তা মেনে চলার প্রতিশ্রুতি দিচ্ছি।
                    </FormLabel>

                    {/* <FormDescription>
                      Describe what this resume is for.
                    </FormDescription> */}
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathTruthfulInfo"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আল্লাহর নামে শপথ করছি যে, বায়োডাটায় সকল তথ্য সত্য
                      প্রদান করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
            <FormField
              control={form.control}
              name="preApprovalOathLegalResponsibility"
              render={({ field }) => (
                <FormItem>
                  <div className="flex items-center space-x-2">
                    <FormControl>
                      <Checkbox
                        checked={field.value}
                        onCheckedChange={field.onChange}
                      />
                    </FormControl>
                    <FormLabel className="leading-4.5">
                      আমি আরও শপথ করছি যে, কোনো মিথ্যা তথ্য প্রদান করলে দুনিয়াবী
                      যেকোনো আইনী জটিলতা এবং পরকালীন সকল দায়ভার আমি বহন করবো।
                    </FormLabel>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          </div>
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/GeneralInfo.tsx

"use client";
import { Button } from "@/components/ui/button";
import { Calendar } from "@/components/ui/calendar";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import {
  bloodGroups,
  heights,
  maritalStatuses,
  nationalities,
  skinTones,
} from "@/lib/consts";
import { BiodataFormDataProps, GeneralInfoFormData } from "@/lib/types";
import { cn } from "@/lib/utils";
import { generalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { format } from "date-fns";
import { CalendarIcon } from "lucide-react";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function GeneralInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<GeneralInfoFormData>({
    resolver: zodResolver(generalInfoFormData),
    defaultValues: {
      dateOfBirth: biodataFormData?.generalInfoFormData?.dateOfBirth || "",
      maritalStatus: biodataFormData?.generalInfoFormData?.maritalStatus || "",
      skinTone: biodataFormData?.generalInfoFormData?.skinTone || "",
      height: biodataFormData?.generalInfoFormData?.height || "",
      weight: biodataFormData?.generalInfoFormData?.weight || "",
      bloodGroup: biodataFormData?.generalInfoFormData?.bloodGroup || "",
      nationality: biodataFormData?.generalInfoFormData?.nationality || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        generalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const maritalStatusOptions = maritalStatuses.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">সাধারণ তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="dateOfBirth"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জন্ম তারিখ:</div>
                    <div className="text-xs">(আসল, সার্টিফিকেট অনুযায়ী নয়)</div>
                  </FormLabel>
                  <FormControl>
                    <Popover>
                      <PopoverTrigger asChild>
                        <Button
                          className={cn(
                            "p-6 w-full bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]",
                            !field.value && "text-muted-foreground"
                          )}
                        >
                          <CalendarIcon className="mr-2 h-4 w-4" />
                          {field.value ? (
                            format(field.value, "PPP")
                          ) : (
                            <span>জন্ম তারিখ</span>
                          )}
                        </Button>
                      </PopoverTrigger>
                      <PopoverContent className="w-auto p-0">
                        <Calendar
                          className="bg-[#005889]"
                          classNames={{
                            day_selected: "bg-[#E25A6F]",
                            day_today: "bg-white text-black",
                          }}
                          mode="single"
                          selected={
                            field.value ? new Date(field.value) : undefined
                          }
                          onSelect={(date) =>
                            field.onChange(date?.toISOString())
                          }
                          initialFocus
                        />
                      </PopoverContent>
                    </Popover>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বৈবাহিক অবস্থা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {maritalStatusOptions.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="গাত্রবর্ণ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {skinTones.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="weight"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ওজন:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ওজন"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="bloodGroup"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    রক্তের গ্রুপ:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="রক্তের গ্রুপ" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {bloodGroups.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="nationality"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জাতীয়তা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="জাতীয়তা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {nationalities.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/MarriageInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { Textarea } from "@/components/ui/textarea";
import { afterMarriageJobs, afterMarriageStuties } from "@/lib/consts";
import { BiodataFormDataProps, MarriageInfoFormData } from "@/lib/types";
import { marriageInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function MarriageInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<MarriageInfoFormData>({
    resolver: zodResolver(marriageInfoFormData),
    defaultValues: {
      guardianApproval:
        biodataFormData?.marriageInfoFormData?.guardianApproval || "",
      continueStudy: biodataFormData?.marriageInfoFormData?.continueStudy || "",
      careerPlan: biodataFormData?.marriageInfoFormData?.careerPlan || "",
      residence: biodataFormData?.marriageInfoFormData?.residence || "",
      arrangeHijab: biodataFormData?.marriageInfoFormData?.arrangeHijab || "",
      dowryExpectation:
        biodataFormData?.marriageInfoFormData?.dowryExpectation || "",
      allowShowingPhotoOnline:
        biodataFormData?.marriageInfoFormData?.allowShowingPhotoOnline || "",
      additionalMarriageInfo:
        biodataFormData?.marriageInfoFormData?.additionalMarriageInfo || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        marriageInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const afterMarriageStutyOptions = afterMarriageStuties.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  const afterMarriageJobOptions = afterMarriageJobs.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">বিয়ে সংক্রান্ত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="guardianApproval"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
                    <div className="text-xs">
                      (যদি অভিভাবক রাজি নাও থাকে তাহলে এর কারণ লিখুন এবং
                      সেক্ষেত্রে আপনি কেন বিবাহে আগাচ্ছেন সেটা বিস্তারিত লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="continueStudy"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?"
                      : "বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageStutyOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="careerPlan"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?"
                      : "আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {afterMarriageJobOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="residence"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?"
                      : "যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="arrangeHijab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে পারবেন?"
                      : "বাড়িতে বা বাহিরে পর্দা করতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="dowryExpectation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক / উপহার / অর্থ আশা করবেন কিনা?"
                      : "বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রপক্ষকে যৌতুক / উপহার / অর্থ দিতে ইচ্ছুক?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="allowShowingPhotoOnline"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "পাত্রীপক্ষ"
                      : "পাত্রপক্ষ"}{" "}
                    অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="additionalMarriageInfo"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>
                      বিয়ে সংক্রান্ত আরো কিছু জানাতে চাইলে এখানে লিখুন: অন্যথায়
                      খালি রাখুন।
                    </div>
                    <div className="text-xs">
                      (যেমন: পাত্র-পাত্রী সাক্ষাতের ব্যাপারে, অভিভাবকদের মতামত
                      নিয়ে, কেমন বিয়ে চান, বিয়ের পর কোন কোন বিষয় ছাড় দিতে রাজি
                      নন ইত্যাদি কিছু জানানোর থাকলে লিখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\OccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/OccupationInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { occupationsList } from "@/lib/consts";
import { BiodataFormDataProps, OccupationInfoFormData } from "@/lib/types";
import { occupationInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function OccupationInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<OccupationInfoFormData>({
    resolver: zodResolver(occupationInfoFormData),
    defaultValues: {
      occupations: biodataFormData?.occupationInfoFormData?.occupations || [],
      detail: biodataFormData?.occupationInfoFormData?.detail || "",
      monthlyIncome:
        biodataFormData?.occupationInfoFormData?.monthlyIncome || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        occupationInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">পেশা</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="occupations"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="detail"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পেশা নিয়ে বিস্তারিত লিখুন:</div>
                    <div className="text-xs">
                      (অর্থাৎ আপনার কর্মস্থল কোথায়, কি ধরণের কাজে দায়িত্বরত আছেন
                      বা পদবি কি, এগুলো নিয়ে বিস্তারিত লিখুন। পেশা না থাকলে খালি
                      রাখুন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="monthlyIncome"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাসিক আয়:</div>
                    <div className="text-xs">(পেশা না থাকলে খালি রাখুন।)</div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাসিক আয়"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PersonalInfo.tsx

import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Textarea } from "@/components/ui/textarea";
import { characteristics, specialCatagories } from "@/lib/consts";
import { BiodataFormDataProps, PersonalInfoFormData } from "@/lib/types";
import { personalInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function PersonalInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PersonalInfoFormData>({
    resolver: zodResolver(personalInfoFormData),
    defaultValues: {
      beardStatus: biodataFormData?.personalInfoFormData?.beardStatus || "",
      preferredOutfit:
        biodataFormData?.personalInfoFormData?.preferredOutfit || "",
      entertainmentPreferences:
        biodataFormData?.personalInfoFormData?.entertainmentPreferences || "",
      healthConditions:
        biodataFormData?.personalInfoFormData?.healthConditions || "",
      personalTraits:
        biodataFormData?.personalInfoFormData?.personalTraits || [],
      genderEqualityView:
        biodataFormData?.personalInfoFormData?.genderEqualityView || "",
      lgbtqOpinion: biodataFormData?.personalInfoFormData?.lgbtqOpinion || "",
      specialConditions:
        biodataFormData?.personalInfoFormData?.specialConditions || [],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        personalInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const specialCatagoryOptions = specialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ব্যক্তিগত তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="beardStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                      ? "আপনি দাড়ি রেখেছেন কি?"
                      : "আপনার কি দাড়ি পছন্দ?"}
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="preferredOutfit"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পড়তে পছন্দ করেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="entertainmentPreferences"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="healthConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    মানসিক বা শারীরিক কোনো রোগ আছে কি? থাকলে বিস্তারিত লিখুন।
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="personalTraits"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নিজের কিছু গুণাবলী চিহ্নিত করুন:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {characteristics.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="genderEqualityView"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="lgbtqOpinion"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialConditions"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {specialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/PrimaryInfo.tsx
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { biodataTypes } from "@/lib/consts";
import { BiodataFormDataProps, PrimaryInfoFormData } from "@/lib/types";
import { primaryInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { Minus, Plus } from "lucide-react";
import { useEffect, useState } from "react";
import { useFieldArray, useForm } from "react-hook-form";

export default function PrimaryInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<PrimaryInfoFormData>({
    resolver: zodResolver(primaryInfoFormData),
    defaultValues: {
      biodataType: biodataFormData?.primaryInfoFormData?.biodataType || "",
      biodataFor: biodataFormData?.primaryInfoFormData?.biodataFor || "",
      fullName: biodataFormData?.primaryInfoFormData?.fullName || "",
      fatherName: biodataFormData?.primaryInfoFormData?.fatherName || "",
      motherName: biodataFormData?.primaryInfoFormData?.motherName || "",
      email: biodataFormData?.primaryInfoFormData?.email || "",
      phoneNumber: biodataFormData?.primaryInfoFormData?.phoneNumber || "",
      guardianContacts:
        biodataFormData?.primaryInfoFormData?.guardianContacts?.length > 0
          ? biodataFormData?.primaryInfoFormData?.guardianContacts.map((x) => {
              return {
                relation: x.relation,
                fullName: x.fullName,
                phoneNumber: x.phoneNumber,
              };
            })
          : [
              { relation: "", fullName: "", phoneNumber: "" },
              { relation: "", fullName: "", phoneNumber: "" },
            ],
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        primaryInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const { fields, append, remove } = useFieldArray({
    control: form.control,
    name: "guardianContacts",
  });

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রাথমিক তথ্য</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-4">
          <FormField
            control={form.control}
            name="biodataType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বায়োডাটার ধরন:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] m-0">
                        <SelectValue placeholder="বায়োডাটার ধরন" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {biodataTypes.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="biodataFor"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>বায়োডাটা কার জন্য তৈরী করছেন?</div>
                    <div className="text-xs">
                      (যেমনঃ নিজের জন্য/বোনের জন্য/বন্ধুর জন্য/ভাগ্নির জন্য
                      ইত্যাদি)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="নিজের জন্য"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fullName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
                    <div className="text-xs">
                      (NID কার্ডে যে নাম আছে। নাম বায়োডাটায় প্রকাশ করা হবে না।
                      শুধুমাত্র ভেরিফিকেশন ও অপরপক্ষকে যোগাযোগ তথ্য প্রদানের
                      ক্ষেত্রে প্রয়োজন হবে।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="সম্পূর্ণ নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="fatherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পিতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="পিতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="motherName"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>মাতার নাম:</div>
                    <div className="text-xs">
                      (পূর্ণ নাম লিখবেন। বায়োডাটায় প্রকাশ করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মাতার নাম"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="email"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>ইমেইল আইডি:</div>
                    <div className="text-xs">
                      (পাত্র/পাত্রীর সাথে আমাদের যোগাযোগের জন্য প্রয়োজন হবে।
                      অপরপক্ষ যোগাযোগ তথ্য নিতে চাইলে যুক্তিসঙ্গত কারণ বা
                      প্রয়োজন ছাড়া পাঠানো হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="ইমেইল আইডি"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="phoneNumber"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>পাত্র/পাত্রীর মোবাইল নম্বর:</div>
                    <div className="text-xs">
                      (মোবাইল নম্বর শুধুমাত্র ভেরিফিকেশনের জন্য আমাদের কাছে
                      থাকবে। কাউকে প্রদান করা হবে না।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      placeholder="মোবাইল নম্বর"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <div className="flex flex-col space-y-2">
            <FormLabel className="flex items-center justify-between space-x-8">
              <div className="text-md space-y-1 leading-4.5">
                <div>পাত্র/পাত্রীর অভিভাবকের মোবাইল নম্বর:</div>
                <div className="text-xs">
                  <div>কমপক্ষে ২ টি সচল নম্বর প্রদান করতে হবে।</div>
                </div>
              </div>
              <Button
                type="button"
                className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] flex items-center space-x-2"
                onClick={() => append({ fullName: "", phoneNumber: "" })}
              >
                <Plus size={20} /> <span>নতুন নম্বর যোগ করুন</span>
              </Button>
            </FormLabel>

            <div className="space-y-2">
              {fields.map((field, index) => (
                <div className="flex space-x-2 items-center" key={field.id}>
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.relation`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="সম্পর্ক"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.fullName`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের নাম"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  <FormField
                    control={form.control}
                    name={`guardianContacts.${index}.phoneNumber`}
                    render={({ field }) => (
                      <FormItem className="w-full">
                        <div className="flex items-center space-x-2">
                          <FormControl>
                            <Input
                              {...field}
                              className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                              placeholder="অভিভাবকের মোবাইল নম্বর"
                            />
                          </FormControl>
                        </div>
                        <FormMessage />
                      </FormItem>
                    )}
                  />
                  {/* Remove button (except for the first two fields) */}
                  {fields.length > 2 && (
                    <Button
                      type="button"
                      className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F] p-2"
                      onClick={() => remove(index)}
                    >
                      <Minus size={20} />
                    </Button>
                  )}
                </div>
              ))}
            </div>
          </div>
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\ProfilePic.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ProfilePic.tsx

"use client";

import female1 from "@/assets/images/female-1.svg";
import female2 from "@/assets/images/female-2.svg";
import female3 from "@/assets/images/female-3.svg";
import female4 from "@/assets/images/female-4.svg";
import female5 from "@/assets/images/female-5.svg";
import female6 from "@/assets/images/female-6.svg";
import male1 from "@/assets/images/male-1.svg";
import male2 from "@/assets/images/male-2.svg";
import male3 from "@/assets/images/male-3.svg";
import male4 from "@/assets/images/male-4.svg";
import male5 from "@/assets/images/male-5.svg";
import male6 from "@/assets/images/male-6.svg";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { BiodataFormDataProps, ProfilePicFormData } from "@/lib/types";
import { profilePicFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { CheckCircle } from "lucide-react";
import Image from "next/image";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ProfilePic({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ProfilePicFormData>({
    resolver: zodResolver(profilePicFormData),
    defaultValues: {
      photoId: biodataFormData?.profilePicFormData?.photoId || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        profilePicFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const images =
    biodataFormData?.primaryInfoFormData?.biodataType === "1"
      ? [male1, male2, male3, male4, male5, male6]
      : [female1, female2, female3, female4, female5, female6];

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">প্রোফাইল পিকচার</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="photoId"
            render={({ field }) => (
              <FormItem>
                <FormLabel>
                  আপনার সাথে মানানসই বা সামঞ্জস্যপূর্ণ একটি প্রোফাইল পিকচার
                  বাছাই করুন:
                </FormLabel>
                <FormControl>
                  <div className="flex flex-wrap">
                    {images.map((image, index) => (
                      <div
                        key={index}
                        className="w-1/3 mb-4 flex items-center justify-center relative"
                      >
                        <div
                          className={`border p-12 rounded-3xl cursor-pointer transition-all relative ${
                            form.getValues().photoId === image.src
                              ? "border-[#E25A6F] ring-2 ring-[#E25A6F]"
                              : "border-gray-300"
                          } `}
                          onClick={() => {
                            field.onChange(image.src);
                          }}
                        >
                          <Image
                            src={image}
                            alt={`Profile${index + 1}`}
                            width={120}
                            height={40}
                            priority
                          />
                          {form.getValues().photoId === image.src && (
                            <CheckCircle className="absolute top-4 right-4 text-[#E25A6F]" />
                          )}
                        </div>
                      </div>
                    ))}
                  </div>
                </FormControl>
                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/ReligiousInfo.tsx
"use client";

import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import { madhhabs, religiousIdeologies } from "@/lib/consts";
import { BiodataFormDataProps, ReligiousInfoFormData } from "@/lib/types";
import { religiousInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function ReligiousInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<ReligiousInfoFormData>({
    resolver: zodResolver(religiousInfoFormData),
    defaultValues: {
      type: biodataFormData?.religiousInfoFormData?.type || "",
      ideology: biodataFormData?.religiousInfoFormData?.ideology || "",
      madhab: biodataFormData?.religiousInfoFormData?.madhab || "",
      praysFiveTimes:
        biodataFormData?.religiousInfoFormData?.praysFiveTimes || "",
      hasQazaPrayers:
        biodataFormData?.religiousInfoFormData?.hasQazaPrayers || "",
      canReciteQuranProperly:
        biodataFormData?.religiousInfoFormData?.canReciteQuranProperly || "",
      avoidsHaramIncome:
        biodataFormData?.religiousInfoFormData?.avoidsHaramIncome || "",
      modestDressing:
        biodataFormData?.religiousInfoFormData?.modestDressing || "",
      followsMahramRules:
        biodataFormData?.religiousInfoFormData?.followsMahramRules || "",
      beliefAboutPirMurshidAndMazar:
        biodataFormData?.religiousInfoFormData?.beliefAboutPirMurshidAndMazar ||
        "",
      practicingSince:
        biodataFormData?.religiousInfoFormData?.practicingSince || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        religiousInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">ধর্মীয় লাইফস্টাইল</div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="type"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormControl>
                    <RadioGroup
                      className="flex"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="1" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              সেরকমভাবে মেনে চলা হয় না
                            </div>
                            <div>(জেনারেল/নন-প্রাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>
                            ১. অনিয়মিতভাবে ৫ ওয়াক্ত বা এর কম সালাত আদায় করা হয়।
                          </div>
                          <div>
                            ২. সকল ক্ষেত্রে হালাল-হারাম বাছাই করা হয় না।
                          </div>
                          <div>৩. মাহরাম-নন মাহরাম মেইনটেইন করা হয় না।</div>
                          <div>
                            ৪. হারাম উপার্জন, ব্যাংকিং সুদ, ফ্রি-মিক্সিং,
                            গান-বাজনা থেকে বিরত থাকা হয় না।
                          </div>
                          <div>
                            ৫. পরিপূর্ন ভাবে ইসলামের বিধিবিধান পালনে তেমন চেষ্টা
                            বা আগ্রহ নেই।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="2" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black">
                              পরিপূর্ণভাবে মেনে চলা হয় না কিন্তু প্রবল ইচ্ছা আছে
                              এবং চেষ্টা করছি
                            </div>
                            <div>(প্রাক্টিসিংয়ের চেষ্টায় আছি)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>
                            ২. হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত থাকছেন।
                          </div>
                          <div>
                            ৩. কিন্তু গান-বাজনা থেকে এখনো দূরে থাকা হয় না।
                          </div>
                          <div>
                            ৪. সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট বা পর্দা এখনো
                            মেনে চলতে পারছেন না।
                          </div>
                          <div>
                            ৫. এর জন্য প্রবল অনুশোচনা কাজ করে এবং পরিপূর্ন ভাবে
                            ইসলামের বিধিবিধান পালনের চেষ্টা করা হয়।
                          </div>
                        </Label>
                      </div>
                      <div className="border border-gray-300 p-4 rounded-3xl space-y-6">
                        <div className="min-h-32 border border-gray-300 bg-[#f6f6f6] p-4 rounded-xl space-x-2 flex items-center justify-center">
                          <RadioGroupItem value="3" />
                          <Label className="leading-5 space-y-2">
                            <div className="text-black leading-5">
                              জি পরিপূর্ণভাবে মেনে চলি এবং সর্বদা চেষ্টায় থাকি
                            </div>
                            <div>(পূর্ণ ধার্মিক/ প্র্যাক্টিসিং)</div>
                          </Label>
                        </div>
                        <Label className="text-xs leading-4 space-y-2 text-[#A30000]">
                          <div>অর্থাৎ,</div>
                          <div>১. বিশুদ্ধ ঈমান-আকিদা পোষণ করছেন।</div>
                          <div>২. নিয়মিত ৫ ওয়াক্ত সালাত আদায় করছেন।</div>
                          <div>৩. পরিপূর্ণ হালাল উপার্জন করছেন ।</div>
                          <div>
                            ৪. ফরজ, ওয়াজিব ইবাদতের পাশাপাশি সুন্নাত, নফল আমল
                            করার চেষ্টা করেন।
                          </div>
                          <div>৫. গান-বাজনা, নাটক-সিনেমা থেকে দূরে থাকছেন।</div>
                          <div>
                            ৬. পুরুষেরা সুন্নতি দাড়ি, টাখনুর উপর প্যান্ট,
                            ইসলামিক পোশাক মেনে চলেন, নারীরা নিকাব সহ পর্দা
                            করছেন।
                          </div>
                          <div>
                            ৭. বাহিরে পর্দা মেনে চলা অর্থাৎ বেগানা নারী-পুরুষের
                            ক্ষেত্রে চক্ষু অবনত রাখছেন।
                          </div>
                          <div>
                            ৮. মাহরাম-নন মাহরাম মেইনটেইন করেন এবং ফ্রী মিক্সিং
                            এড়িয়ে চলেন।
                          </div>
                          <div>
                            ৯. সকল প্রকার হারাম ও কবীরা গুনাহ থেকে বেঁচে থাকার
                            সর্বাত্মক প্রচেষ্টায় থাকেন।
                          </div>
                          <div>
                            ১০. ইসলাম বিরোধী সকল কাজকে অপছন্দ করেন এবং জীবনটাকে
                            পরিপূর্ণভাবে কোরআন-সুন্নাহ মোতাবেক সাজাতে থাকেন।
                          </div>
                        </Label>
                      </div>
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="ideology"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় কোন মতাদর্শ মেনে চলেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {religiousIdeologies.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="madhab"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কোন মাজহাব / মানহাজ অনুসরণ করেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {madhhabs.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="praysFiveTimes"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="hasQazaPrayers"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      আপনার কি নামাজ কাযা হয়?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="canReciteQuranProperly"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />

          {["2", "3"].includes(form.getValues().type) && (
            <FormField
              control={form.control}
              name="avoidsHaramIncome"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <FormField
              control={form.control}
              name="modestDressing"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      {biodataFormData?.primaryInfoFormData?.biodataType === "1"
                        ? "টাখনুর উপরে কাপড় পরেন কিনা?"
                        : "আপনি কি নিকাব সহ পর্দা করেন?"}
                    </FormLabel>
                    <FormControl>
                      <Input
                        {...field}
                        className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                      />
                    </FormControl>
                  </div>
                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          {form.getValues().type === "3" && (
            <>
              <FormField
                control={form.control}
                name="followsMahramRules"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="beliefAboutPirMurshidAndMazar"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
              <FormField
                control={form.control}
                name="practicingSince"
                render={({ field }) => (
                  <FormItem>
                    <div className="flex flex-col space-y-2">
                      <FormLabel className="text-md space-y-1 leading-4.5">
                        কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু
                        করেছেন?
                      </FormLabel>
                      <FormControl>
                        <Input
                          {...field}
                          className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                        />
                      </FormControl>
                    </div>
                    <FormMessage />
                  </FormItem>
                )}
              />
            </>
          )}
        </form>
      </Form>
      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodata-editor\bioDataFormComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodata-editor/biodataFormComponents/SpousePreferenceInfo.tsx
import { Button } from "@/components/ui/button";
import { Checkbox } from "@/components/ui/checkbox";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Textarea } from "@/components/ui/textarea";
import {
  familyBackgrounds,
  heights,
  maritalStatuses,
  muslimTypes,
  occupationsList,
  religiousEducationQualities,
  secondMarriageOptions,
  skinTones,
  spouseLocationOptions,
  spouseSpecialCatagories,
} from "@/lib/consts";
import {
  BiodataFormDataProps,
  SpousePreferenceInfoFormData,
} from "@/lib/types";
import { spousePreferenceInfoFormData } from "@/lib/validations";
import { zodResolver } from "@hookform/resolvers/zod";
import { useEffect, useState } from "react";
import { useForm } from "react-hook-form";

export default function SpousePreferenceInfo({
  biodataFormData,
  setBiodataFormData,
  handleSave,
  currentStep,
  setCurrentStep,
}: BiodataFormDataProps) {
  const [submittedOnce, setSubmittedOnce] = useState<boolean>(false);

  const form = useForm<SpousePreferenceInfoFormData>({
    resolver: zodResolver(spousePreferenceInfoFormData),
    defaultValues: {
      age: biodataFormData?.spousePreferenceInfoFormData?.age || "",
      skinTone: biodataFormData?.spousePreferenceInfoFormData?.skinTone || [],
      height: biodataFormData?.spousePreferenceInfoFormData?.height || "",
      educationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.educationalQualification || "",
      religiousEducationalQualification:
        biodataFormData?.spousePreferenceInfoFormData
          ?.religiousEducationalQualification || [],
      address: biodataFormData?.spousePreferenceInfoFormData?.address || "",
      maritalStatus:
        biodataFormData?.spousePreferenceInfoFormData?.maritalStatus || [],
      specialCategory:
        biodataFormData?.spousePreferenceInfoFormData?.specialCategory || [],
      religiousType:
        biodataFormData?.spousePreferenceInfoFormData?.religiousType || [],
      occupation:
        biodataFormData?.spousePreferenceInfoFormData?.occupation || [],
      familyBackground:
        biodataFormData?.spousePreferenceInfoFormData?.familyBackground || [],
      secondMarrige:
        biodataFormData?.spousePreferenceInfoFormData?.secondMarrige || "",
      location: biodataFormData?.spousePreferenceInfoFormData?.location || "",
      qualities: biodataFormData?.spousePreferenceInfoFormData?.qualities || "",
    },
  });

  useEffect(() => {
    const { unsubscribe } = form.watch(async (values) => {
      if (submittedOnce) {
        await form.trigger();
      }
      setBiodataFormData({
        ...biodataFormData,
        spousePreferenceInfoFormData: { ...values },
      });
    });
    return unsubscribe;
  }, [
    submittedOnce,
    setSubmittedOnce,
    form,
    biodataFormData,
    setBiodataFormData,
  ]);

  const handleNextClick = async () => {
    setSubmittedOnce(true);
    const isValid = await form.trigger();
    if (isValid) {
      handleSave();
    }
  };

  const spouseSpecialCatagoryOptions = spouseSpecialCatagories.filter((x) =>
    x.for.includes(biodataFormData?.primaryInfoFormData?.biodataType)
  );

  return (
    <div className="flex flex-col items-center justify-center space-y-8">
      <div className="text-3xl text-center text-black">
        যেমন জীবনসঙ্গী আশা করেন
      </div>
      <Form {...form}>
        <form className="max-w-4xl w-full text-[#005889] flex flex-col space-y-6">
          <FormField
            control={form.control}
            name="age"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত বয়স:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="skinTone"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত গাত্রবর্ণ:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {skinTones.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="height"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত উচ্চতা:
                  </FormLabel>
                  <FormControl>
                    <Select value={field.value} onValueChange={field.onChange}>
                      <SelectTrigger className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889]">
                        <SelectValue placeholder="কাঙ্খিত উচ্চতা" />
                      </SelectTrigger>
                      <SelectContent className="bg-[#f6f6f6] text-[#005889] border-none">
                        {heights.map((x) => (
                          <SelectItem
                            key={x.id}
                            className="focus:bg-transparent focus:text-[#E25A6F] p-2"
                            value={x.id}
                          >
                            {x.title}
                          </SelectItem>
                        ))}
                      </SelectContent>
                    </Select>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="educationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousEducationalQualification"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    দ্বীনি শিক্ষাগত যোগ্যতা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {religiousEducationQualities.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="address"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    কাঙ্খিত ঠিকানা:
                  </FormLabel>
                  <FormControl>
                    <Input
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="maritalStatus"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    বৈবাহিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {maritalStatuses.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="specialCategory"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {spouseSpecialCatagoryOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="religiousType"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    ধর্মীয় লাইফস্টাইল:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {muslimTypes.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="occupation"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পেশা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {occupationsList.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="familyBackground"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    পরিবারের অর্থনৈতিক অবস্থা:
                  </FormLabel>
                  <FormControl>
                    <div className="w-full flex flex-wrap">
                      {familyBackgrounds.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/3 flex items-center space-x-2 mb-4"
                        >
                          <Checkbox
                            id={x.id}
                            checked={field.value.includes(x.id)}
                            onCheckedChange={(checked) => {
                              const updatedOccupations = checked
                                ? [...field.value, x.id]
                                : field.value.filter((id) => id !== x.id);

                              field.onChange(updatedOccupations);
                            }}
                          />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </div>
                  </FormControl>
                </div>
                <FormMessage />
              </FormItem>
            )}
          />
          {biodataFormData?.primaryInfoFormData?.biodataType === "2" && (
            <FormField
              control={form.control}
              name="secondMarrige"
              render={({ field }) => (
                <FormItem>
                  <div className="flex flex-col space-y-2">
                    <FormLabel className="text-md space-y-1 leading-4.5">
                      মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী
                      আছেন?
                    </FormLabel>
                    <FormControl>
                      <RadioGroup
                        className="w-full flex flex-wrap gap-0"
                        onValueChange={field.onChange}
                        value={field.value}
                      >
                        {secondMarriageOptions.map((x) => (
                          <div
                            key={x.id}
                            className="w-1/4 flex items-center space-x-2 mb-2"
                          >
                            <RadioGroupItem value={x.id} id={x.id} />
                            <Label htmlFor={x.id}>{x.title}</Label>
                          </div>
                        ))}
                      </RadioGroup>
                    </FormControl>
                  </div>

                  <FormMessage />
                </FormItem>
              )}
            />
          )}
          <FormField
            control={form.control}
            name="location"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
                  </FormLabel>
                  <FormControl>
                    <RadioGroup
                      className="w-full flex flex-wrap gap-0"
                      onValueChange={field.onChange}
                      value={field.value}
                    >
                      {spouseLocationOptions.map((x) => (
                        <div
                          key={x.id}
                          className="w-1/4 flex items-center space-x-2 mb-2"
                        >
                          <RadioGroupItem value={x.id} id={x.id} />
                          <Label htmlFor={x.id}>{x.title}</Label>
                        </div>
                      ))}
                    </RadioGroup>
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
          <FormField
            control={form.control}
            name="qualities"
            render={({ field }) => (
              <FormItem>
                <div className="flex flex-col space-y-2">
                  <FormLabel className="text-md space-y-1 leading-4.5">
                    <div>জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:</div>
                    <div className="text-xs">
                      (অর্থাৎ কাঙ্খিত জীবনসঙ্গীর স্বভাব, দ্বীনদারিতা, চারিত্রীক
                      গুণাবলী কেমন আশা করেন। বিশেষ কোনো কার্যক্রম বা চাওয়া থাকলে
                      জানাতে পারেন।)
                    </div>
                  </FormLabel>
                  <FormControl>
                    <Textarea
                      {...field}
                      className="p-6 bg-[#f6f6f6] border-none shadow-none rounded-xl text-[#005889] selection:bg-[#E25A6F] selection:text-white"
                    />
                  </FormControl>
                </div>

                <FormMessage />
              </FormItem>
            )}
          />
        </form>
      </Form>

      <div className="max-w-4xl w-full space-x-2 flex justify-center">
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={() => setCurrentStep(currentStep.prev)}
        >
          Previous
        </Button>
        <Button
          className="bg-[#E25A6F] text-white rounded-lg hover:bg-[#D14A5F]"
          onClick={handleNextClick}
        >
          Next
        </Button>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\layout.tsx
// --------------------
// File: src/app/(main)/biodatas/layout.tsx
import { ReactNode } from "react";

export default function MainLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return <main className="flex-grow">{children}</main>;
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageAppliedFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageAppliedFilters.tsx

import { X } from "lucide-react";

export default function BiodatasPageAppliedFilters() {
  const appliedFilters = [
    {
      id: 1,
      name: "বায়োডাটার ধরন",
      selected: [
        {
          id: 1,
          name: "পুরুষ",
        },
      ],
    },
    {
      id: 2,
      name: "বৈবাহিক অবস্থা",
      selected: [
        {
          id: 1,
          name: "অবিবাহিত",
        },
        {
          id: 2,
          name: "বিবাহিত",
        },
      ],
    },
  ];

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">আপনি বাছাই করেছেন</div>
      </div>
      <div className="flex flex-col space-y-4">
        {appliedFilters.length > 0 &&
          appliedFilters.map((x) => (
            <div
              key={x.id}
              className="flex flex-col space-y-3 text-black text-xs border border-gray-300 rounded-xl px-6 py-2"
            >
              {x.selected.length > 0 &&
                x.selected.map((y) => (
                  <div key={y.id} className="flex justify-between items-center">
                    <div>{y.name}</div>
                    <X className="text-[#e25a6f] w-4 h-4" />
                  </div>
                ))}
            </div>
          ))}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageCard.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageCard.tsx

"use client";
import male from "@/assets/images/male-5.svg";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Heart } from "lucide-react";
import Image from "next/image";
import { useRouter } from "next/navigation";

export interface BiodatasPageCardProps {
  id: number;
}

export default function BioCard({ id }: BiodatasPageCardProps) {
  const router = useRouter();

  const handleOnClick = () => {
    router.push("/biodatas/asd");
  };
  return (
    <Card
      key={id}
      className="border-none overflow-hidden bg-gradient-to-t from-[#e6f2ff] to-[#fff0f6]"
    >
      <CardContent className="p-4">
        <div className="flex justify-between items-start mb-4">
          <div className="w-1/3">
            <Heart className="w-8 h-8 text-[#E25A6F]" fill="#E25A6F" />
          </div>
          <div className="w-1/3 flex items-center justify-center">
            <Image src={male} alt="Male" width={80} height={40} priority />
          </div>
          <div className="w-1/3 flex flex-col items-end space-y-2">
            <Badge className="text-[#00b754]">Verified</Badge>
            <Badge className="text-[#016ca7]">Seen</Badge>
          </div>
        </div>

        <div className="text-center mb-4 flex items-center justify-center">
          <div className="text-black bg-[#fcfafd] p-3 rounded-md">
            বায়োডাটা নং: 43527
          </div>
        </div>

        <div className="space-y-3 text-black">
          <div className="flex justify-between">
            <span>বৈবাহিক অবস্থা:</span>
            <span>অবিবাহিত</span>
          </div>
          <div className="flex justify-between">
            <span>জন্মসন:</span>
            <span>১৯৯০</span>
          </div>
          <div className="flex justify-between">
            <span>উচ্চতা:</span>
            <span>৫'৩০"</span>
          </div>
          <div className="flex justify-between">
            <span>স্থায়ী ঠিকানা:</span>
            <span>BSC in EEE</span>
          </div>
          <div className="flex justify-between">
            <span>পেশা:</span>
            <span>ইঞ্জিনিয়ার</span>
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button
          className="w-full text-white bg-[#E25A6F]  hover:bg-[#D14A5F]"
          onClick={handleOnClick}
        >
          বায়োডাটা দেখুন
        </Button>
      </CardFooter>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageFilters.tsx

"use client";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { useState } from "react";

export default function BiodatasPageFilters() {
  const [ageRange, setAgeRange] = useState<number[]>([18, 80]);
  const [heightRange, setHeightRange] = useState<number[]>([36, 84]);

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">ফিল্টার করুন</div>
      </div>
      <div className="flex justify-center mb-4">
        <button className="mr-[-1rem] rounded-xl py-3 text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-[#989898] pr-4 pl-6 border border-[#989898]">
          আমাকে খুঁজছে
        </button>
        {/* <button className="mr-[-1rem] rounded-xl py-3 text-[#989898] pl-4 pr-6 border border-[#989898]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমাকে খুঁজছে
        </button> */}
      </div>
      <form className="flex flex-col space-y-2">
        <Accordion type="multiple" className="flex flex-col space-y-2 mb-2">
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বায়োডাটার ধরন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বায়োডাটার ধরন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বৈবাহিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বৈবাহিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বয়স"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বয়স
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{ageRange[0]}</div>
                <Slider
                  value={ageRange}
                  onValueChange={setAgeRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{ageRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="উচ্চতা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              উচ্চতা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{heightRange[0]}</div>
                <Slider
                  value={heightRange}
                  onValueChange={setHeightRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{heightRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="গাত্রবর্ণ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              গাত্রবর্ণ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="স্থায়ী ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              স্থায়ী ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বর্তমান ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বর্তমান ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা মাইগ্রেশন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা মাইগ্রেশন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পেশা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পেশা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পরিবারের আর্থসামাজিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পরিবারের আর্থসামাজিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="মাজহাব/মাসলাহ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              মাজহাব/মাসলাহ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="রক্তের গ্রুপ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              রক্তের গ্রুপ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বিশেষ অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বিশেষ অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </form>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\SearchByBiodataNo.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/SearchByBiodataNo.tsx

import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Search } from "lucide-react";

export default function BiodatasPageSearchByBiodataNo() {
  return (
    <form className="flex items-center space-x-4">
      <div className="w-32">
        <Select>
          <SelectTrigger className="text-[#1f4f69]">
            <SelectValue placeholder="SNM" />
          </SelectTrigger>
          <SelectContent className="bg-white text-[#1f4f69]">
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="all"
            >
              SNM
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="male"
            >
              পুরুষ
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="female"
            >
              নারী
            </SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="relative w-64">
        <div className="space-y-2">
          <Input
            className="w-full px-4 py-2 border rounded-md text-[#1f4f69] selection:bg-[#E25A6F] selection:text-white"
            id="biodataNo"
            type="text"
            placeholder="বায়োডাটা নং"
          />
        </div>
        <button className="absolute right-3 top-1/2 transform -translate-y-1/2">
          <Search className="w-4 h-4 text-gray-400" />
        </button>
      </div>
    </form>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\page.tsx
// --------------------
import BiodatasPageAppliedFilters from "./listPageComponentes/BiodatasPageAppliedFilters";
import BiodatasPageCard from "./listPageComponentes/BiodatasPageCard";
import BiodatasPageFilters from "./listPageComponentes/BiodatasPageFilters";
import BiodatasPageSearchByBiodataNo from "./listPageComponentes/SearchByBiodataNo";

export default function BiodatasPage() {
  return (
    <>
      <div className="mt-12 text-3xl text-center text-black mb-4">
        বায়োডাটা সমূহ
      </div>
      <div className="flex justify-between">
        <BiodatasPageFilters />
        <div className="flex-grow max-w-7xl">
          <div className="flex justify-end items-center mb-6">
            <BiodatasPageSearchByBiodataNo />
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {[...Array(6)].map((_, i) => (
              <BiodatasPageCard key={i} id={i} />
            ))}
          </div>
        </div>
        <BiodatasPageAppliedFilters />
      </div>
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\page.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/page.tsx
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import AddressInfo from "./viewBioDataComponents/AddressInfo";
import EducationAndOccupationInfo from "./viewBioDataComponents/EducationAndOccupationInfo";
import FamilyInfo from "./viewBioDataComponents/FamilyInfo";
import FooterSection from "./viewBioDataComponents/FooterSection";
import GeneralInfo from "./viewBioDataComponents/GeneralInfo";
import HeaderSection from "./viewBioDataComponents/HeaderSection";
import MarriageInfo from "./viewBioDataComponents/MarriageInfo";
import PersonalInfo from "./viewBioDataComponents/PersonalInfo";
import PrimaryInfo from "./viewBioDataComponents/PrimaryInfo";
import ReligiousInfo from "./viewBioDataComponents/ReligiousInfo";
import SpousePreferenceInfo from "./viewBioDataComponents/SpousePreferenceInfo";

export default function BiodataPage() {
  const tabs = [
    "প্রাথমিক তথ্য",
    "সাধারণ তথ্য",
    "ঠিকানা",
    "শিক্ষা ও পেশা",
    "পারিবারিক তথ্য",
    "ধর্মীয় লাইফস্টাইল",
    "ব্যক্তিগত তথ্য",
    "বিয়ে সংক্রান্ত তথ্য",
    "যেমন জীবনসঙ্গী আশা করেন",
  ];

  return (
    <>
      <HeaderSection />
      <div className="py-12 flex flex-col items-center justify-center space-y-6">
        <div className="text-4xl text-center text-black">সম্পূর্ণ বায়োডাটা</div>
        <Tabs defaultValue="ঠিকানা" className="max-w-7xl">
          <TabsList className="flex flex-wrap h-auto space-x-2 bg-[#f6f6f6] rounded-2xl p-2">
            {tabs.map((tab) => (
              <TabsTrigger
                key={tab}
                value={tab}
                className="data-[state=active]:bg-[#e25a6f] data-[state=active]:text-white text-[#004972] rounded-full px-4 py-2"
              >
                {tab}
              </TabsTrigger>
            ))}
          </TabsList>
        </Tabs>

        <div className="w-full max-w-6xl space-y-6">
          <PrimaryInfo />
          <GeneralInfo />
          <AddressInfo />
          <EducationAndOccupationInfo />
          <FamilyInfo />
          <ReligiousInfo />
          <PersonalInfo />
          <MarriageInfo />
          <SpousePreferenceInfo />
        </div>
      </div>
      <FooterSection />
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/AddressInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function AddressInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ঠিকানা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোথায় বেড়ে উঠেছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\EducationAndOccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/EducationAndOccupationInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function EducationAndOccupationInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          শিক্ষাগত যোগ্যতা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষার ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">জেনারেল</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এস.এস.সি/দাখিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এস.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এইচ.এস.সি/আলিম/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এইচ.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(ডিপ্লোমা):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">ডিপ্লোমা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(অনার্স/ফাজিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অনার্স</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(মাস্টার্স/কামিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>

        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা নিয়ে বিস্তারিত লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাসিক আয়:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FamilyInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function FamilyInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          পারিবারিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পিতা-মাতা উভয়েই জীবিত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনারা ভাই-বোন কতজন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ভাই-বোন কে কি করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">চাচা মামাদের পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">যৌথ পরিবার</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পারিবারিক বিষয়ে আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FooterSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FooterSection.tsx

import { Card, CardContent } from "@/components/ui/card";
import Link from "next/link";
export default function FooterSection() {
  return (
    <div className="py-12 flex flex-col items-center justify-center">
      <div className="text-4xl text-center text-[#004972] mb-4">
        বায়োডাটা পছন্দ হয়েছে?
      </div>
      <div className="text-md text-center text-black mb-8">
        আপনি আগ্রহী হলে আপনার জন্য ৩টি অপশন রয়েছে।
      </div>
      <div className="max-w-6xl flex space-x-6 text-black">
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                প্রাথমিক প্রস্তাব পাঠিয়ে আপনার প্রতি আগ্রহী কিনা জানতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                প্রাথমিক প্রস্তাব পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                ছবি দেখার জন্য অনুরোধ পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                যোগাযোগ তথ্য দেখুন
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        {/* <div>পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন</div>
        <div>সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন</div> */}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/GeneralInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function GeneralInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          সাধারণ তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জন্ম তারিখ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অবিবাহিত</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'১"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ওজন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">রক্তের গ্রুপ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">AB−</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জাতীয়তা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বাংলাদেশী, ফরেইন সিটিজেন
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSection.tsx

import male from "@/assets/images/male-5.svg";
import { Card, CardContent } from "@/components/ui/card";
import {
  CircleChevronDown,
  Copy,
  Heart,
  IdCard,
  Mail,
  Send,
} from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import HeaderShortBio from "./HeaderShortBio";
import HeaderSpousePreferenceRequierment from "./HeaderSpousePreferenceRequierment";

export default function HeaderSection() {
  return (
    <div className="py-12 flex justify-center bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <div className="min-w-7xl flex space-x-8">
        <div className="w-1/4 flex flex-col space-y-8">
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col items-center space-y-4">
                <div className="w-full flex items-start justify-between">
                  <div className="w-1 text-[#00b754] text-md font-semibold">
                    Verified
                  </div>
                  <Image
                    src={male}
                    alt="Male"
                    width={100}
                    height={40}
                    priority
                  />
                  <div className="w-1"></div>
                </div>

                <div className="text-lg">
                  বায়োডাটা কোড: <span className="font-semibold">SNM-392</span>
                </div>

                <div className="flex space-x-4 border border-gray-400 rounded-xl p-4">
                  <Heart className="h-6 w-6" />
                  <IdCard className="h-6 w-6" />
                  <Copy className="h-6 w-6 rotate-90" />
                  <Mail className="h-6 w-6" />
                  <CircleChevronDown className="h-6 w-6 text-[#b52d1f]" />
                </div>
              </div>
            </CardContent>
          </Card>
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col space-y-4">
                <div className="text-xl font-medium text-center mb-4 text-[#b52d1f]">
                  আপনি আগ্রহী?
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col">
                    <div>প্রাথমিক প্রস্তাব পাঠান</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col space-x-2">
                    <div>অভিভাবকের যোগাযোগ তথ্য দেখুন</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <Link
                  href="/tutorial"
                  className="text-xs text-center hover:underline text-blue-300"
                >
                  (বিস্তারিত জানুন)
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className="w-3/4 flex space-x-8">
          <HeaderShortBio />
          <HeaderSpousePreferenceRequierment />
        </div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderShortBio.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderShortBio.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderShortBio() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          পাত্রের সংক্ষিপ্ত বিবরণ
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSpousePreferenceRequierment.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSpousePreferenceRequierment.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderSpousePreferenceRequierment() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          যেমন জীবনসঙ্গী আশা করেন
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/MarriageInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function MarriageInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          বিয়ে সংক্রান্ত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?</div> */}
          <div className="w-1/2">
            বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">
            বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?
          </div> */}
          <div className="w-1/2">
            আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?</div> */}
          <div className="w-1/2">
            যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* Male only */}
          <div className="w-1/2">
            বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে
            পারবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক বা উপহার
            বা অর্থ আশা করবেন কিনা?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পাত্রপক্ষ/পাত্রীপক্ষ অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিয়ে সংক্রান্ত আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PersonalInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PersonalInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ব্যক্তিগত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি দাড়ি পছন্দ?/দাড়ি রেখেছেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পরতে পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মানসিক বা শারীরিক কোনো রোগ আছে কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের কিছু গুণাবলী চিহ্নিত করুন</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শান্ত-শিষ্ট, ধৈর্যশীল, ইমোশনাল
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            আমি একজন সমাজ সেবক, আমি বন্ধ্যা-ইনফার্টিলিটি
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের মতো করে নিজের সম্পর্কে কিছু লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            রাজনীতি নিয়ে আপনার দৃষ্টিভঙ্গি কি? এর সাথে যুক্ত থাকলে বিস্তারিত
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অবসর সময়ে কি করতে পছন্দ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">সামাজিক বা ধর্মীয় কোনো কাজে যুক্ত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কিছু বইয়ের নাম (যদি পড়ে থাকেন)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">দৈনন্দিন খাবারে কি কি পছন্দ এবং অপছন্দ?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কয়েকজন ব্যক্তিত্বের নাম যাদেরকে নিয়মিত ফলো করেন
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার জীবনের লক্ষ্য কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন কোন সোসাল মিডিয়া ব্যবহার করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার আগ্রহ ও শখ কি কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div> */}
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PrimaryInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PrimaryInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          প্রাথমিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটার ধরন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটা কার জন্য তৈরী করছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/ReligiousInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function ReligiousInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ধর্মীয় লাইফস্টাইল
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি কি আপনার জীবনকে পরিপূর্ণ ভাবে ইসলামিক বিধি-বিধান অনুযায়ী
            পরিচালনা করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            জেনারেল/নন-প্রাক্টিসিং
          </div>
        </div>

        {/* Non Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় কোন মতাদর্শ মেনে চলেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সুন্নি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন মাজহাব / মানহাজ অনুসরণ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সালাফি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">প্রতিদিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Try Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি নামাজ কাযা হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Common */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু করেছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Male */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">টাখনুর উপরে কাপড় পরেন কিনা?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Female */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কি নিকাব সহ পর্দা করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/SpousePreferenceInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function SpousePreferenceInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          যেমন জীবনসঙ্গী আশা করেন
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত বয়স:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'২"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিশেষ শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মুহাদ্দিসা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            অবিবাহিত, ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেন, শর্ট ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় লাইফস্টাইল:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আল্লাহ যাদেরকে গাঢ় ত্বক বা কালো বর্ণ দিয়েছেন, এরকম পাত্রীর প্রতি
            আপনি আগ্রহী?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div> */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শহরে বসবাসকারী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageAppliedFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageAppliedFilters.tsx

import { X } from "lucide-react";

export default function BiodatasPageAppliedFilters() {
  const appliedFilters = [
    {
      id: 1,
      name: "বায়োডাটার ধরন",
      selected: [
        {
          id: 1,
          name: "পুরুষ",
        },
      ],
    },
    {
      id: 2,
      name: "বৈবাহিক অবস্থা",
      selected: [
        {
          id: 1,
          name: "অবিবাহিত",
        },
        {
          id: 2,
          name: "বিবাহিত",
        },
      ],
    },
  ];

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">আপনি বাছাই করেছেন</div>
      </div>
      <div className="flex flex-col space-y-4">
        {appliedFilters.length > 0 &&
          appliedFilters.map((x) => (
            <div
              key={x.id}
              className="flex flex-col space-y-3 text-black text-xs border border-gray-300 rounded-xl px-6 py-2"
            >
              {x.selected.length > 0 &&
                x.selected.map((y) => (
                  <div key={y.id} className="flex justify-between items-center">
                    <div>{y.name}</div>
                    <X className="text-[#e25a6f] w-4 h-4" />
                  </div>
                ))}
            </div>
          ))}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageCard.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageCard.tsx

"use client";
import male from "@/assets/images/male-5.svg";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Heart } from "lucide-react";
import Image from "next/image";
import { useRouter } from "next/navigation";

export interface BiodatasPageCardProps {
  id: number;
}

export default function BioCard({ id }: BiodatasPageCardProps) {
  const router = useRouter();

  const handleOnClick = () => {
    router.push("/biodatas/asd");
  };
  return (
    <Card
      key={id}
      className="border-none overflow-hidden bg-gradient-to-t from-[#e6f2ff] to-[#fff0f6]"
    >
      <CardContent className="p-4">
        <div className="flex justify-between items-start mb-4">
          <div className="w-1/3">
            <Heart className="w-8 h-8 text-[#E25A6F]" fill="#E25A6F" />
          </div>
          <div className="w-1/3 flex items-center justify-center">
            <Image src={male} alt="Male" width={80} height={40} priority />
          </div>
          <div className="w-1/3 flex flex-col items-end space-y-2">
            <Badge className="text-[#00b754]">Verified</Badge>
            <Badge className="text-[#016ca7]">Seen</Badge>
          </div>
        </div>

        <div className="text-center mb-4 flex items-center justify-center">
          <div className="text-black bg-[#fcfafd] p-3 rounded-md">
            বায়োডাটা নং: 43527
          </div>
        </div>

        <div className="space-y-3 text-black">
          <div className="flex justify-between">
            <span>বৈবাহিক অবস্থা:</span>
            <span>অবিবাহিত</span>
          </div>
          <div className="flex justify-between">
            <span>জন্মসন:</span>
            <span>১৯৯০</span>
          </div>
          <div className="flex justify-between">
            <span>উচ্চতা:</span>
            <span>৫'৩০"</span>
          </div>
          <div className="flex justify-between">
            <span>স্থায়ী ঠিকানা:</span>
            <span>BSC in EEE</span>
          </div>
          <div className="flex justify-between">
            <span>পেশা:</span>
            <span>ইঞ্জিনিয়ার</span>
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button
          className="w-full text-white bg-[#E25A6F]  hover:bg-[#D14A5F]"
          onClick={handleOnClick}
        >
          বায়োডাটা দেখুন
        </Button>
      </CardFooter>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageFilters.tsx

"use client";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { useState } from "react";

export default function BiodatasPageFilters() {
  const [ageRange, setAgeRange] = useState<number[]>([18, 80]);
  const [heightRange, setHeightRange] = useState<number[]>([36, 84]);

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">ফিল্টার করুন</div>
      </div>
      <div className="flex justify-center mb-4">
        <button className="mr-[-1rem] rounded-xl py-3 text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-[#989898] pr-4 pl-6 border border-[#989898]">
          আমাকে খুঁজছে
        </button>
        {/* <button className="mr-[-1rem] rounded-xl py-3 text-[#989898] pl-4 pr-6 border border-[#989898]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমাকে খুঁজছে
        </button> */}
      </div>
      <form className="flex flex-col space-y-2">
        <Accordion type="multiple" className="flex flex-col space-y-2 mb-2">
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বায়োডাটার ধরন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বায়োডাটার ধরন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বৈবাহিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বৈবাহিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বয়স"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বয়স
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{ageRange[0]}</div>
                <Slider
                  value={ageRange}
                  onValueChange={setAgeRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{ageRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="উচ্চতা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              উচ্চতা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{heightRange[0]}</div>
                <Slider
                  value={heightRange}
                  onValueChange={setHeightRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{heightRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="গাত্রবর্ণ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              গাত্রবর্ণ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="স্থায়ী ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              স্থায়ী ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বর্তমান ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বর্তমান ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা মাইগ্রেশন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা মাইগ্রেশন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পেশা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পেশা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পরিবারের আর্থসামাজিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পরিবারের আর্থসামাজিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="মাজহাব/মাসলাহ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              মাজহাব/মাসলাহ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="রক্তের গ্রুপ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              রক্তের গ্রুপ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বিশেষ অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বিশেষ অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </form>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\SearchByBiodataNo.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/SearchByBiodataNo.tsx

import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Search } from "lucide-react";

export default function BiodatasPageSearchByBiodataNo() {
  return (
    <form className="flex items-center space-x-4">
      <div className="w-32">
        <Select>
          <SelectTrigger className="text-[#1f4f69]">
            <SelectValue placeholder="SNM" />
          </SelectTrigger>
          <SelectContent className="bg-white text-[#1f4f69]">
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="all"
            >
              SNM
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="male"
            >
              পুরুষ
            </SelectItem>
            <SelectItem
              className="focus:bg-[#E25A6F] focus:text-white"
              value="female"
            >
              নারী
            </SelectItem>
          </SelectContent>
        </Select>
      </div>

      <div className="relative w-64">
        <div className="space-y-2">
          <Input
            className="w-full px-4 py-2 border rounded-md text-[#1f4f69] selection:bg-[#E25A6F] selection:text-white"
            id="biodataNo"
            type="text"
            placeholder="বায়োডাটা নং"
          />
        </div>
        <button className="absolute right-3 top-1/2 transform -translate-y-1/2">
          <Search className="w-4 h-4 text-gray-400" />
        </button>
      </div>
    </form>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageCard.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageCard.tsx

"use client";
import male from "@/assets/images/male-5.svg";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardFooter } from "@/components/ui/card";
import { Heart } from "lucide-react";
import Image from "next/image";
import { useRouter } from "next/navigation";

export interface BiodatasPageCardProps {
  id: number;
}

export default function BioCard({ id }: BiodatasPageCardProps) {
  const router = useRouter();

  const handleOnClick = () => {
    router.push("/biodatas/asd");
  };
  return (
    <Card
      key={id}
      className="border-none overflow-hidden bg-gradient-to-t from-[#e6f2ff] to-[#fff0f6]"
    >
      <CardContent className="p-4">
        <div className="flex justify-between items-start mb-4">
          <div className="w-1/3">
            <Heart className="w-8 h-8 text-[#E25A6F]" fill="#E25A6F" />
          </div>
          <div className="w-1/3 flex items-center justify-center">
            <Image src={male} alt="Male" width={80} height={40} priority />
          </div>
          <div className="w-1/3 flex flex-col items-end space-y-2">
            <Badge className="text-[#00b754]">Verified</Badge>
            <Badge className="text-[#016ca7]">Seen</Badge>
          </div>
        </div>

        <div className="text-center mb-4 flex items-center justify-center">
          <div className="text-black bg-[#fcfafd] p-3 rounded-md">
            বায়োডাটা নং: 43527
          </div>
        </div>

        <div className="space-y-3 text-black">
          <div className="flex justify-between">
            <span>বৈবাহিক অবস্থা:</span>
            <span>অবিবাহিত</span>
          </div>
          <div className="flex justify-between">
            <span>জন্মসন:</span>
            <span>১৯৯০</span>
          </div>
          <div className="flex justify-between">
            <span>উচ্চতা:</span>
            <span>৫'৩০"</span>
          </div>
          <div className="flex justify-between">
            <span>স্থায়ী ঠিকানা:</span>
            <span>BSC in EEE</span>
          </div>
          <div className="flex justify-between">
            <span>পেশা:</span>
            <span>ইঞ্জিনিয়ার</span>
          </div>
        </div>
      </CardContent>
      <CardFooter>
        <Button
          className="w-full text-white bg-[#E25A6F]  hover:bg-[#D14A5F]"
          onClick={handleOnClick}
        >
          বায়োডাটা দেখুন
        </Button>
      </CardFooter>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageFilters.tsx

"use client";

import {
  Accordion,
  AccordionContent,
  AccordionItem,
  AccordionTrigger,
} from "@/components/ui/accordion";
import { Checkbox } from "@/components/ui/checkbox";
import { Label } from "@/components/ui/label";
import { Slider } from "@/components/ui/slider";
import { useState } from "react";

export default function BiodatasPageFilters() {
  const [ageRange, setAgeRange] = useState<number[]>([18, 80]);
  const [heightRange, setHeightRange] = useState<number[]>([36, 84]);

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">ফিল্টার করুন</div>
      </div>
      <div className="flex justify-center mb-4">
        <button className="mr-[-1rem] rounded-xl py-3 text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-[#989898] pr-4 pl-6 border border-[#989898]">
          আমাকে খুঁজছে
        </button>
        {/* <button className="mr-[-1rem] rounded-xl py-3 text-[#989898] pl-4 pr-6 border border-[#989898]">
          আমি খুঁজছি
        </button>
        <button className="py-3 rounded-xl text-white px-4 z-10 bg-gradient-to-r from-[#e25a6f] to-[#016ca7]">
          আমাকে খুঁজছে
        </button> */}
      </div>
      <form className="flex flex-col space-y-2">
        <Accordion type="multiple" className="flex flex-col space-y-2 mb-2">
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বায়োডাটার ধরন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বায়োডাটার ধরন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বৈবাহিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বৈবাহিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বয়স"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বয়স
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{ageRange[0]}</div>
                <Slider
                  value={ageRange}
                  onValueChange={setAgeRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{ageRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="উচ্চতা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              উচ্চতা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex">
                <div className="text-[#1f4f69]">{heightRange[0]}</div>
                <Slider
                  value={heightRange}
                  onValueChange={setHeightRange}
                  min={18}
                  max={80}
                  step={1}
                  className="w-full"
                />
                <div className="text-[#1f4f69]">{heightRange[1]}</div>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="গাত্রবর্ণ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              গাত্রবর্ণ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="স্থায়ী ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              স্থায়ী ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বর্তমান ঠিকানা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বর্তমান ঠিকানা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা মাইগ্রেশন"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা মাইগ্রেশন
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পেশা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পেশা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="শিক্ষা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              শিক্ষা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="পরিবারের আর্থসামাজিক অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              পরিবারের আর্থসামাজিক অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="মাজহাব/মাসলাহ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              মাজহাব/মাসলাহ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="রক্তের গ্রুপ"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              রক্তের গ্রুপ
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
          <AccordionItem
            className="border border-gray-300 rounded-xl px-4"
            value="বিশেষ অবস্থা"
          >
            <AccordionTrigger className="hover:no-underline text-[#1f4f69]">
              বিশেষ অবস্থা
            </AccordionTrigger>
            <AccordionContent className="bg-white text-[#1f4f69] space-y-1">
              <div className="flex items-center space-x-2">
                <Checkbox id="male" />
                <Label htmlFor="male">পুরুষ</Label>
              </div>
              <div className="flex items-center space-x-2">
                <Checkbox id="female" />
                <Label htmlFor="female">নারী</Label>
              </div>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </form>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\listPageComponentes\BiodatasPageAppliedFilters.tsx
// --------------------
// File: src/app/(main)/biodatas/listPageComponentes/BiodatasPageAppliedFilters.tsx

import { X } from "lucide-react";

export default function BiodatasPageAppliedFilters() {
  const appliedFilters = [
    {
      id: 1,
      name: "বায়োডাটার ধরন",
      selected: [
        {
          id: 1,
          name: "পুরুষ",
        },
      ],
    },
    {
      id: 2,
      name: "বৈবাহিক অবস্থা",
      selected: [
        {
          id: 1,
          name: "অবিবাহিত",
        },
        {
          id: 2,
          name: "বিবাহিত",
        },
      ],
    },
  ];

  return (
    <div className="w-72 bg-white ml-4 px-4 space-y-2">
      <div className="flex items-center justify-center text-center text-[#1f4f69] pb-2">
        <div className="pb-1 border-b border-[#1f4f69]">আপনি বাছাই করেছেন</div>
      </div>
      <div className="flex flex-col space-y-4">
        {appliedFilters.length > 0 &&
          appliedFilters.map((x) => (
            <div
              key={x.id}
              className="flex flex-col space-y-3 text-black text-xs border border-gray-300 rounded-xl px-6 py-2"
            >
              {x.selected.length > 0 &&
                x.selected.map((y) => (
                  <div key={y.id} className="flex justify-between items-center">
                    <div>{y.name}</div>
                    <X className="text-[#e25a6f] w-4 h-4" />
                  </div>
                ))}
            </div>
          ))}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/AddressInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function AddressInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ঠিকানা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোথায় বেড়ে উঠেছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\EducationAndOccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/EducationAndOccupationInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function EducationAndOccupationInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          শিক্ষাগত যোগ্যতা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষার ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">জেনারেল</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এস.এস.সি/দাখিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এস.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এইচ.এস.সি/আলিম/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এইচ.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(ডিপ্লোমা):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">ডিপ্লোমা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(অনার্স/ফাজিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অনার্স</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(মাস্টার্স/কামিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>

        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা নিয়ে বিস্তারিত লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাসিক আয়:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FamilyInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function FamilyInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          পারিবারিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পিতা-মাতা উভয়েই জীবিত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনারা ভাই-বোন কতজন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ভাই-বোন কে কি করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">চাচা মামাদের পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">যৌথ পরিবার</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পারিবারিক বিষয়ে আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FooterSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FooterSection.tsx

import { Card, CardContent } from "@/components/ui/card";
import Link from "next/link";
export default function FooterSection() {
  return (
    <div className="py-12 flex flex-col items-center justify-center">
      <div className="text-4xl text-center text-[#004972] mb-4">
        বায়োডাটা পছন্দ হয়েছে?
      </div>
      <div className="text-md text-center text-black mb-8">
        আপনি আগ্রহী হলে আপনার জন্য ৩টি অপশন রয়েছে।
      </div>
      <div className="max-w-6xl flex space-x-6 text-black">
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                প্রাথমিক প্রস্তাব পাঠিয়ে আপনার প্রতি আগ্রহী কিনা জানতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                প্রাথমিক প্রস্তাব পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                ছবি দেখার জন্য অনুরোধ পাঠান
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        <Card className="w-1/3 border-gray-200 bg-white text-black p-2">
          <CardContent className="px-6 py-4">
            <div className="flex flex-col items-center space-y-4">
              <div className="min-h-22 text-xl text-center">
                সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন
              </div>
              <div className="bg-[#c65a5a] text-white rounded-2xl px-6 py-4">
                যোগাযোগ তথ্য দেখুন
              </div>
              <Link
                href="/tutorial"
                className="text-xs hover:underline text-[#c65a5a]"
              >
                (বিস্তারিত জানুন)
              </Link>
            </div>
          </CardContent>
        </Card>
        {/* <div>পাত্র-পাত্রীর অনুমোদন সাপেক্ষে ছবি দেখতে পারেন</div>
        <div>সরাসরি অভিভাবকের যোগাযোগ তথ্য দেখতে পারেন</div> */}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\GeneralInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/GeneralInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function GeneralInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          সাধারণ তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জন্ম তারিখ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অবিবাহিত</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'১"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ওজন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">রক্তের গ্রুপ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">AB−</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">জাতীয়তা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বাংলাদেশী, ফরেইন সিটিজেন
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSection.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSection.tsx

import male from "@/assets/images/male-5.svg";
import { Card, CardContent } from "@/components/ui/card";
import {
  CircleChevronDown,
  Copy,
  Heart,
  IdCard,
  Mail,
  Send,
} from "lucide-react";
import Image from "next/image";
import Link from "next/link";
import HeaderShortBio from "./HeaderShortBio";
import HeaderSpousePreferenceRequierment from "./HeaderSpousePreferenceRequierment";

export default function HeaderSection() {
  return (
    <div className="py-12 flex justify-center bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <div className="min-w-7xl flex space-x-8">
        <div className="w-1/4 flex flex-col space-y-8">
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col items-center space-y-4">
                <div className="w-full flex items-start justify-between">
                  <div className="w-1 text-[#00b754] text-md font-semibold">
                    Verified
                  </div>
                  <Image
                    src={male}
                    alt="Male"
                    width={100}
                    height={40}
                    priority
                  />
                  <div className="w-1"></div>
                </div>

                <div className="text-lg">
                  বায়োডাটা কোড: <span className="font-semibold">SNM-392</span>
                </div>

                <div className="flex space-x-4 border border-gray-400 rounded-xl p-4">
                  <Heart className="h-6 w-6" />
                  <IdCard className="h-6 w-6" />
                  <Copy className="h-6 w-6 rotate-90" />
                  <Mail className="h-6 w-6" />
                  <CircleChevronDown className="h-6 w-6 text-[#b52d1f]" />
                </div>
              </div>
            </CardContent>
          </Card>
          <Card className="bg-white text-black border-none rounded-4xl">
            <CardContent className="pt-6">
              <div className="flex flex-col space-y-4">
                <div className="text-xl font-medium text-center mb-4 text-[#b52d1f]">
                  আপনি আগ্রহী?
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col">
                    <div>প্রাথমিক প্রস্তাব পাঠান</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <div className="flex items-center justify-between">
                  <div className="flex flex-col space-x-2">
                    <div>অভিভাবকের যোগাযোগ তথ্য দেখুন</div>
                    <div className="text-xs text-[#e25a6f]">
                      ১টি টোকেন খরচ হবে
                    </div>
                  </div>
                  <div className="bg-[#e25a6f] px-4 py-2 rounded-xl">
                    <Send
                      className="h-6 w-6"
                      fill="white"
                      stroke="#e25a6f"
                      strokeOpacity={0.5}
                    />
                  </div>
                </div>
                <Link
                  href="/tutorial"
                  className="text-xs text-center hover:underline text-blue-300"
                >
                  (বিস্তারিত জানুন)
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
        <div className="w-3/4 flex space-x-8">
          <HeaderShortBio />
          <HeaderSpousePreferenceRequierment />
        </div>
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderShortBio.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderShortBio.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderShortBio() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          পাত্রের সংক্ষিপ্ত বিবরণ
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderSpousePreferenceRequierment.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderSpousePreferenceRequierment.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderSpousePreferenceRequierment() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          যেমন জীবনসঙ্গী আশা করেন
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/MarriageInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function MarriageInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          বিয়ে সংক্রান্ত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?</div> */}
          <div className="w-1/2">
            বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">
            বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?
          </div> */}
          <div className="w-1/2">
            আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?</div> */}
          <div className="w-1/2">
            যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* Male only */}
          <div className="w-1/2">
            বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে
            পারবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক বা উপহার
            বা অর্থ আশা করবেন কিনা?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পাত্রপক্ষ/পাত্রীপক্ষ অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিয়ে সংক্রান্ত আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PersonalInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PersonalInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ব্যক্তিগত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি দাড়ি পছন্দ?/দাড়ি রেখেছেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পরতে পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মানসিক বা শারীরিক কোনো রোগ আছে কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের কিছু গুণাবলী চিহ্নিত করুন</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শান্ত-শিষ্ট, ধৈর্যশীল, ইমোশনাল
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            আমি একজন সমাজ সেবক, আমি বন্ধ্যা-ইনফার্টিলিটি
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের মতো করে নিজের সম্পর্কে কিছু লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            রাজনীতি নিয়ে আপনার দৃষ্টিভঙ্গি কি? এর সাথে যুক্ত থাকলে বিস্তারিত
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অবসর সময়ে কি করতে পছন্দ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">সামাজিক বা ধর্মীয় কোনো কাজে যুক্ত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কিছু বইয়ের নাম (যদি পড়ে থাকেন)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">দৈনন্দিন খাবারে কি কি পছন্দ এবং অপছন্দ?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কয়েকজন ব্যক্তিত্বের নাম যাদেরকে নিয়মিত ফলো করেন
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার জীবনের লক্ষ্য কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন কোন সোসাল মিডিয়া ব্যবহার করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার আগ্রহ ও শখ কি কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div> */}
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PrimaryInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PrimaryInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          প্রাথমিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটার ধরন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটা কার জন্য তৈরী করছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/ReligiousInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function ReligiousInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ধর্মীয় লাইফস্টাইল
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি কি আপনার জীবনকে পরিপূর্ণ ভাবে ইসলামিক বিধি-বিধান অনুযায়ী
            পরিচালনা করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            জেনারেল/নন-প্রাক্টিসিং
          </div>
        </div>

        {/* Non Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় কোন মতাদর্শ মেনে চলেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সুন্নি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন মাজহাব / মানহাজ অনুসরণ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সালাফি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">প্রতিদিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Try Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি নামাজ কাযা হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Common */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু করেছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Male */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">টাখনুর উপরে কাপড় পরেন কিনা?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Female */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কি নিকাব সহ পর্দা করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/SpousePreferenceInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function SpousePreferenceInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          যেমন জীবনসঙ্গী আশা করেন
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত বয়স:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'২"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিশেষ শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মুহাদ্দিসা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            অবিবাহিত, ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেন, শর্ট ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় লাইফস্টাইল:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আল্লাহ যাদেরকে গাঢ় ত্বক বা কালো বর্ণ দিয়েছেন, এরকম পাত্রীর প্রতি
            আপনি আগ্রহী?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div> */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শহরে বসবাসকারী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\AddressInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/AddressInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function AddressInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ঠিকানা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">স্থায়ী শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান জেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান উপজেলা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান বাড়ির ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">বাংলাদেশ</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান দেশ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান স্টেট(যদি থাকে):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বর্তমান শহর:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেনশিপ
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোথায় বেড়ে উঠেছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\EducationAndOccupationInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/EducationAndOccupationInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function EducationAndOccupationInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          শিক্ষাগত যোগ্যতা
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষার ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">জেনারেল</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এস.এস.সি/দাখিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এস.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(এইচ.এস.সি/আলিম/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">এইচ.এস.সি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(ডিপ্লোমা):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">ডিপ্লোমা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(অনার্স/ফাজিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">অনার্স</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ডিগ্রীর নাম(মাস্টার্স/কামিল/সমমান):</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>

        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা নিয়ে বিস্তারিত লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            বেসরকারি চাকরিজীবী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাসিক আয়:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মাস্টার্স</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\FamilyInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/FamilyInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function FamilyInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          পারিবারিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার পিতা-মাতা উভয়েই জীবিত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনারা ভাই-বোন কতজন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ভাই-বোন কে কি করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">চাচা মামাদের পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের ধরণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">যৌথ পরিবার</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি সহ আপনার পরিবারের নিজস্ব বাড়িতে থাকা হয় নাকি ভাড়া বাড়িতে?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনাদের বাড়ি-ঘরের বা সম্পত্তির হাল্কা বিবরন দিন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পারিবারিক বিষয়ে আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\HeaderShortBio.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/HeaderShortBio.tsx

import { Card, CardContent, CardHeader } from "@/components/ui/card";

export default function HeaderShortBio() {
  return (
    <Card className="w-1/2 bg-white text-black border-none rounded-4xl">
      <CardHeader className="flex items-center">
        <div className="text-lg text-white bg-[#016ca7] p-4 rounded-xl">
          পাত্রের সংক্ষিপ্ত বিবরণ
        </div>
      </CardHeader>
      <CardContent>
        <div className="flex flex-col space-y-2">
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বৈবাহিক অবস্থা</div>
            <div>অবিবাহিত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জন্মসন</div>
            <div>১৯৯০</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>উচ্চতা</div>
            <div>৫'১০"</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>গাত্রবর্ণ</div>
            <div>উজ্জ্বল শ্যামলা</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>শিক্ষা</div>
            <div>BSC in EEE</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পেশা</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জেলা</div>
            <div>রাজশাহী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ওজন</div>
            <div>৬৫ কেজি</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>রক্তের গ্রুপ</div>
            <div>B+</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>পরিবার</div>
            <div>মধ্যবিত্ত</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>জাতীয়তা</div>
            <div>বাংলাদেশী</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>ধর্মীয় লাইফস্টাইল</div>
            <div>জেনারেল/নন-প্রাক্টিসিং</div>
          </div>
          <div className="flex justify-between text-sm pb-2 border-b border-gray-200">
            <div>বিশেষ চাওয়া</div>
            <div>ইঞ্জিনিয়ার</div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\MarriageInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/MarriageInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function MarriageInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          বিয়ে সংক্রান্ত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অভিভাবক আপনার বিয়েতে রাজি আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে পড়াশোনা করতে দিতে চান?</div> */}
          <div className="w-1/2">
            বিয়ের পর পড়াশোনা চালিয়ে যেতে চান? (ছাত্রী হলে)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">
            বিয়ের পর স্ত্রী চাইলে চাকরি বা ব্যবসা করতে দিবেন?
          </div> */}
          <div className="w-1/2">
            আপনি কি বিয়ের পর চাকরি বা ব্যবসা করতে ইচ্ছুক?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে
          </div>
        </div>
        <div className="flex items-center space-x-2">
          {/* <div className="w-1/2">বিয়ের পর স্ত্রীকে নিয়ে কোথায় থাকবেন?</div> */}
          <div className="w-1/2">
            যৌথ বা একক পরিবারে থাকার ব্যাপারে আপনি কোনটি পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          {/* Male only */}
          <div className="w-1/2">
            বাড়িতে বা বাহিরে স্ত্রী পর্দা করতে চাইলে পর্দার ব্যবস্থা রাখতে
            পারবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বিয়ে উপলক্ষে আপনি বা আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক বা উপহার
            বা অর্থ আশা করবেন কিনা?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পাত্রপক্ষ/পাত্রীপক্ষ অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিয়ে সংক্রান্ত আরো কিছু:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PersonalInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PersonalInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PersonalInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ব্যক্তিগত তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি দাড়ি পছন্দ?/দাড়ি রেখেছেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            বাড়ির বাহিরে সাধারণত কী ধরণের পোশাক পরতে পছন্দ করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নাটক/সিনেমা/সিরিয়াল/গান/খেলা এসবের কোনটি দেখেন বা শুনেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মানসিক বা শারীরিক কোনো রোগ আছে কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের কিছু গুণাবলী চিহ্নিত করুন</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শান্ত-শিষ্ট, ধৈর্যশীল, ইমোশনাল
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            নারী-পুরুষ সমঅধীকার বিষয়টাকে আপনি কিভাবে দেখেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            সমকামিতা বা LGBTQ সম্পর্কে আপনার ধারণা কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার ক্ষেত্রে প্রযোজ্য এমন বিশেষ কোনো অবস্থা বা কার্যক্রম:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            আমি একজন সমাজ সেবক, আমি বন্ধ্যা-ইনফার্টিলিটি
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">নিজের মতো করে নিজের সম্পর্কে কিছু লিখুন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            রাজনীতি নিয়ে আপনার দৃষ্টিভঙ্গি কি? এর সাথে যুক্ত থাকলে বিস্তারিত
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">অবসর সময়ে কি করতে পছন্দ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">সামাজিক বা ধর্মীয় কোনো কাজে যুক্ত আছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কিছু বইয়ের নাম (যদি পড়ে থাকেন)
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">দৈনন্দিন খাবারে কি কি পছন্দ এবং অপছন্দ?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনার পছন্দের কয়েকজন ব্যক্তিত্বের নাম যাদেরকে নিয়মিত ফলো করেন
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার জীবনের লক্ষ্য কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন কোন সোসাল মিডিয়া ব্যবহার করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার আগ্রহ ও শখ কি কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div> */}
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\PrimaryInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/PrimaryInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function PrimaryInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          প্রাথমিক তথ্য
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটার ধরন:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পাত্রের বায়োডাটা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বায়োডাটা কার জন্য তৈরী করছেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পাত্র/পাত্রীর সম্পূর্ণ নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পিতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাতার নাম:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\ReligiousInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/ReligiousInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function ReligiousInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          ধর্মীয় লাইফস্টাইল
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আপনি কি আপনার জীবনকে পরিপূর্ণ ভাবে ইসলামিক বিধি-বিধান অনুযায়ী
            পরিচালনা করেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            জেনারেল/নন-প্রাক্টিসিং
          </div>
        </div>

        {/* Non Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় কোন মতাদর্শ মেনে চলেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সুন্নি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কোন মাজহাব / মানহাজ অনুসরণ করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">সালাফি</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">প্রতিদিন পাঁচ ওয়াক্ত নামাজ পড়া হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Try Practicing */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনার কি নামাজ কাযা হয়?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Common */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">মাহরাম/গাইরে-মাহরাম মেনে চলেন কি?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস কি?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু করেছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Male */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">টাখনুর উপরে কাপড় পরেন কিনা?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>

        {/* Practicing Female */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কি নিকাব সহ পর্দা করেন?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\viewBioDataComponents\SpousePreferenceInfo.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/viewBioDataComponents/SpousePreferenceInfo.tsx

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

export default function SpousePreferenceInfo() {
  return (
    <Card className="border-gray-200 bg-[#fcfcfc] text-black">
      <CardHeader>
        <CardTitle className="text-[#004972] text-center font-medium">
          যেমন জীবনসঙ্গী আশা করেন
        </CardTitle>
      </CardHeader>
      <CardContent className="px-6 py-4 space-y-2">
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত বয়স:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত গাত্রবর্ণ:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            উজ্জ্বল ফর্সা
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">কাঙ্খিত উচ্চতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">৫'২"</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বিশেষ শিক্ষাগত যোগ্যতা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">মুহাদ্দিসা</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ঠিকানা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">বৈবাহিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            অবিবাহিত, ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">আপনি কোন কোন বিশেষ ক্যাটাগরিতে আগ্রহী?</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            ফরেইন সিটিজেন, শর্ট ডিভোর্সড
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">ধর্মীয় লাইফস্টাইল:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পেশা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">নিজের জন্য</div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">পরিবারের অর্থনৈতিক অবস্থা:</div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            নিম্ন মধ্যবিত্ত
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            আল্লাহ যাদেরকে গাঢ় ত্বক বা কালো বর্ণ দিয়েছেন, এরকম পাত্রীর প্রতি
            আপনি আগ্রহী?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div>
        {/* <div className="flex items-center space-x-2">
          <div className="w-1/2">
            মাসনা বা দ্বিতীয় বিবাহে আগ্রহী এমন পাত্রের প্রতি আগ্রহী আছেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            দেখা যেতে পারে
          </div>
        </div> */}
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গী নির্বাচনে শহর নাকি গ্রাম, কোনটিকে প্রাধান্য দিবেন?
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            শহরে বসবাসকারী
          </div>
        </div>
        <div className="flex items-center space-x-2">
          <div className="w-1/2">
            জীবনসঙ্গীর যে বৈশিষ্ট্য বা গুণাবলী আশা করেন:
          </div>
          <div className="w-1/2 pl-2 border-l border-gray-200">
            পূর্ণ ধার্মিক/ প্র্যাক্টিসিং
          </div>
        </div>
      </CardContent>
    </Card>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\app\(main)\biodatas\[id]\page.tsx
// --------------------
// File: src/app/(main)/biodatas/[id]/page.tsx
import { Tabs, TabsList, TabsTrigger } from "@/components/ui/tabs";
import AddressInfo from "./viewBioDataComponents/AddressInfo";
import EducationAndOccupationInfo from "./viewBioDataComponents/EducationAndOccupationInfo";
import FamilyInfo from "./viewBioDataComponents/FamilyInfo";
import FooterSection from "./viewBioDataComponents/FooterSection";
import GeneralInfo from "./viewBioDataComponents/GeneralInfo";
import HeaderSection from "./viewBioDataComponents/HeaderSection";
import MarriageInfo from "./viewBioDataComponents/MarriageInfo";
import PersonalInfo from "./viewBioDataComponents/PersonalInfo";
import PrimaryInfo from "./viewBioDataComponents/PrimaryInfo";
import ReligiousInfo from "./viewBioDataComponents/ReligiousInfo";
import SpousePreferenceInfo from "./viewBioDataComponents/SpousePreferenceInfo";

export default function BiodataPage() {
  const tabs = [
    "প্রাথমিক তথ্য",
    "সাধারণ তথ্য",
    "ঠিকানা",
    "শিক্ষা ও পেশা",
    "পারিবারিক তথ্য",
    "ধর্মীয় লাইফস্টাইল",
    "ব্যক্তিগত তথ্য",
    "বিয়ে সংক্রান্ত তথ্য",
    "যেমন জীবনসঙ্গী আশা করেন",
  ];

  return (
    <>
      <HeaderSection />
      <div className="py-12 flex flex-col items-center justify-center space-y-6">
        <div className="text-4xl text-center text-black">সম্পূর্ণ বায়োডাটা</div>
        <Tabs defaultValue="ঠিকানা" className="max-w-7xl">
          <TabsList className="flex flex-wrap h-auto space-x-2 bg-[#f6f6f6] rounded-2xl p-2">
            {tabs.map((tab) => (
              <TabsTrigger
                key={tab}
                value={tab}
                className="data-[state=active]:bg-[#e25a6f] data-[state=active]:text-white text-[#004972] rounded-full px-4 py-2"
              >
                {tab}
              </TabsTrigger>
            ))}
          </TabsList>
        </Tabs>

        <div className="w-full max-w-6xl space-y-6">
          <PrimaryInfo />
          <GeneralInfo />
          <AddressInfo />
          <EducationAndOccupationInfo />
          <FamilyInfo />
          <ReligiousInfo />
          <PersonalInfo />
          <MarriageInfo />
          <SpousePreferenceInfo />
        </div>
      </div>
      <FooterSection />
    </>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\api\baseApi.ts
// --------------------
// File: src/redux/api/baseApi.ts
import { axiosBaseQuery } from "@/helpers/axios/axiosBaseQuery";
import { createApi } from "@reduxjs/toolkit/query/react";
import { tagTypesList } from "../tag-Types";

export const baseApi = createApi({
  reducerPath: "api",
  baseQuery: axiosBaseQuery({
    baseUrl: `${process.env.NEXT_PUBLIC_SERVER_URL}`,
  }),
  endpoints: () => ({}),
  tagTypes: tagTypesList,
});


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authApi.ts
// --------------------
// File: src/redux/features/auth/authApi.ts
import { baseApi } from "@/redux/api/baseApi";
import { tagTypes } from "@/redux/tag-Types";

const AUTH_URL = "/auth";

export const authApi = baseApi.injectEndpoints({
  endpoints: (build) => ({
    userRegister: build.mutation({
      query: (registerData) => ({
        url: `${AUTH_URL}/register`,
        method: "POST",
        data: registerData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    userLogin: build.mutation({
      query: (loginData) => ({
        url: `${AUTH_URL}/login`,
        method: "POST",
        data: loginData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    verifyEmail: build.mutation({
      query: (verifyData) => ({
        url: `${AUTH_URL}/verify-email`,
        method: "POST",
        data: verifyData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    changePassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/change-password`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    refreshToken: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/refresh-token`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    forgotPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/forgot-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    resetPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/reset-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
  }),
});

export const {
  useUserRegisterMutation,
  useUserLoginMutation,
  useVerifyEmailMutation,
  useChangePasswordMutation,
  useRefreshTokenMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
} = authApi;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authSlice.ts
// --------------------
// File: src/redux/features/auth/authSlice.ts
import { authAccessKey, authRefreshKey } from "@/constant/authkey";
import { RootState } from "@/redux/store";
import { getCookie, removeCookie, setCookie } from "@/utils/cookieHelper";
import { decodeToken, TUser } from "@/utils/tokenHelper";
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

type TAuthState = {
  user: TUser | null;
  acesstoken: string | null;
  refreshtoken: string | null;
};

// Retrieve token from cookies
const storedAccessToken = getCookie(authAccessKey);
const storedRefreshToken = getCookie(authRefreshKey);
const storedUser = decodeToken(storedAccessToken); // Decode user from token

const initialState: TAuthState = {
  user: storedUser,
  acesstoken: storedAccessToken,
  refreshtoken: storedRefreshToken,
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setUser: (state, action: PayloadAction<TAuthState>) => {
      const { user, acesstoken, refreshtoken } = action.payload;
      state.user = user;
      state.acesstoken = acesstoken;
      state.refreshtoken = refreshtoken;
      if (acesstoken && refreshtoken) {
        setCookie(authAccessKey, acesstoken); // Store token in cookies
        setCookie(authRefreshKey, refreshtoken); // Store token in cookies
      }
    },
    logout: (state) => {
      state.user = null;
      state.acesstoken = null;
      state.refreshtoken = null;
      removeCookie(authAccessKey); // Remove token from cookies
      removeCookie(authRefreshKey); // Remove token from cookies
    },
  },
});

export const { setUser, logout } = authSlice.actions;
export default authSlice.reducer;

// Selectors
export const selectCurrentToken = (state: RootState) => state.auth.acesstoken;
export const selectCurrentUser = (state: RootState) => state.auth.user;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\biodata\biodataSlice.ts
// --------------------
// File: src/redux/features/biodata/biodataSlice.ts
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

export interface BiodataFormDataStore {
  biodataFormData: {
    firstWordsFormData?: any;
    primaryInfoFormData?: any;
    generalInfoFormData?: any;
    addressInfoFormData?: any;
    educationInfoFormData?: any;
    occupationInfoFormData?: any;
    familyInfoFormData?: any;
    religiousInfoFormData?: any;
    personalInfoFormData?: any;
    maritalInfoFormData?: any;
    spousePreferenceInfoFormData?: any;
    profilePicFormData?: any;
    finalWordsFormData?: any;
  } | null;
}

const initialState: BiodataFormDataStore = {
  biodataFormData: null,
};

const biodataSlice = createSlice({
  name: "biodata",
  initialState,
  reducers: {
    setBiodataFormData: (
      state,
      action: PayloadAction<{
        key: string;
        data: any;
      }>
    ) => {
      // Initialize biodataFormData if it doesn't exist
      if (!state.biodataFormData) {
        state.biodataFormData = {};
      }

      // Create a new state object to ensure immutability
      const newState = {
        ...state.biodataFormData,
        [action.payload.key]: action.payload.data,
      };

      // Update the state with the new object
      state.biodataFormData = newState;
    },
    resetBiodataFormData: (state) => {
      state.biodataFormData = null;
    },
  },
});

export const { setBiodataFormData, resetBiodataFormData } =
  biodataSlice.actions;
export default biodataSlice.reducer;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\hooks.ts
// --------------------
// File: src/redux/hooks.ts
"use client";
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import type { AppDispatch, RootState } from "./store";

// Use throughout your app instead of plain `useDispatch` and `useSelector`
export const useAppDispatch = useDispatch.withTypes<AppDispatch>();
export const useAppSelector = useSelector.withTypes<RootState>();

type TDebouncedProps = {
  searchQuery: string;
  delay: number;
};

export const useDebounced = ({ searchQuery, delay }: TDebouncedProps) => {
  const [debouncedValue, setDebouncedValue] = useState<string>(searchQuery);

  useEffect(() => {
    const handler = setTimeout(() => {
      setDebouncedValue(searchQuery);
    }, delay);

    return () => {
      clearTimeout(handler);
    };
  }, [searchQuery, delay]);

  return debouncedValue;
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\reducer\rootReducer.ts
// --------------------
// File: src/redux/reducer/rootReducer.ts
import { baseApi } from "../api/baseApi";
import authReducer from "../features/auth/authSlice";
import biodataReducer from "../features/biodata/biodataSlice";

export const reducer = {
  [baseApi.reducerPath]: baseApi.reducer,
  auth: authReducer, // This gets persisted in `store.ts`
  biodata: biodataReducer,
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\store.ts
// --------------------
import { configureStore } from "@reduxjs/toolkit";
import {
  FLUSH,
  PAUSE,
  PERSIST,
  persistReducer,
  persistStore,
  PURGE,
  REGISTER,
  REHYDRATE,
} from "redux-persist";
import createWebStorage from "redux-persist/lib/storage/createWebStorage";
import { baseApi } from "./api/baseApi";
import { reducer } from "./reducer/rootReducer";

// Create a custom storage object that handles SSR
const createNoopStorage = () => {
  return {
    getItem(_key: string) {
      return Promise.resolve(null);
    },
    setItem(_key: string, value: any) {
      return Promise.resolve(value);
    },
    removeItem(_key: string) {
      return Promise.resolve();
    },
  };
};

// Use no-op storage by default
const storage = createNoopStorage();

// Persist config for authentication
const authPersistConfig = {
  key: "auth",
  storage,
  whitelist: ["token", "user"],
};

const biodataPersistConfig = {
  key: "biodata",
  storage,
  whitelist: ["biodataFormData"],
  serialize: true,
  deserialize: true,
};

const persistedAuthReducer = persistReducer(authPersistConfig, reducer.auth);
const persistedBiodataReducer = persistReducer(
  biodataPersistConfig,
  reducer.biodata
);

export const store = configureStore({
  reducer: {
    [baseApi.reducerPath]: baseApi.reducer,
    auth: persistedAuthReducer,
    biodata: persistedBiodataReducer,
  },
  middleware: (getDefaultMiddlewares) =>
    getDefaultMiddlewares({
      serializableCheck: {
        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],
        ignoredPaths: ["biodata.biodataFormData"],
        ignoredActionPaths: ["payload.biodataFormData"],
      },
      immutableCheck: false,
      thunk: true,
    }).concat(baseApi.middleware),
  devTools: process.env.NODE_ENV === "development",
});

export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;

// Initialize storage on client side only
if (typeof window !== "undefined") {
  const webStorage = createWebStorage("local");
  authPersistConfig.storage = webStorage;
  biodataPersistConfig.storage = webStorage;
}

export const persistor = persistStore(store);


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\tag-Types.ts
// --------------------
// File: src/redux/tag-Types.ts

export enum tagTypes {
  user = "user",
  biodata = "biodata",
  notification = "notification",
  proposal = "proposal",
}

export const tagTypesList = [
  tagTypes.user,
  tagTypes.biodata,
  tagTypes.notification,
  tagTypes.proposal,
];


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\api\baseApi.ts
// --------------------
// File: src/redux/api/baseApi.ts
import { axiosBaseQuery } from "@/helpers/axios/axiosBaseQuery";
import { createApi } from "@reduxjs/toolkit/query/react";
import { tagTypesList } from "../tag-Types";

export const baseApi = createApi({
  reducerPath: "api",
  baseQuery: axiosBaseQuery({
    baseUrl: `${process.env.NEXT_PUBLIC_SERVER_URL}`,
  }),
  endpoints: () => ({}),
  tagTypes: tagTypesList,
});


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\api\baseApi.ts
// --------------------
// File: src/redux/api/baseApi.ts
import { axiosBaseQuery } from "@/helpers/axios/axiosBaseQuery";
import { createApi } from "@reduxjs/toolkit/query/react";
import { tagTypesList } from "../tag-Types";

export const baseApi = createApi({
  reducerPath: "api",
  baseQuery: axiosBaseQuery({
    baseUrl: `${process.env.NEXT_PUBLIC_SERVER_URL}`,
  }),
  endpoints: () => ({}),
  tagTypes: tagTypesList,
});


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authApi.ts
// --------------------
// File: src/redux/features/auth/authApi.ts
import { baseApi } from "@/redux/api/baseApi";
import { tagTypes } from "@/redux/tag-Types";

const AUTH_URL = "/auth";

export const authApi = baseApi.injectEndpoints({
  endpoints: (build) => ({
    userRegister: build.mutation({
      query: (registerData) => ({
        url: `${AUTH_URL}/register`,
        method: "POST",
        data: registerData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    userLogin: build.mutation({
      query: (loginData) => ({
        url: `${AUTH_URL}/login`,
        method: "POST",
        data: loginData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    verifyEmail: build.mutation({
      query: (verifyData) => ({
        url: `${AUTH_URL}/verify-email`,
        method: "POST",
        data: verifyData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    changePassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/change-password`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    refreshToken: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/refresh-token`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    forgotPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/forgot-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    resetPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/reset-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
  }),
});

export const {
  useUserRegisterMutation,
  useUserLoginMutation,
  useVerifyEmailMutation,
  useChangePasswordMutation,
  useRefreshTokenMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
} = authApi;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authSlice.ts
// --------------------
// File: src/redux/features/auth/authSlice.ts
import { authAccessKey, authRefreshKey } from "@/constant/authkey";
import { RootState } from "@/redux/store";
import { getCookie, removeCookie, setCookie } from "@/utils/cookieHelper";
import { decodeToken, TUser } from "@/utils/tokenHelper";
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

type TAuthState = {
  user: TUser | null;
  acesstoken: string | null;
  refreshtoken: string | null;
};

// Retrieve token from cookies
const storedAccessToken = getCookie(authAccessKey);
const storedRefreshToken = getCookie(authRefreshKey);
const storedUser = decodeToken(storedAccessToken); // Decode user from token

const initialState: TAuthState = {
  user: storedUser,
  acesstoken: storedAccessToken,
  refreshtoken: storedRefreshToken,
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setUser: (state, action: PayloadAction<TAuthState>) => {
      const { user, acesstoken, refreshtoken } = action.payload;
      state.user = user;
      state.acesstoken = acesstoken;
      state.refreshtoken = refreshtoken;
      if (acesstoken && refreshtoken) {
        setCookie(authAccessKey, acesstoken); // Store token in cookies
        setCookie(authRefreshKey, refreshtoken); // Store token in cookies
      }
    },
    logout: (state) => {
      state.user = null;
      state.acesstoken = null;
      state.refreshtoken = null;
      removeCookie(authAccessKey); // Remove token from cookies
      removeCookie(authRefreshKey); // Remove token from cookies
    },
  },
});

export const { setUser, logout } = authSlice.actions;
export default authSlice.reducer;

// Selectors
export const selectCurrentToken = (state: RootState) => state.auth.acesstoken;
export const selectCurrentUser = (state: RootState) => state.auth.user;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\biodata\biodataSlice.ts
// --------------------
// File: src/redux/features/biodata/biodataSlice.ts
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

export interface BiodataFormDataStore {
  biodataFormData: {
    firstWordsFormData?: any;
    primaryInfoFormData?: any;
    generalInfoFormData?: any;
    addressInfoFormData?: any;
    educationInfoFormData?: any;
    occupationInfoFormData?: any;
    familyInfoFormData?: any;
    religiousInfoFormData?: any;
    personalInfoFormData?: any;
    maritalInfoFormData?: any;
    spousePreferenceInfoFormData?: any;
    profilePicFormData?: any;
    finalWordsFormData?: any;
  } | null;
}

const initialState: BiodataFormDataStore = {
  biodataFormData: null,
};

const biodataSlice = createSlice({
  name: "biodata",
  initialState,
  reducers: {
    setBiodataFormData: (
      state,
      action: PayloadAction<{
        key: string;
        data: any;
      }>
    ) => {
      // Initialize biodataFormData if it doesn't exist
      if (!state.biodataFormData) {
        state.biodataFormData = {};
      }

      // Create a new state object to ensure immutability
      const newState = {
        ...state.biodataFormData,
        [action.payload.key]: action.payload.data,
      };

      // Update the state with the new object
      state.biodataFormData = newState;
    },
    resetBiodataFormData: (state) => {
      state.biodataFormData = null;
    },
  },
});

export const { setBiodataFormData, resetBiodataFormData } =
  biodataSlice.actions;
export default biodataSlice.reducer;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authApi.ts
// --------------------
// File: src/redux/features/auth/authApi.ts
import { baseApi } from "@/redux/api/baseApi";
import { tagTypes } from "@/redux/tag-Types";

const AUTH_URL = "/auth";

export const authApi = baseApi.injectEndpoints({
  endpoints: (build) => ({
    userRegister: build.mutation({
      query: (registerData) => ({
        url: `${AUTH_URL}/register`,
        method: "POST",
        data: registerData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    userLogin: build.mutation({
      query: (loginData) => ({
        url: `${AUTH_URL}/login`,
        method: "POST",
        data: loginData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    verifyEmail: build.mutation({
      query: (verifyData) => ({
        url: `${AUTH_URL}/verify-email`,
        method: "POST",
        data: verifyData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    changePassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/change-password`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    refreshToken: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/refresh-token`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    forgotPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/forgot-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    resetPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/reset-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
  }),
});

export const {
  useUserRegisterMutation,
  useUserLoginMutation,
  useVerifyEmailMutation,
  useChangePasswordMutation,
  useRefreshTokenMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
} = authApi;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authSlice.ts
// --------------------
// File: src/redux/features/auth/authSlice.ts
import { authAccessKey, authRefreshKey } from "@/constant/authkey";
import { RootState } from "@/redux/store";
import { getCookie, removeCookie, setCookie } from "@/utils/cookieHelper";
import { decodeToken, TUser } from "@/utils/tokenHelper";
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

type TAuthState = {
  user: TUser | null;
  acesstoken: string | null;
  refreshtoken: string | null;
};

// Retrieve token from cookies
const storedAccessToken = getCookie(authAccessKey);
const storedRefreshToken = getCookie(authRefreshKey);
const storedUser = decodeToken(storedAccessToken); // Decode user from token

const initialState: TAuthState = {
  user: storedUser,
  acesstoken: storedAccessToken,
  refreshtoken: storedRefreshToken,
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setUser: (state, action: PayloadAction<TAuthState>) => {
      const { user, acesstoken, refreshtoken } = action.payload;
      state.user = user;
      state.acesstoken = acesstoken;
      state.refreshtoken = refreshtoken;
      if (acesstoken && refreshtoken) {
        setCookie(authAccessKey, acesstoken); // Store token in cookies
        setCookie(authRefreshKey, refreshtoken); // Store token in cookies
      }
    },
    logout: (state) => {
      state.user = null;
      state.acesstoken = null;
      state.refreshtoken = null;
      removeCookie(authAccessKey); // Remove token from cookies
      removeCookie(authRefreshKey); // Remove token from cookies
    },
  },
});

export const { setUser, logout } = authSlice.actions;
export default authSlice.reducer;

// Selectors
export const selectCurrentToken = (state: RootState) => state.auth.acesstoken;
export const selectCurrentUser = (state: RootState) => state.auth.user;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authApi.ts
// --------------------
// File: src/redux/features/auth/authApi.ts
import { baseApi } from "@/redux/api/baseApi";
import { tagTypes } from "@/redux/tag-Types";

const AUTH_URL = "/auth";

export const authApi = baseApi.injectEndpoints({
  endpoints: (build) => ({
    userRegister: build.mutation({
      query: (registerData) => ({
        url: `${AUTH_URL}/register`,
        method: "POST",
        data: registerData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    userLogin: build.mutation({
      query: (loginData) => ({
        url: `${AUTH_URL}/login`,
        method: "POST",
        data: loginData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    verifyEmail: build.mutation({
      query: (verifyData) => ({
        url: `${AUTH_URL}/verify-email`,
        method: "POST",
        data: verifyData,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    changePassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/change-password`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    refreshToken: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/refresh-token`,
        method: "POST",
        contentType: "application/json",
        data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    forgotPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/forgot-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
    resetPassword: build.mutation({
      query: (data) => ({
        url: `${AUTH_URL}/reset-password`,
        method: "POST",
        data: data,
      }),
      invalidatesTags: [tagTypes.user],
    }),
  }),
});

export const {
  useUserRegisterMutation,
  useUserLoginMutation,
  useVerifyEmailMutation,
  useChangePasswordMutation,
  useRefreshTokenMutation,
  useForgotPasswordMutation,
  useResetPasswordMutation,
} = authApi;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\auth\authSlice.ts
// --------------------
// File: src/redux/features/auth/authSlice.ts
import { authAccessKey, authRefreshKey } from "@/constant/authkey";
import { RootState } from "@/redux/store";
import { getCookie, removeCookie, setCookie } from "@/utils/cookieHelper";
import { decodeToken, TUser } from "@/utils/tokenHelper";
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

type TAuthState = {
  user: TUser | null;
  acesstoken: string | null;
  refreshtoken: string | null;
};

// Retrieve token from cookies
const storedAccessToken = getCookie(authAccessKey);
const storedRefreshToken = getCookie(authRefreshKey);
const storedUser = decodeToken(storedAccessToken); // Decode user from token

const initialState: TAuthState = {
  user: storedUser,
  acesstoken: storedAccessToken,
  refreshtoken: storedRefreshToken,
};

const authSlice = createSlice({
  name: "auth",
  initialState,
  reducers: {
    setUser: (state, action: PayloadAction<TAuthState>) => {
      const { user, acesstoken, refreshtoken } = action.payload;
      state.user = user;
      state.acesstoken = acesstoken;
      state.refreshtoken = refreshtoken;
      if (acesstoken && refreshtoken) {
        setCookie(authAccessKey, acesstoken); // Store token in cookies
        setCookie(authRefreshKey, refreshtoken); // Store token in cookies
      }
    },
    logout: (state) => {
      state.user = null;
      state.acesstoken = null;
      state.refreshtoken = null;
      removeCookie(authAccessKey); // Remove token from cookies
      removeCookie(authRefreshKey); // Remove token from cookies
    },
  },
});

export const { setUser, logout } = authSlice.actions;
export default authSlice.reducer;

// Selectors
export const selectCurrentToken = (state: RootState) => state.auth.acesstoken;
export const selectCurrentUser = (state: RootState) => state.auth.user;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\biodata\biodataSlice.ts
// --------------------
// File: src/redux/features/biodata/biodataSlice.ts
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

export interface BiodataFormDataStore {
  biodataFormData: {
    firstWordsFormData?: any;
    primaryInfoFormData?: any;
    generalInfoFormData?: any;
    addressInfoFormData?: any;
    educationInfoFormData?: any;
    occupationInfoFormData?: any;
    familyInfoFormData?: any;
    religiousInfoFormData?: any;
    personalInfoFormData?: any;
    maritalInfoFormData?: any;
    spousePreferenceInfoFormData?: any;
    profilePicFormData?: any;
    finalWordsFormData?: any;
  } | null;
}

const initialState: BiodataFormDataStore = {
  biodataFormData: null,
};

const biodataSlice = createSlice({
  name: "biodata",
  initialState,
  reducers: {
    setBiodataFormData: (
      state,
      action: PayloadAction<{
        key: string;
        data: any;
      }>
    ) => {
      // Initialize biodataFormData if it doesn't exist
      if (!state.biodataFormData) {
        state.biodataFormData = {};
      }

      // Create a new state object to ensure immutability
      const newState = {
        ...state.biodataFormData,
        [action.payload.key]: action.payload.data,
      };

      // Update the state with the new object
      state.biodataFormData = newState;
    },
    resetBiodataFormData: (state) => {
      state.biodataFormData = null;
    },
  },
});

export const { setBiodataFormData, resetBiodataFormData } =
  biodataSlice.actions;
export default biodataSlice.reducer;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\features\biodata\bioDataSlice.ts
// --------------------
// File: src/redux/features/biodata/biodataSlice.ts
import { createSlice, PayloadAction } from "@reduxjs/toolkit";

export interface BiodataFormDataStore {
  biodataFormData: {
    firstWordsFormData?: any;
    primaryInfoFormData?: any;
    generalInfoFormData?: any;
    addressInfoFormData?: any;
    educationInfoFormData?: any;
    occupationInfoFormData?: any;
    familyInfoFormData?: any;
    religiousInfoFormData?: any;
    personalInfoFormData?: any;
    maritalInfoFormData?: any;
    spousePreferenceInfoFormData?: any;
    profilePicFormData?: any;
    finalWordsFormData?: any;
  } | null;
}

const initialState: BiodataFormDataStore = {
  biodataFormData: null,
};

const biodataSlice = createSlice({
  name: "biodata",
  initialState,
  reducers: {
    setBiodataFormData: (
      state,
      action: PayloadAction<{
        key: string;
        data: any;
      }>
    ) => {
      // Initialize biodataFormData if it doesn't exist
      if (!state.biodataFormData) {
        state.biodataFormData = {};
      }

      // Create a new state object to ensure immutability
      const newState = {
        ...state.biodataFormData,
        [action.payload.key]: action.payload.data,
      };

      // Update the state with the new object
      state.biodataFormData = newState;
    },
    resetBiodataFormData: (state) => {
      state.biodataFormData = null;
    },
  },
});

export const { setBiodataFormData, resetBiodataFormData } =
  biodataSlice.actions;
export default biodataSlice.reducer;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\reducer\rootReducer.ts
// --------------------
// File: src/redux/reducer/rootReducer.ts
import { baseApi } from "../api/baseApi";
import authReducer from "../features/auth/authSlice";
import biodataReducer from "../features/biodata/biodataSlice";

export const reducer = {
  [baseApi.reducerPath]: baseApi.reducer,
  auth: authReducer, // This gets persisted in `store.ts`
  biodata: biodataReducer,
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\reducer\rootReducer.ts
// --------------------
// File: src/redux/reducer/rootReducer.ts
import { baseApi } from "../api/baseApi";
import authReducer from "../features/auth/authSlice";
import biodataReducer from "../features/biodata/biodataSlice";

export const reducer = {
  [baseApi.reducerPath]: baseApi.reducer,
  auth: authReducer, // This gets persisted in `store.ts`
  biodata: biodataReducer,
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\hooks.ts
// --------------------
// File: src/redux/hooks.ts
"use client";
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import type { AppDispatch, RootState } from "./store";

// Use throughout your app instead of plain `useDispatch` and `useSelector`
export const useAppDispatch = useDispatch.withTypes<AppDispatch>();
export const useAppSelector = useSelector.withTypes<RootState>();

type TDebouncedProps = {
  searchQuery: string;
  delay: number;
};

export const useDebounced = ({ searchQuery, delay }: TDebouncedProps) => {
  const [debouncedValue, setDebouncedValue] = useState<string>(searchQuery);

  useEffect(() => {
    const handler = setTimeout(() => {
      setDebouncedValue(searchQuery);
    }, delay);

    return () => {
      clearTimeout(handler);
    };
  }, [searchQuery, delay]);

  return debouncedValue;
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\store.ts
// --------------------
import { configureStore } from "@reduxjs/toolkit";
import {
  FLUSH,
  PAUSE,
  PERSIST,
  persistReducer,
  persistStore,
  PURGE,
  REGISTER,
  REHYDRATE,
} from "redux-persist";
import createWebStorage from "redux-persist/lib/storage/createWebStorage";
import { baseApi } from "./api/baseApi";
import { reducer } from "./reducer/rootReducer";

// Create a custom storage object that handles SSR
const createNoopStorage = () => {
  return {
    getItem(_key: string) {
      return Promise.resolve(null);
    },
    setItem(_key: string, value: any) {
      return Promise.resolve(value);
    },
    removeItem(_key: string) {
      return Promise.resolve();
    },
  };
};

// Use no-op storage by default
const storage = createNoopStorage();

// Persist config for authentication
const authPersistConfig = {
  key: "auth",
  storage,
  whitelist: ["token", "user"],
};

const biodataPersistConfig = {
  key: "biodata",
  storage,
  whitelist: ["biodataFormData"],
  serialize: true,
  deserialize: true,
};

const persistedAuthReducer = persistReducer(authPersistConfig, reducer.auth);
const persistedBiodataReducer = persistReducer(
  biodataPersistConfig,
  reducer.biodata
);

export const store = configureStore({
  reducer: {
    [baseApi.reducerPath]: baseApi.reducer,
    auth: persistedAuthReducer,
    biodata: persistedBiodataReducer,
  },
  middleware: (getDefaultMiddlewares) =>
    getDefaultMiddlewares({
      serializableCheck: {
        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],
        ignoredPaths: ["biodata.biodataFormData"],
        ignoredActionPaths: ["payload.biodataFormData"],
      },
      immutableCheck: false,
      thunk: true,
    }).concat(baseApi.middleware),
  devTools: process.env.NODE_ENV === "development",
});

export type RootState = ReturnType<typeof store.getState>;
export type AppDispatch = typeof store.dispatch;

// Initialize storage on client side only
if (typeof window !== "undefined") {
  const webStorage = createWebStorage("local");
  authPersistConfig.storage = webStorage;
  biodataPersistConfig.storage = webStorage;
}

export const persistor = persistStore(store);


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\redux\tag-types.ts
// --------------------
// File: src/redux/tag-Types.ts

export enum tagTypes {
  user = "user",
  biodata = "biodata",
  notification = "notification",
  proposal = "proposal",
}

export const tagTypesList = [
  tagTypes.user,
  tagTypes.biodata,
  tagTypes.notification,
  tagTypes.proposal,
];


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\footer\index.tsx
// --------------------
// File: src/components/footer/index.tsx

import logo from "@/assets/images/logo-white.svg";
import { Facebook, Instagram, Youtube } from "lucide-react";
import Image from "next/image";
import Link from "next/link";

export function Footer() {
  return (
    <footer className="bg-[#307fa7] text-white text-center py-4 flex justify-center space-x-8">
      <div className="min-w-72 flex flex-col">
        <div className="underline text-xl mb-5">লিংকসমূহ</div>
        <div className="flex justify-between text-left">
          <div className="flex flex-col space-y-2">
            <Link href="/" className="inline-block hover:underline">
              হোম
            </Link>
            <Link href="/tutorial" className="inline-block hover:underline">
              টিউটোরিয়াল
            </Link>
            <Link href="/faq" className="inline-block hover:underline">
              প্রশ্ন-উত্তর
            </Link>
          </div>
          <div className="flex flex-col  space-y-2">
            <Link
              href="/privacy-policy"
              className="inline-block hover:underline"
            >
              Privacy Policy
            </Link>
            <Link
              href="/terms-and-conditions"
              className="inline-block hover:underline"
            >
              Terms & Conditions
            </Link>
            <Link
              href="/refund-policy"
              className="inline-block hover:underline"
            >
              Refund Policy
            </Link>
          </div>
        </div>
      </div>
      <div className="min-w-96 flex flex-col space-y-2 justify-center items-center">
        <div className="">
          <Image src={logo} alt="Logo" width={60} height={50} priority />
        </div>
        <div>
          বাংলাদেশের সর্বসাধারণ মুসলিমদের জন্য একটি বিশ্বস্ত ম্যাট্রিমনি
          প্ল্যাটফর্ম
        </div>
        <div>
          &copy; {new Date().getFullYear()} সহজনিকাহ. All Rights Reserved.
        </div>
      </div>
      <div className="min-w-72 flex flex-col space-y-4">
        <div className="underline text-xl">যোগাযোগ</div>
        <div>info@sohoznikah.com</div>
        <div className="flex items-center justify-center space-x-2">
          <Facebook size={32} />
          <Youtube size={32} />
          <Instagram size={32} />
        </div>
      </div>
    </footer>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\navbar\index.tsx
// --------------------
// File: src/components/navbar/index.tsx

"use client";
import logo from "@/assets/images/logo.svg";
import { logout } from "@/redux/features/auth/authSlice";
import { useAppDispatch, useAppSelector } from "@/redux/hooks";
import Image from "next/image";
import Link from "next/link";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "../ui/dropdown-menu";
import {
  NavigationMenu,
  NavigationMenuItem,
  NavigationMenuLink,
  NavigationMenuList,
} from "../ui/navigation-menu";

export interface MenuItem {
  name: string;
  route: string;
}

export function Navbar() {
  const user = useAppSelector((state) => state.auth.user);
  const token = useAppSelector((state) => state.auth.acesstoken);
  const dispatch = useAppDispatch();

  const menuItems: MenuItem[] = [
    {
      name: "হোম",
      route: "/",
    },
    {
      name: "টিউটোরিয়াল",
      route: "/tutorial",
    },
    {
      name: "যোগাযোগ",
      route: "/contact-us",
    },
    {
      name: "প্রশ্ন-উত্তর",
      route: "/faq",
    },
  ];

  // const user = {
  //   name: "test",
  //   profilePicture:
  //     "http://localhost:3000/_next/static/media/male.b7323272.svg",
  // };

  return (
    <div className="sticky top-0 flex items-center z-20 justify-center p-4 text-[#1f4f69] bg-gradient-to-r from-[#FFEFF5] to-[#E4F1FF]">
      <NavigationMenu className="min-w-96">
        <NavigationMenuList className="flex space-x-2 justify-center">
          {menuItems.map((item, index) => (
            <NavigationMenuItem key={index}>
              <NavigationMenuLink
                href={item.route}
                className="hover:text-[#1b3c50] hover:bg-transparent text-lg"
              >
                {item.name}
              </NavigationMenuLink>
            </NavigationMenuItem>
          ))}
        </NavigationMenuList>
      </NavigationMenu>

      <div className="min-w-96 flex justify-center">
        <Image src={logo} alt="Logo" width={80} height={50} priority />
      </div>

      <div className="min-w-96 flex justify-end space-x-4">
        <Link
          href="/biodata-editor"
          className="bg-[#E25A6F] text-white hover:bg-[#D14A5F] px-4 py-2 transition-all"
        >
          বায়োডাটা তৈরী করুন
        </Link>
        {!user && !token ? (
          <Link
            href="/login"
            className="border-2 border-[#1f4f69] text-[#1f4f69] bg-transparent hover:bg-[#1b3c50] hover:text-white px-4 py-2 transition-all"
          >
            Login
          </Link>
        ) : (
          <p
            onClick={() => dispatch(logout())}
            className="border-2 border-[#1f4f69] text-[#1f4f69] bg-transparent hover:bg-[#1b3c50] hover:text-white px-4 py-2 transition-all cursor-pointer"
          >
            Logout
          </p>
        )}
        {user && token && (
          <DropdownMenu>
            <DropdownMenuTrigger className="flex items-center space-x-2 focus:outline-none">
              {/* <Avatar>
                <AvatarImage src={user.profilePicture} alt={user.name} />
                <AvatarFallback>{user.name.charAt(0)}</AvatarFallback>
              </Avatar>
              <span className="text-lg text-[#1f4f69]">{user.name}</span> */}
            </DropdownMenuTrigger>
            <DropdownMenuContent
              align="end"
              className="mt-2 bg-[#307fa7] border-none"
            >
              <DropdownMenuItem
                className="focus:bg-[#E25A6F]"
                onClick={() => console.log("Profile Clicked")}
              >
                Profile
              </DropdownMenuItem>
              <DropdownMenuItem
                className="focus:bg-[#E25A6F]"
                onClick={() => console.log("Logout Clicked")}
              >
                Logout
              </DropdownMenuItem>
            </DropdownMenuContent>
          </DropdownMenu>
        )}
      </div>
    </div>
  );
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\accordion.tsx
// --------------------
"use client";

import * as React from "react";
import * as AccordionPrimitive from "@radix-ui/react-accordion";
import { ChevronDownIcon } from "lucide-react";

import { cn } from "@/lib/utils";

function Accordion({
  ...props
}: React.ComponentProps<typeof AccordionPrimitive.Root>) {
  return <AccordionPrimitive.Root data-slot="accordion" {...props} />;
}

function AccordionItem({
  className,
  ...props
}: React.ComponentProps<typeof AccordionPrimitive.Item>) {
  return (
    <AccordionPrimitive.Item
      data-slot="accordion-item"
      className={cn("border-b", className)}
      {...props}
    />
  );
}

function AccordionTrigger({
  className,
  children,
  ...props
}: React.ComponentProps<typeof AccordionPrimitive.Trigger>) {
  return (
    <AccordionPrimitive.Header className="flex">
      <AccordionPrimitive.Trigger
        data-slot="accordion-trigger"
        className={cn(
          "ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 flex flex-1 items-start justify-between gap-4 rounded-md py-4 text-left text-sm font-medium transition-all hover:underline focus-visible:ring-4 focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 [&[data-state=open]>svg]:rotate-180",
          className
        )}
        {...props}
      >
        {children}
        <ChevronDownIcon className="text-muted-foreground pointer-events-none size-4 shrink-0 translate-y-0.5 transition-transform duration-200" />
      </AccordionPrimitive.Trigger>
    </AccordionPrimitive.Header>
  );
}

function AccordionContent({
  className,
  children,
  ...props
}: React.ComponentProps<typeof AccordionPrimitive.Content>) {
  return (
    <AccordionPrimitive.Content
      data-slot="accordion-content"
      className="data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down overflow-hidden text-sm"
      {...props}
    >
      <div className={cn("pt-0 pb-4", className)}>{children}</div>
    </AccordionPrimitive.Content>
  );
}

export { Accordion, AccordionItem, AccordionTrigger, AccordionContent };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\avatar.tsx
// --------------------
"use client"

import * as React from "react"
import * as AvatarPrimitive from "@radix-ui/react-avatar"

import { cn } from "@/lib/utils"

function Avatar({
  className,
  ...props
}: React.ComponentProps<typeof AvatarPrimitive.Root>) {
  return (
    <AvatarPrimitive.Root
      data-slot="avatar"
      className={cn(
        "relative flex size-8 shrink-0 overflow-hidden rounded-full",
        className
      )}
      {...props}
    />
  )
}

function AvatarImage({
  className,
  ...props
}: React.ComponentProps<typeof AvatarPrimitive.Image>) {
  return (
    <AvatarPrimitive.Image
      data-slot="avatar-image"
      className={cn("aspect-square size-full", className)}
      {...props}
    />
  )
}

function AvatarFallback({
  className,
  ...props
}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {
  return (
    <AvatarPrimitive.Fallback
      data-slot="avatar-fallback"
      className={cn(
        "bg-muted flex size-full items-center justify-center rounded-full",
        className
      )}
      {...props}
    />
  )
}

export { Avatar, AvatarImage, AvatarFallback }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\badge.tsx
// --------------------
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-semibold w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 focus-visible:ring-4 focus-visible:outline-1 aria-invalid:focus-visible:ring-0 transition-[color,box-shadow]",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground shadow-sm [a&]:hover:bg-primary/90",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground shadow-sm [a&]:hover:bg-destructive/90",
        outline:
          "text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

function Badge({
  className,
  variant,
  asChild = false,
  ...props
}: React.ComponentProps<"span"> &
  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {
  const Comp = asChild ? Slot : "span"

  return (
    <Comp
      data-slot="badge"
      className={cn(badgeVariants({ variant }), className)}
      {...props}
    />
  )
}

export { Badge, badgeVariants }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\breadcrumb.tsx
// --------------------
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { ChevronRight, MoreHorizontal } from "lucide-react"

import { cn } from "@/lib/utils"

function Breadcrumb({ ...props }: React.ComponentProps<"nav">) {
  return <nav aria-label="breadcrumb" data-slot="breadcrumb" {...props} />
}

function BreadcrumbList({ className, ...props }: React.ComponentProps<"ol">) {
  return (
    <ol
      data-slot="breadcrumb-list"
      className={cn(
        "text-muted-foreground flex flex-wrap items-center gap-1.5 text-sm break-words sm:gap-2.5",
        className
      )}
      {...props}
    />
  )
}

function BreadcrumbItem({ className, ...props }: React.ComponentProps<"li">) {
  return (
    <li
      data-slot="breadcrumb-item"
      className={cn("inline-flex items-center gap-1.5", className)}
      {...props}
    />
  )
}

function BreadcrumbLink({
  asChild,
  className,
  ...props
}: React.ComponentProps<"a"> & {
  asChild?: boolean
}) {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      data-slot="breadcrumb-link"
      className={cn("hover:text-foreground transition-colors", className)}
      {...props}
    />
  )
}

function BreadcrumbPage({ className, ...props }: React.ComponentProps<"span">) {
  return (
    <span
      data-slot="breadcrumb-page"
      role="link"
      aria-disabled="true"
      aria-current="page"
      className={cn("text-foreground font-normal", className)}
      {...props}
    />
  )
}

function BreadcrumbSeparator({
  children,
  className,
  ...props
}: React.ComponentProps<"li">) {
  return (
    <li
      data-slot="breadcrumb-separator"
      role="presentation"
      aria-hidden="true"
      className={cn("[&>svg]:size-3.5", className)}
      {...props}
    >
      {children ?? <ChevronRight />}
    </li>
  )
}

function BreadcrumbEllipsis({
  className,
  ...props
}: React.ComponentProps<"span">) {
  return (
    <span
      data-slot="breadcrumb-ellipsis"
      role="presentation"
      aria-hidden="true"
      className={cn("flex size-9 items-center justify-center", className)}
      {...props}
    >
      <MoreHorizontal className="size-4" />
      <span className="sr-only">More</span>
    </span>
  )
}

export {
  Breadcrumb,
  BreadcrumbList,
  BreadcrumbItem,
  BreadcrumbLink,
  BreadcrumbPage,
  BreadcrumbSeparator,
  BreadcrumbEllipsis,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\button.tsx
// --------------------
// File: src/components/ui/button.tsx
import { Slot } from "@radix-ui/react-slot";
import { cva, type VariantProps } from "class-variance-authority";
import * as React from "react";

import { cn } from "@/lib/utils";

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 focus-visible:ring-4 focus-visible:outline-1 aria-invalid:focus-visible:ring-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow-sm hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-xs hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2 has-[>svg]:px-3",
        sm: "h-8 rounded-md px-3 has-[>svg]:px-2.5",
        lg: "h-10 rounded-md px-6 has-[>svg]:px-4",
        icon: "size-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
);

function Button({
  className,
  variant,
  size,
  asChild = false,
  ...props
}: React.ComponentProps<"button"> &
  VariantProps<typeof buttonVariants> & {
    asChild?: boolean;
  }) {
  const Comp = asChild ? Slot : "button";

  return (
    <Comp
      data-slot="button"
      className={cn(
        buttonVariants({ variant, size, className }),
        "cursor-pointer"
      )}
      {...props}
    />
  );
}

export { Button, buttonVariants };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\calendar.tsx
// --------------------
"use client";

import * as React from "react";
import { ChevronLeft, ChevronRight } from "lucide-react";
import { DayPicker } from "react-day-picker";

import { cn } from "@/lib/utils";
import { buttonVariants } from "@/components/ui/button";

function Calendar({
  className,
  classNames,
  showOutsideDays = true,
  ...props
}: React.ComponentProps<typeof DayPicker>) {
  return (
    <DayPicker
      showOutsideDays={showOutsideDays}
      className={cn("p-3", className)}
      classNames={{
        months: "flex flex-col sm:flex-row gap-2",
        month: "flex flex-col gap-4",
        caption: "flex justify-center pt-1 relative items-center w-full",
        caption_label: "text-sm font-medium",
        nav: "flex items-center gap-1",
        nav_button: cn(
          buttonVariants({ variant: "outline" }),
          "size-7 bg-transparent p-0 opacity-50 hover:opacity-100"
        ),
        nav_button_previous: "absolute left-1",
        nav_button_next: "absolute right-1",
        table: "w-full border-collapse space-x-1",
        head_row: "flex",
        head_cell:
          "text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]",
        row: "flex w-full mt-2",
        cell: cn(
          "relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-range-end)]:rounded-r-md",
          props.mode === "range"
            ? "[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md"
            : "[&:has([aria-selected])]:rounded-md"
        ),
        day: cn(
          buttonVariants({ variant: "ghost" }),
          "size-8 p-0 font-normal aria-selected:opacity-100"
        ),
        day_range_start:
          "day-range-start aria-selected:bg-primary aria-selected:text-primary-foreground",
        day_range_end:
          "day-range-end aria-selected:bg-primary aria-selected:text-primary-foreground",
        day_selected:
          "bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground",
        day_today: "bg-accent text-accent-foreground",
        day_outside:
          "day-outside text-muted-foreground aria-selected:text-muted-foreground",
        day_disabled: "text-muted-foreground opacity-50",
        day_range_middle:
          "aria-selected:bg-accent aria-selected:text-accent-foreground",
        day_hidden: "invisible",
        ...classNames,
      }}
      components={{
        IconLeft: ({ className, ...props }) => (
          <ChevronLeft className={cn("size-4", className)} {...props} />
        ),
        IconRight: ({ className, ...props }) => (
          <ChevronRight className={cn("size-4", className)} {...props} />
        ),
      }}
      {...props}
    />
  );
}

export { Calendar };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\card.tsx
// --------------------
import * as React from "react"

import { cn } from "@/lib/utils"

function Card({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card"
      className={cn(
        "bg-card text-card-foreground rounded-xl border shadow-sm",
        className
      )}
      {...props}
    />
  )
}

function CardHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-header"
      className={cn("flex flex-col gap-1.5 p-6", className)}
      {...props}
    />
  )
}

function CardTitle({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-title"
      className={cn("leading-none font-semibold tracking-tight", className)}
      {...props}
    />
  )
}

function CardDescription({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

function CardContent({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-content"
      className={cn("p-6 pt-0", className)}
      {...props}
    />
  )
}

function CardFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="card-footer"
      className={cn("flex items-center p-6 pt-0", className)}
      {...props}
    />
  )
}

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\checkbox.tsx
// --------------------
"use client";

import * as React from "react";
import * as CheckboxPrimitive from "@radix-ui/react-checkbox";
import { CheckIcon } from "lucide-react";

import { cn } from "@/lib/utils";

function Checkbox({
  className,
  ...props
}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {
  return (
    <CheckboxPrimitive.Root
      data-slot="checkbox"
      className={cn(
        "peer border-input data-[state=checked]:bg-[#E25A6F] data-[state=checked]:text-primary-foreground data-[state=checked]:border-[#E25A6F] ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 size-4 shrink-0 rounded-[4px] border shadow-xs transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-0",
        className
      )}
      {...props}
    >
      <CheckboxPrimitive.Indicator
        data-slot="checkbox-indicator"
        className="flex items-center justify-center text-current"
      >
        <CheckIcon className="size-3.5 text-white" />
      </CheckboxPrimitive.Indicator>
    </CheckboxPrimitive.Root>
  );
}

export { Checkbox };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\collapsible.tsx
// --------------------
"use client"

import * as CollapsiblePrimitive from "@radix-ui/react-collapsible"

function Collapsible({
  ...props
}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {
  return <CollapsiblePrimitive.Root data-slot="collapsible" {...props} />
}

function CollapsibleTrigger({
  ...props
}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {
  return (
    <CollapsiblePrimitive.CollapsibleTrigger
      data-slot="collapsible-trigger"
      {...props}
    />
  )
}

function CollapsibleContent({
  ...props
}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {
  return (
    <CollapsiblePrimitive.CollapsibleContent
      data-slot="collapsible-content"
      {...props}
    />
  )
}

export { Collapsible, CollapsibleTrigger, CollapsibleContent }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\command.tsx
// --------------------
"use client"

import * as React from "react"
import { Command as CommandPrimitive } from "cmdk"
import { SearchIcon } from "lucide-react"

import { cn } from "@/lib/utils"
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
} from "@/components/ui/dialog"

function Command({
  className,
  ...props
}: React.ComponentProps<typeof CommandPrimitive>) {
  return (
    <CommandPrimitive
      data-slot="command"
      className={cn(
        "bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md",
        className
      )}
      {...props}
    />
  )
}

function CommandDialog({
  title = "Command Palette",
  description = "Search for a command to run...",
  children,
  ...props
}: React.ComponentProps<typeof Dialog> & {
  title?: string
  description?: string
}) {
  return (
    <Dialog {...props}>
      <DialogHeader className="sr-only">
        <DialogTitle>{title}</DialogTitle>
        <DialogDescription>{description}</DialogDescription>
      </DialogHeader>
      <DialogContent className="overflow-hidden p-0">
        <Command className="[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5">
          {children}
        </Command>
      </DialogContent>
    </Dialog>
  )
}

function CommandInput({
  className,
  ...props
}: React.ComponentProps<typeof CommandPrimitive.Input>) {
  return (
    <div
      data-slot="command-input-wrapper"
      className="flex h-9 items-center gap-2 border-b px-3"
    >
      <SearchIcon className="size-4 shrink-0 opacity-50" />
      <CommandPrimitive.Input
        data-slot="command-input"
        className={cn(
          "placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50",
          className
        )}
        {...props}
      />
    </div>
  )
}

function CommandList({
  className,
  ...props
}: React.ComponentProps<typeof CommandPrimitive.List>) {
  return (
    <CommandPrimitive.List
      data-slot="command-list"
      className={cn(
        "max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto",
        className
      )}
      {...props}
    />
  )
}

function CommandEmpty({
  ...props
}: React.ComponentProps<typeof CommandPrimitive.Empty>) {
  return (
    <CommandPrimitive.Empty
      data-slot="command-empty"
      className="py-6 text-center text-sm"
      {...props}
    />
  )
}

function CommandGroup({
  className,
  ...props
}: React.ComponentProps<typeof CommandPrimitive.Group>) {
  return (
    <CommandPrimitive.Group
      data-slot="command-group"
      className={cn(
        "text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium",
        className
      )}
      {...props}
    />
  )
}

function CommandSeparator({
  className,
  ...props
}: React.ComponentProps<typeof CommandPrimitive.Separator>) {
  return (
    <CommandPrimitive.Separator
      data-slot="command-separator"
      className={cn("bg-border -mx-1 h-px", className)}
      {...props}
    />
  )
}

function CommandItem({
  className,
  ...props
}: React.ComponentProps<typeof CommandPrimitive.Item>) {
  return (
    <CommandPrimitive.Item
      data-slot="command-item"
      className={cn(
        "data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    />
  )
}

function CommandShortcut({
  className,
  ...props
}: React.ComponentProps<"span">) {
  return (
    <span
      data-slot="command-shortcut"
      className={cn(
        "text-muted-foreground ml-auto text-xs tracking-widest",
        className
      )}
      {...props}
    />
  )
}

export {
  Command,
  CommandDialog,
  CommandInput,
  CommandList,
  CommandEmpty,
  CommandGroup,
  CommandItem,
  CommandShortcut,
  CommandSeparator,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\dialog.tsx
// --------------------
"use client"

import * as React from "react"
import * as DialogPrimitive from "@radix-ui/react-dialog"
import { XIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Dialog({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Root>) {
  return <DialogPrimitive.Root data-slot="dialog" {...props} />
}

function DialogTrigger({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {
  return <DialogPrimitive.Trigger data-slot="dialog-trigger" {...props} />
}

function DialogPortal({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Portal>) {
  return <DialogPrimitive.Portal data-slot="dialog-portal" {...props} />
}

function DialogClose({
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Close>) {
  return <DialogPrimitive.Close data-slot="dialog-close" {...props} />
}

function DialogOverlay({
  className,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {
  return (
    <DialogPrimitive.Overlay
      data-slot="dialog-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80",
        className
      )}
      {...props}
    />
  )
}

function DialogContent({
  className,
  children,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Content>) {
  return (
    <DialogPortal data-slot="dialog-portal">
      <DialogOverlay />
      <DialogPrimitive.Content
        data-slot="dialog-content"
        className={cn(
          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg",
          className
        )}
        {...props}
      >
        {children}
        <DialogPrimitive.Close className="ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4">
          <XIcon />
          <span className="sr-only">Close</span>
        </DialogPrimitive.Close>
      </DialogPrimitive.Content>
    </DialogPortal>
  )
}

function DialogHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="dialog-header"
      className={cn("flex flex-col gap-2 text-center sm:text-left", className)}
      {...props}
    />
  )
}

function DialogFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="dialog-footer"
      className={cn(
        "flex flex-col-reverse gap-2 sm:flex-row sm:justify-end",
        className
      )}
      {...props}
    />
  )
}

function DialogTitle({
  className,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Title>) {
  return (
    <DialogPrimitive.Title
      data-slot="dialog-title"
      className={cn(
        "text-lg leading-none font-semibold tracking-tight",
        className
      )}
      {...props}
    />
  )
}

function DialogDescription({
  className,
  ...props
}: React.ComponentProps<typeof DialogPrimitive.Description>) {
  return (
    <DialogPrimitive.Description
      data-slot="dialog-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

export {
  Dialog,
  DialogClose,
  DialogContent,
  DialogDescription,
  DialogFooter,
  DialogHeader,
  DialogOverlay,
  DialogPortal,
  DialogTitle,
  DialogTrigger,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\dropdown-menu.tsx
// --------------------
"use client"

import * as React from "react"
import * as DropdownMenuPrimitive from "@radix-ui/react-dropdown-menu"
import { CheckIcon, ChevronRightIcon, CircleIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function DropdownMenu({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Root>) {
  return <DropdownMenuPrimitive.Root data-slot="dropdown-menu" {...props} />
}

function DropdownMenuPortal({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Portal>) {
  return (
    <DropdownMenuPrimitive.Portal data-slot="dropdown-menu-portal" {...props} />
  )
}

function DropdownMenuTrigger({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Trigger>) {
  return (
    <DropdownMenuPrimitive.Trigger
      data-slot="dropdown-menu-trigger"
      {...props}
    />
  )
}

function DropdownMenuContent({
  className,
  sideOffset = 4,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Content>) {
  return (
    <DropdownMenuPrimitive.Portal>
      <DropdownMenuPrimitive.Content
        data-slot="dropdown-menu-content"
        sideOffset={sideOffset}
        className={cn(
          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-md",
          className
        )}
        {...props}
      />
    </DropdownMenuPrimitive.Portal>
  )
}

function DropdownMenuGroup({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Group>) {
  return (
    <DropdownMenuPrimitive.Group data-slot="dropdown-menu-group" {...props} />
  )
}

function DropdownMenuItem({
  className,
  inset,
  variant = "default",
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Item> & {
  inset?: boolean
  variant?: "default" | "destructive"
}) {
  return (
    <DropdownMenuPrimitive.Item
      data-slot="dropdown-menu-item"
      data-inset={inset}
      data-variant={variant}
      className={cn(
        "focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    />
  )
}

function DropdownMenuCheckboxItem({
  className,
  children,
  checked,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.CheckboxItem>) {
  return (
    <DropdownMenuPrimitive.CheckboxItem
      data-slot="dropdown-menu-checkbox-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      checked={checked}
      {...props}
    >
      <span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center">
        <DropdownMenuPrimitive.ItemIndicator>
          <CheckIcon className="size-4" />
        </DropdownMenuPrimitive.ItemIndicator>
      </span>
      {children}
    </DropdownMenuPrimitive.CheckboxItem>
  )
}

function DropdownMenuRadioGroup({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioGroup>) {
  return (
    <DropdownMenuPrimitive.RadioGroup
      data-slot="dropdown-menu-radio-group"
      {...props}
    />
  )
}

function DropdownMenuRadioItem({
  className,
  children,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.RadioItem>) {
  return (
    <DropdownMenuPrimitive.RadioItem
      data-slot="dropdown-menu-radio-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    >
      <span className="pointer-events-none absolute left-2 flex size-3.5 items-center justify-center">
        <DropdownMenuPrimitive.ItemIndicator>
          <CircleIcon className="size-2 fill-current" />
        </DropdownMenuPrimitive.ItemIndicator>
      </span>
      {children}
    </DropdownMenuPrimitive.RadioItem>
  )
}

function DropdownMenuLabel({
  className,
  inset,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Label> & {
  inset?: boolean
}) {
  return (
    <DropdownMenuPrimitive.Label
      data-slot="dropdown-menu-label"
      data-inset={inset}
      className={cn(
        "px-2 py-1.5 text-sm font-semibold data-[inset]:pl-8",
        className
      )}
      {...props}
    />
  )
}

function DropdownMenuSeparator({
  className,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Separator>) {
  return (
    <DropdownMenuPrimitive.Separator
      data-slot="dropdown-menu-separator"
      className={cn("bg-border -mx-1 my-1 h-px", className)}
      {...props}
    />
  )
}

function DropdownMenuShortcut({
  className,
  ...props
}: React.ComponentProps<"span">) {
  return (
    <span
      data-slot="dropdown-menu-shortcut"
      className={cn(
        "text-muted-foreground ml-auto text-xs tracking-widest",
        className
      )}
      {...props}
    />
  )
}

function DropdownMenuSub({
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.Sub>) {
  return <DropdownMenuPrimitive.Sub data-slot="dropdown-menu-sub" {...props} />
}

function DropdownMenuSubTrigger({
  className,
  inset,
  children,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.SubTrigger> & {
  inset?: boolean
}) {
  return (
    <DropdownMenuPrimitive.SubTrigger
      data-slot="dropdown-menu-sub-trigger"
      data-inset={inset}
      className={cn(
        "focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8",
        className
      )}
      {...props}
    >
      {children}
      <ChevronRightIcon className="ml-auto size-4" />
    </DropdownMenuPrimitive.SubTrigger>
  )
}

function DropdownMenuSubContent({
  className,
  ...props
}: React.ComponentProps<typeof DropdownMenuPrimitive.SubContent>) {
  return (
    <DropdownMenuPrimitive.SubContent
      data-slot="dropdown-menu-sub-content"
      className={cn(
        "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] overflow-hidden rounded-md border p-1 shadow-lg",
        className
      )}
      {...props}
    />
  )
}

export {
  DropdownMenu,
  DropdownMenuPortal,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuGroup,
  DropdownMenuLabel,
  DropdownMenuItem,
  DropdownMenuCheckboxItem,
  DropdownMenuRadioGroup,
  DropdownMenuRadioItem,
  DropdownMenuSeparator,
  DropdownMenuShortcut,
  DropdownMenuSub,
  DropdownMenuSubTrigger,
  DropdownMenuSubContent,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\form.tsx
// --------------------
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"
import { Slot } from "@radix-ui/react-slot"
import {
  Controller,
  ControllerProps,
  FieldPath,
  FieldValues,
  FormProvider,
  useFormContext,
  useFormState,
} from "react-hook-form"

import { cn } from "@/lib/utils"
import { Label } from "@/components/ui/label"

const Form = FormProvider

type FormFieldContextValue<
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
> = {
  name: TName
}

const FormFieldContext = React.createContext<FormFieldContextValue>(
  {} as FormFieldContextValue
)

const FormField = <
  TFieldValues extends FieldValues = FieldValues,
  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
>({
  ...props
}: ControllerProps<TFieldValues, TName>) => {
  return (
    <FormFieldContext.Provider value={{ name: props.name }}>
      <Controller {...props} />
    </FormFieldContext.Provider>
  )
}

const useFormField = () => {
  const fieldContext = React.useContext(FormFieldContext)
  const itemContext = React.useContext(FormItemContext)
  const { getFieldState } = useFormContext()
  const formState = useFormState({ name: fieldContext.name })
  const fieldState = getFieldState(fieldContext.name, formState)

  if (!fieldContext) {
    throw new Error("useFormField should be used within <FormField>")
  }

  const { id } = itemContext

  return {
    id,
    name: fieldContext.name,
    formItemId: `${id}-form-item`,
    formDescriptionId: `${id}-form-item-description`,
    formMessageId: `${id}-form-item-message`,
    ...fieldState,
  }
}

type FormItemContextValue = {
  id: string
}

const FormItemContext = React.createContext<FormItemContextValue>(
  {} as FormItemContextValue
)

function FormItem({ className, ...props }: React.ComponentProps<"div">) {
  const id = React.useId()

  return (
    <FormItemContext.Provider value={{ id }}>
      <div
        data-slot="form-item"
        className={cn("grid gap-2", className)}
        {...props}
      />
    </FormItemContext.Provider>
  )
}

function FormLabel({
  className,
  ...props
}: React.ComponentProps<typeof LabelPrimitive.Root>) {
  const { error, formItemId } = useFormField()

  return (
    <Label
      data-slot="form-label"
      data-error={!!error}
      className={cn("data-[error=true]:text-destructive", className)}
      htmlFor={formItemId}
      {...props}
    />
  )
}

function FormControl({ ...props }: React.ComponentProps<typeof Slot>) {
  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()

  return (
    <Slot
      data-slot="form-control"
      id={formItemId}
      aria-describedby={
        !error
          ? `${formDescriptionId}`
          : `${formDescriptionId} ${formMessageId}`
      }
      aria-invalid={!!error}
      {...props}
    />
  )
}

function FormDescription({ className, ...props }: React.ComponentProps<"p">) {
  const { formDescriptionId } = useFormField()

  return (
    <p
      data-slot="form-description"
      id={formDescriptionId}
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

function FormMessage({ className, ...props }: React.ComponentProps<"p">) {
  const { error, formMessageId } = useFormField()
  const body = error ? String(error?.message) : props.children

  if (!body) {
    return null
  }

  return (
    <p
      data-slot="form-message"
      id={formMessageId}
      className={cn("text-destructive text-sm font-medium", className)}
      {...props}
    >
      {body}
    </p>
  )
}

export {
  useFormField,
  Form,
  FormItem,
  FormLabel,
  FormControl,
  FormDescription,
  FormMessage,
  FormField,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\hover-card.tsx
// --------------------
"use client"

import * as React from "react"
import * as HoverCardPrimitive from "@radix-ui/react-hover-card"

import { cn } from "@/lib/utils"

function HoverCard({
  ...props
}: React.ComponentProps<typeof HoverCardPrimitive.Root>) {
  return <HoverCardPrimitive.Root data-slot="hover-card" {...props} />
}

function HoverCardTrigger({
  ...props
}: React.ComponentProps<typeof HoverCardPrimitive.Trigger>) {
  return (
    <HoverCardPrimitive.Trigger data-slot="hover-card-trigger" {...props} />
  )
}

function HoverCardContent({
  className,
  align = "center",
  sideOffset = 4,
  ...props
}: React.ComponentProps<typeof HoverCardPrimitive.Content>) {
  return (
    <HoverCardPrimitive.Content
      data-slot="hover-card-content"
      align={align}
      sideOffset={sideOffset}
      className={cn(
        "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-64 rounded-md border p-4 shadow-md outline-hidden",
        className
      )}
      {...props}
    />
  )
}

export { HoverCard, HoverCardTrigger, HoverCardContent }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\input.tsx
// --------------------
import * as React from "react";

import { cn } from "@/lib/utils";

function Input({ className, type, ...props }: React.ComponentProps<"input">) {
  return (
    <input
      type={type}
      data-slot="input"
      className={cn(
        "border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground aria-invalid:outline-destructive/60 aria-invalid:ring-destructive/20 dark:aria-invalid:outline-destructive dark:aria-invalid:ring-destructive/50 ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 aria-invalid:outline-destructive/60 dark:aria-invalid:outline-destructive dark:aria-invalid:ring-destructive/40 aria-invalid:ring-destructive/20 aria-invalid:border-destructive/60 dark:aria-invalid:border-destructive flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium focus-visible:ring-4 focus-visible:outline-1 disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-[3px] aria-invalid:focus-visible:outline-none md:text-sm dark:aria-invalid:focus-visible:ring-4",
        className
      )}
      {...props}
    />
  );
}

export { Input };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\label.tsx
// --------------------
"use client"

import * as React from "react"
import * as LabelPrimitive from "@radix-ui/react-label"

import { cn } from "@/lib/utils"

function Label({
  className,
  ...props
}: React.ComponentProps<typeof LabelPrimitive.Root>) {
  return (
    <LabelPrimitive.Root
      data-slot="label"
      className={cn(
        "text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50",
        className
      )}
      {...props}
    />
  )
}

export { Label }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\navigation-menu.tsx
// --------------------
"use client"

import * as React from "react"
import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu"
import { cva } from "class-variance-authority"
import { ChevronDownIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function NavigationMenu({
  className,
  children,
  viewport = true,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Root> & {
  viewport?: boolean
}) {
  return (
    <NavigationMenuPrimitive.Root
      data-slot="navigation-menu"
      data-viewport={viewport}
      className={cn(
        "group/navigation-menu relative flex max-w-max flex-1 items-center justify-center",
        className
      )}
      {...props}
    >
      {children}
      {viewport && <NavigationMenuViewport />}
    </NavigationMenuPrimitive.Root>
  )
}

function NavigationMenuList({
  className,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.List>) {
  return (
    <NavigationMenuPrimitive.List
      data-slot="navigation-menu-list"
      className={cn(
        "group flex flex-1 list-none items-center justify-center gap-1",
        className
      )}
      {...props}
    />
  )
}

function NavigationMenuItem({
  className,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Item>) {
  return (
    <NavigationMenuPrimitive.Item
      data-slot="navigation-menu-item"
      className={cn("relative", className)}
      {...props}
    />
  )
}

const navigationMenuTriggerStyle = cva(
  "group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground disabled:pointer-events-none disabled:opacity-50 data-[active=true]:bg-accent/50 data-[state=open]:bg-accent/50 data-[active=true]:text-accent-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1"
)

function NavigationMenuTrigger({
  className,
  children,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Trigger>) {
  return (
    <NavigationMenuPrimitive.Trigger
      data-slot="navigation-menu-trigger"
      className={cn(navigationMenuTriggerStyle(), "group", className)}
      {...props}
    >
      {children}{" "}
      <ChevronDownIcon
        className="relative top-[1px] ml-1 size-3 transition duration-300 group-data-[state=open]:rotate-180"
        aria-hidden="true"
      />
    </NavigationMenuPrimitive.Trigger>
  )
}

function NavigationMenuContent({
  className,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Content>) {
  return (
    <NavigationMenuPrimitive.Content
      data-slot="navigation-menu-content"
      className={cn(
        "data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 top-0 left-0 w-full p-2 pr-2.5 md:absolute md:w-auto",
        "group-data-[viewport=false]/navigation-menu:bg-popover group-data-[viewport=false]/navigation-menu:text-popover-foreground group-data-[viewport=false]/navigation-menu:data-[state=open]:animate-in group-data-[viewport=false]/navigation-menu:data-[state=closed]:animate-out group-data-[viewport=false]/navigation-menu:data-[state=closed]:zoom-out-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:zoom-in-95 group-data-[viewport=false]/navigation-menu:data-[state=open]:fade-in-0 group-data-[viewport=false]/navigation-menu:data-[state=closed]:fade-out-0 group-data-[viewport=false]/navigation-menu:top-full group-data-[viewport=false]/navigation-menu:mt-1.5 group-data-[viewport=false]/navigation-menu:overflow-hidden group-data-[viewport=false]/navigation-menu:rounded-md group-data-[viewport=false]/navigation-menu:border group-data-[viewport=false]/navigation-menu:shadow group-data-[viewport=false]/navigation-menu:duration-200 **:data-[slot=navigation-menu-link]:focus:ring-0 **:data-[slot=navigation-menu-link]:focus:outline-none",
        className
      )}
      {...props}
    />
  )
}

function NavigationMenuViewport({
  className,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Viewport>) {
  return (
    <div
      className={cn(
        "absolute top-full left-0 isolate z-50 flex justify-center"
      )}
    >
      <NavigationMenuPrimitive.Viewport
        data-slot="navigation-menu-viewport"
        className={cn(
          "origin-top-center bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border shadow md:w-[var(--radix-navigation-menu-viewport-width)]",
          className
        )}
        {...props}
      />
    </div>
  )
}

function NavigationMenuLink({
  className,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Link>) {
  return (
    <NavigationMenuPrimitive.Link
      data-slot="navigation-menu-link"
      className={cn(
        "hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground data-[active=true]:bg-accent/50 data-[active=true]:text-accent-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground flex flex-col gap-1 rounded-sm p-2 text-sm transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    />
  )
}

function NavigationMenuIndicator({
  className,
  ...props
}: React.ComponentProps<typeof NavigationMenuPrimitive.Indicator>) {
  return (
    <NavigationMenuPrimitive.Indicator
      data-slot="navigation-menu-indicator"
      className={cn(
        "data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden",
        className
      )}
      {...props}
    >
      <div className="bg-border relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm shadow-md" />
    </NavigationMenuPrimitive.Indicator>
  )
}

export {
  NavigationMenu,
  NavigationMenuList,
  NavigationMenuItem,
  NavigationMenuContent,
  NavigationMenuTrigger,
  NavigationMenuLink,
  NavigationMenuIndicator,
  NavigationMenuViewport,
  navigationMenuTriggerStyle,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\pagination.tsx
// --------------------
import * as React from "react"
import {
  ChevronLeftIcon,
  ChevronRightIcon,
  MoreHorizontalIcon,
} from "lucide-react"

import { cn } from "@/lib/utils"
import { Button, buttonVariants } from "@/components/ui/button"

function Pagination({ className, ...props }: React.ComponentProps<"nav">) {
  return (
    <nav
      role="navigation"
      aria-label="pagination"
      data-slot="pagination"
      className={cn("mx-auto flex w-full justify-center", className)}
      {...props}
    />
  )
}

function PaginationContent({
  className,
  ...props
}: React.ComponentProps<"ul">) {
  return (
    <ul
      data-slot="pagination-content"
      className={cn("flex flex-row items-center gap-1", className)}
      {...props}
    />
  )
}

function PaginationItem({ ...props }: React.ComponentProps<"li">) {
  return <li data-slot="pagination-item" {...props} />
}

type PaginationLinkProps = {
  isActive?: boolean
} & Pick<React.ComponentProps<typeof Button>, "size"> &
  React.ComponentProps<"a">

function PaginationLink({
  className,
  isActive,
  size = "icon",
  ...props
}: PaginationLinkProps) {
  return (
    <a
      aria-current={isActive ? "page" : undefined}
      data-slot="pagination-link"
      data-active={isActive}
      className={cn(
        buttonVariants({
          variant: isActive ? "outline" : "ghost",
          size,
        }),
        className
      )}
      {...props}
    />
  )
}

function PaginationPrevious({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) {
  return (
    <PaginationLink
      aria-label="Go to previous page"
      size="default"
      className={cn("gap-1 px-2.5 sm:pl-2.5", className)}
      {...props}
    >
      <ChevronLeftIcon />
      <span className="hidden sm:block">Previous</span>
    </PaginationLink>
  )
}

function PaginationNext({
  className,
  ...props
}: React.ComponentProps<typeof PaginationLink>) {
  return (
    <PaginationLink
      aria-label="Go to next page"
      size="default"
      className={cn("gap-1 px-2.5 sm:pr-2.5", className)}
      {...props}
    >
      <span className="hidden sm:block">Next</span>
      <ChevronRightIcon />
    </PaginationLink>
  )
}

function PaginationEllipsis({
  className,
  ...props
}: React.ComponentProps<"span">) {
  return (
    <span
      aria-hidden
      data-slot="pagination-ellipsis"
      className={cn("flex size-9 items-center justify-center", className)}
      {...props}
    >
      <MoreHorizontalIcon className="size-4" />
      <span className="sr-only">More pages</span>
    </span>
  )
}

export {
  Pagination,
  PaginationContent,
  PaginationLink,
  PaginationItem,
  PaginationPrevious,
  PaginationNext,
  PaginationEllipsis,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\popover.tsx
// --------------------
"use client"

import * as React from "react"
import * as PopoverPrimitive from "@radix-ui/react-popover"

import { cn } from "@/lib/utils"

function Popover({
  ...props
}: React.ComponentProps<typeof PopoverPrimitive.Root>) {
  return <PopoverPrimitive.Root data-slot="popover" {...props} />
}

function PopoverTrigger({
  ...props
}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {
  return <PopoverPrimitive.Trigger data-slot="popover-trigger" {...props} />
}

function PopoverContent({
  className,
  align = "center",
  sideOffset = 4,
  ...props
}: React.ComponentProps<typeof PopoverPrimitive.Content>) {
  return (
    <PopoverPrimitive.Portal>
      <PopoverPrimitive.Content
        data-slot="popover-content"
        align={align}
        sideOffset={sideOffset}
        className={cn(
          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 rounded-md border p-4 shadow-md outline-hidden",
          className
        )}
        {...props}
      />
    </PopoverPrimitive.Portal>
  )
}

function PopoverAnchor({
  ...props
}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {
  return <PopoverPrimitive.Anchor data-slot="popover-anchor" {...props} />
}

export { Popover, PopoverTrigger, PopoverContent, PopoverAnchor }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\radio-group.tsx
// --------------------
"use client";

import * as React from "react";
import * as RadioGroupPrimitive from "@radix-ui/react-radio-group";
import { CircleIcon } from "lucide-react";

import { cn } from "@/lib/utils";

function RadioGroup({
  className,
  ...props
}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {
  return (
    <RadioGroupPrimitive.Root
      data-slot="radio-group"
      className={cn("grid gap-3", className)}
      {...props}
    />
  );
}

function RadioGroupItem({
  className,
  ...props
}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {
  return (
    <RadioGroupPrimitive.Item
      data-slot="radio-group-item"
      className={cn(
        "border-input text-primary ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-0",
        className
      )}
      {...props}
    >
      <RadioGroupPrimitive.Indicator
        data-slot="radio-group-indicator"
        className="relative flex items-center justify-center"
      >
        <CircleIcon className="fill-[#E25A6F] absolute top-1/2 left-1/2 size-3 -translate-x-1/2 -translate-y-1/2" />
      </RadioGroupPrimitive.Indicator>
    </RadioGroupPrimitive.Item>
  );
}

export { RadioGroup, RadioGroupItem };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\select.tsx
// --------------------
"use client";

import * as React from "react";
import * as SelectPrimitive from "@radix-ui/react-select";
import { CheckIcon, ChevronDownIcon, ChevronUpIcon } from "lucide-react";

import { cn } from "@/lib/utils";

function Select({
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Root>) {
  return <SelectPrimitive.Root data-slot="select" {...props} />;
}

function SelectGroup({
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Group>) {
  return <SelectPrimitive.Group data-slot="select-group" {...props} />;
}

function SelectValue({
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Value>) {
  return <SelectPrimitive.Value data-slot="select-value" {...props} />;
}

function SelectTrigger({
  className,
  children,
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Trigger>) {
  return (
    <SelectPrimitive.Trigger
      data-slot="select-trigger"
      className={cn(
        "border-input data-[placeholder]:text-muted-foreground aria-invalid:border-destructive ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 [&_svg:not([class*='text-'])]:text-muted-foreground flex h-9 w-full items-center justify-between rounded-md border bg-transparent px-3 py-2 text-sm shadow-xs transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-0 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 [&>span]:line-clamp-1",
        className
      )}
      {...props}
    >
      {children}
      <SelectPrimitive.Icon asChild>
        <ChevronDownIcon className="size-4 opacity-50" />
      </SelectPrimitive.Icon>
    </SelectPrimitive.Trigger>
  );
}

function SelectContent({
  className,
  children,
  position = "popper",
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Content>) {
  return (
    <SelectPrimitive.Portal>
      <SelectPrimitive.Content
        data-slot="select-content"
        className={cn(
          "bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border shadow-md",
          position === "popper" &&
            "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
          className
        )}
        position={position}
        {...props}
      >
        <SelectScrollUpButton />
        <SelectPrimitive.Viewport
          className={cn(
            "p-1",
            position === "popper" &&
              "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1"
          )}
        >
          {children}
        </SelectPrimitive.Viewport>
        <SelectScrollDownButton />
      </SelectPrimitive.Content>
    </SelectPrimitive.Portal>
  );
}

function SelectLabel({
  className,
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Label>) {
  return (
    <SelectPrimitive.Label
      data-slot="select-label"
      className={cn("px-2 py-1.5 text-sm font-semibold", className)}
      {...props}
    />
  );
}

function SelectItem({
  className,
  children,
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Item>) {
  return (
    <SelectPrimitive.Item
      data-slot="select-item"
      className={cn(
        "focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2",
        className
      )}
      {...props}
    >
      <span className="absolute right-2 flex size-3.5 items-center justify-center">
        <SelectPrimitive.ItemIndicator>
          <CheckIcon className="size-4" />
        </SelectPrimitive.ItemIndicator>
      </span>
      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
    </SelectPrimitive.Item>
  );
}

function SelectSeparator({
  className,
  ...props
}: React.ComponentProps<typeof SelectPrimitive.Separator>) {
  return (
    <SelectPrimitive.Separator
      data-slot="select-separator"
      className={cn("bg-border pointer-events-none -mx-1 my-1 h-px", className)}
      {...props}
    />
  );
}

function SelectScrollUpButton({
  className,
  ...props
}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {
  return (
    <SelectPrimitive.ScrollUpButton
      data-slot="select-scroll-up-button"
      className={cn(
        "flex cursor-default items-center justify-center py-1",
        className
      )}
      {...props}
    >
      <ChevronUpIcon className="size-4" />
    </SelectPrimitive.ScrollUpButton>
  );
}

function SelectScrollDownButton({
  className,
  ...props
}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {
  return (
    <SelectPrimitive.ScrollDownButton
      data-slot="select-scroll-down-button"
      className={cn(
        "flex cursor-default items-center justify-center py-1",
        className
      )}
      {...props}
    >
      <ChevronDownIcon className="size-4" />
    </SelectPrimitive.ScrollDownButton>
  );
}

export {
  Select,
  SelectContent,
  SelectGroup,
  SelectItem,
  SelectLabel,
  SelectScrollDownButton,
  SelectScrollUpButton,
  SelectSeparator,
  SelectTrigger,
  SelectValue,
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\separator.tsx
// --------------------
"use client"

import * as React from "react"
import * as SeparatorPrimitive from "@radix-ui/react-separator"

import { cn } from "@/lib/utils"

function Separator({
  className,
  orientation = "horizontal",
  decorative = true,
  ...props
}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {
  return (
    <SeparatorPrimitive.Root
      data-slot="separator-root"
      decorative={decorative}
      orientation={orientation}
      className={cn(
        "bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px",
        className
      )}
      {...props}
    />
  )
}

export { Separator }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\sheet.tsx
// --------------------
"use client"

import * as React from "react"
import * as SheetPrimitive from "@radix-ui/react-dialog"
import { XIcon } from "lucide-react"

import { cn } from "@/lib/utils"

function Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {
  return <SheetPrimitive.Root data-slot="sheet" {...props} />
}

function SheetTrigger({
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {
  return <SheetPrimitive.Trigger data-slot="sheet-trigger" {...props} />
}

function SheetClose({
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Close>) {
  return <SheetPrimitive.Close data-slot="sheet-close" {...props} />
}

function SheetPortal({
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Portal>) {
  return <SheetPrimitive.Portal data-slot="sheet-portal" {...props} />
}

function SheetOverlay({
  className,
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {
  return (
    <SheetPrimitive.Overlay
      data-slot="sheet-overlay"
      className={cn(
        "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/80",
        className
      )}
      {...props}
    />
  )
}

function SheetContent({
  className,
  children,
  side = "right",
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Content> & {
  side?: "top" | "right" | "bottom" | "left"
}) {
  return (
    <SheetPortal>
      <SheetOverlay />
      <SheetPrimitive.Content
        data-slot="sheet-content"
        className={cn(
          "bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500",
          side === "right" &&
            "data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm",
          side === "left" &&
            "data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm",
          side === "top" &&
            "data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b",
          side === "bottom" &&
            "data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t",
          className
        )}
        {...props}
      >
        {children}
        <SheetPrimitive.Close className="ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none">
          <XIcon className="size-4" />
          <span className="sr-only">Close</span>
        </SheetPrimitive.Close>
      </SheetPrimitive.Content>
    </SheetPortal>
  )
}

function SheetHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sheet-header"
      className={cn("flex flex-col gap-1.5 p-4", className)}
      {...props}
    />
  )
}

function SheetFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sheet-footer"
      className={cn("mt-auto flex flex-col gap-2 p-4", className)}
      {...props}
    />
  )
}

function SheetTitle({
  className,
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Title>) {
  return (
    <SheetPrimitive.Title
      data-slot="sheet-title"
      className={cn("text-foreground font-semibold tracking-tight", className)}
      {...props}
    />
  )
}

function SheetDescription({
  className,
  ...props
}: React.ComponentProps<typeof SheetPrimitive.Description>) {
  return (
    <SheetPrimitive.Description
      data-slot="sheet-description"
      className={cn("text-muted-foreground text-sm", className)}
      {...props}
    />
  )
}

export {
  Sheet,
  SheetTrigger,
  SheetClose,
  SheetContent,
  SheetHeader,
  SheetFooter,
  SheetTitle,
  SheetDescription,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\sidebar.tsx
// --------------------
"use client"

import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { VariantProps, cva } from "class-variance-authority"
import { PanelLeftIcon } from "lucide-react"

import { useIsMobile } from "@/hooks/use-mobile"
import { cn } from "@/lib/utils"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Separator } from "@/components/ui/separator"
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetHeader,
  SheetTitle,
} from "@/components/ui/sheet"
import { Skeleton } from "@/components/ui/skeleton"
import {
  Tooltip,
  TooltipContent,
  TooltipProvider,
  TooltipTrigger,
} from "@/components/ui/tooltip"

const SIDEBAR_COOKIE_NAME = "sidebar_state"
const SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7
const SIDEBAR_WIDTH = "16rem"
const SIDEBAR_WIDTH_MOBILE = "18rem"
const SIDEBAR_WIDTH_ICON = "3rem"
const SIDEBAR_KEYBOARD_SHORTCUT = "b"

type SidebarContext = {
  state: "expanded" | "collapsed"
  open: boolean
  setOpen: (open: boolean) => void
  openMobile: boolean
  setOpenMobile: (open: boolean) => void
  isMobile: boolean
  toggleSidebar: () => void
}

const SidebarContext = React.createContext<SidebarContext | null>(null)

function useSidebar() {
  const context = React.useContext(SidebarContext)
  if (!context) {
    throw new Error("useSidebar must be used within a SidebarProvider.")
  }

  return context
}

const SidebarProvider = React.forwardRef<
  HTMLDivElement,
  React.ComponentProps<"div"> & {
    defaultOpen?: boolean
    open?: boolean
    onOpenChange?: (open: boolean) => void
  }
>(
  (
    {
      defaultOpen = true,
      open: openProp,
      onOpenChange: setOpenProp,
      className,
      style,
      children,
      ...props
    },
    ref
  ) => {
    const isMobile = useIsMobile()
    const [openMobile, setOpenMobile] = React.useState(false)

    // This is the internal state of the sidebar.
    // We use openProp and setOpenProp for control from outside the component.
    const [_open, _setOpen] = React.useState(defaultOpen)
    const open = openProp ?? _open
    const setOpen = React.useCallback(
      (value: boolean | ((value: boolean) => boolean)) => {
        const openState = typeof value === "function" ? value(open) : value
        if (setOpenProp) {
          setOpenProp(openState)
        } else {
          _setOpen(openState)
        }

        // This sets the cookie to keep the sidebar state.
        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`
      },
      [setOpenProp, open]
    )

    // Helper to toggle the sidebar.
    const toggleSidebar = React.useCallback(() => {
      return isMobile
        ? setOpenMobile((open) => !open)
        : setOpen((open) => !open)
    }, [isMobile, setOpen, setOpenMobile])

    // Adds a keyboard shortcut to toggle the sidebar.
    React.useEffect(() => {
      const handleKeyDown = (event: KeyboardEvent) => {
        if (
          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&
          (event.metaKey || event.ctrlKey)
        ) {
          event.preventDefault()
          toggleSidebar()
        }
      }

      window.addEventListener("keydown", handleKeyDown)
      return () => window.removeEventListener("keydown", handleKeyDown)
    }, [toggleSidebar])

    // We add a state so that we can do data-state="expanded" or "collapsed".
    // This makes it easier to style the sidebar with Tailwind classes.
    const state = open ? "expanded" : "collapsed"

    const contextValue = React.useMemo<SidebarContext>(
      () => ({
        state,
        open,
        setOpen,
        isMobile,
        openMobile,
        setOpenMobile,
        toggleSidebar,
      }),
      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]
    )

    return (
      <SidebarContext.Provider value={contextValue}>
        <TooltipProvider delayDuration={0}>
          <div
            data-slot="sidebar-wrapper"
            style={
              {
                "--sidebar-width": SIDEBAR_WIDTH,
                "--sidebar-width-icon": SIDEBAR_WIDTH_ICON,
                ...style,
              } as React.CSSProperties
            }
            className={cn(
              "group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full",
              className
            )}
            ref={ref}
            {...props}
          >
            {children}
          </div>
        </TooltipProvider>
      </SidebarContext.Provider>
    )
  }
)
SidebarProvider.displayName = "SidebarProvider"

function Sidebar({
  side = "left",
  variant = "sidebar",
  collapsible = "offcanvas",
  className,
  children,
  ...props
}: React.ComponentProps<"div"> & {
  side?: "left" | "right"
  variant?: "sidebar" | "floating" | "inset"
  collapsible?: "offcanvas" | "icon" | "none"
}) {
  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()

  if (collapsible === "none") {
    return (
      <div
        data-slot="sidebar"
        className={cn(
          "bg-sidebar text-sidebar-foreground flex h-full w-(--sidebar-width) flex-col",
          className
        )}
        {...props}
      >
        {children}
      </div>
    )
  }

  if (isMobile) {
    return (
      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>
        <SheetHeader className="sr-only">
          <SheetTitle>Sidebar</SheetTitle>
          <SheetDescription>Displays the mobile sidebar.</SheetDescription>
        </SheetHeader>
        <SheetContent
          data-sidebar="sidebar"
          data-slot="sidebar"
          data-mobile="true"
          className="bg-sidebar text-sidebar-foreground w-(--sidebar-width) p-0 [&>button]:hidden"
          style={
            {
              "--sidebar-width": SIDEBAR_WIDTH_MOBILE,
            } as React.CSSProperties
          }
          side={side}
        >
          <div className="flex h-full w-full flex-col">{children}</div>
        </SheetContent>
      </Sheet>
    )
  }

  return (
    <div
      className="group peer text-sidebar-foreground hidden md:block"
      data-state={state}
      data-collapsible={state === "collapsed" ? collapsible : ""}
      data-variant={variant}
      data-side={side}
      data-slot="sidebar"
    >
      {/* This is what handles the sidebar gap on desktop */}
      <div
        className={cn(
          "relative h-svh w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear",
          "group-data-[collapsible=offcanvas]:w-0",
          "group-data-[side=right]:rotate-180",
          variant === "floating" || variant === "inset"
            ? "group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]"
            : "group-data-[collapsible=icon]:w-(--sidebar-width-icon)"
        )}
      />
      <div
        className={cn(
          "fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex",
          side === "left"
            ? "left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]"
            : "right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]",
          // Adjust the padding for floating and inset variants.
          variant === "floating" || variant === "inset"
            ? "p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]"
            : "group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l",
          className
        )}
        {...props}
      >
        <div
          data-sidebar="sidebar"
          className="bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm"
        >
          {children}
        </div>
      </div>
    </div>
  )
}

function SidebarTrigger({
  className,
  onClick,
  ...props
}: React.ComponentProps<typeof Button>) {
  const { toggleSidebar } = useSidebar()

  return (
    <Button
      data-sidebar="trigger"
      data-slot="sidebar-trigger"
      variant="ghost"
      size="icon"
      className={cn("h-7 w-7", className)}
      onClick={(event) => {
        onClick?.(event)
        toggleSidebar()
      }}
      {...props}
    >
      <PanelLeftIcon />
      <span className="sr-only">Toggle Sidebar</span>
    </Button>
  )
}

function SidebarRail({ className, ...props }: React.ComponentProps<"button">) {
  const { toggleSidebar } = useSidebar()

  return (
    <button
      data-sidebar="rail"
      data-slot="sidebar-rail"
      aria-label="Toggle Sidebar"
      tabIndex={-1}
      onClick={toggleSidebar}
      title="Toggle Sidebar"
      className={cn(
        "hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex",
        "in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize",
        "[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize",
        "hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full",
        "[[data-side=left][data-collapsible=offcanvas]_&]:-right-2",
        "[[data-side=right][data-collapsible=offcanvas]_&]:-left-2",
        className
      )}
      {...props}
    />
  )
}

function SidebarInset({ className, ...props }: React.ComponentProps<"main">) {
  return (
    <main
      data-slot="sidebar-inset"
      className={cn(
        "bg-background relative flex min-h-svh flex-1 flex-col",
        "peer-data-[variant=inset]:min-h-[calc(100svh-(--spacing(4)))] md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2",
        className
      )}
      {...props}
    />
  )
}

function SidebarInput({
  className,
  ...props
}: React.ComponentProps<typeof Input>) {
  return (
    <Input
      data-slot="sidebar-input"
      data-sidebar="input"
      className={cn("bg-background h-8 w-full shadow-none", className)}
      {...props}
    />
  )
}

function SidebarHeader({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sidebar-header"
      data-sidebar="header"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
}

function SidebarFooter({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sidebar-footer"
      data-sidebar="footer"
      className={cn("flex flex-col gap-2 p-2", className)}
      {...props}
    />
  )
}

function SidebarSeparator({
  className,
  ...props
}: React.ComponentProps<typeof Separator>) {
  return (
    <Separator
      data-slot="sidebar-separator"
      data-sidebar="separator"
      className={cn("bg-sidebar-border mx-2 w-auto", className)}
      {...props}
    />
  )
}

function SidebarContent({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sidebar-content"
      data-sidebar="content"
      className={cn(
        "flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden",
        className
      )}
      {...props}
    />
  )
}

function SidebarGroup({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sidebar-group"
      data-sidebar="group"
      className={cn("relative flex w-full min-w-0 flex-col p-2", className)}
      {...props}
    />
  )
}

function SidebarGroupLabel({
  className,
  asChild = false,
  ...props
}: React.ComponentProps<"div"> & { asChild?: boolean }) {
  const Comp = asChild ? Slot : "div"

  return (
    <Comp
      data-slot="sidebar-group-label"
      data-sidebar="group-label"
      className={cn(
        "text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opa] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        "group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0",
        className
      )}
      {...props}
    />
  )
}

function SidebarGroupAction({
  className,
  asChild = false,
  ...props
}: React.ComponentProps<"button"> & { asChild?: boolean }) {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      data-slot="sidebar-group-action"
      data-sidebar="group-action"
      className={cn(
        "text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 md:after:hidden",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
}

function SidebarGroupContent({
  className,
  ...props
}: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sidebar-group-content"
      data-sidebar="group-content"
      className={cn("w-full text-sm", className)}
      {...props}
    />
  )
}

function SidebarMenu({ className, ...props }: React.ComponentProps<"ul">) {
  return (
    <ul
      data-slot="sidebar-menu"
      data-sidebar="menu"
      className={cn("flex w-full min-w-0 flex-col gap-1", className)}
      {...props}
    />
  )
}

function SidebarMenuItem({ className, ...props }: React.ComponentProps<"li">) {
  return (
    <li
      data-slot="sidebar-menu-item"
      data-sidebar="menu-item"
      className={cn("group/menu-item relative", className)}
      {...props}
    />
  )
}

const sidebarMenuButtonVariants = cva(
  "peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
  {
    variants: {
      variant: {
        default: "hover:bg-sidebar-accent hover:text-sidebar-accent-foreground",
        outline:
          "bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]",
      },
      size: {
        default: "h-8 text-sm",
        sm: "h-7 text-xs",
        lg: "h-12 text-sm group-data-[collapsible=icon]:p-0!",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

function SidebarMenuButton({
  asChild = false,
  isActive = false,
  variant = "default",
  size = "default",
  tooltip,
  className,
  ...props
}: React.ComponentProps<"button"> & {
  asChild?: boolean
  isActive?: boolean
  tooltip?: string | React.ComponentProps<typeof TooltipContent>
} & VariantProps<typeof sidebarMenuButtonVariants>) {
  const Comp = asChild ? Slot : "button"
  const { isMobile, state } = useSidebar()

  const button = (
    <Comp
      data-slot="sidebar-menu-button"
      data-sidebar="menu-button"
      data-size={size}
      data-active={isActive}
      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}
      {...props}
    />
  )

  if (!tooltip) {
    return button
  }

  if (typeof tooltip === "string") {
    tooltip = {
      children: tooltip,
    }
  }

  return (
    <Tooltip>
      <TooltipTrigger asChild>{button}</TooltipTrigger>
      <TooltipContent
        side="right"
        align="center"
        hidden={state !== "collapsed" || isMobile}
        {...tooltip}
      />
    </Tooltip>
  )
}

function SidebarMenuAction({
  className,
  asChild = false,
  showOnHover = false,
  ...props
}: React.ComponentProps<"button"> & {
  asChild?: boolean
  showOnHover?: boolean
}) {
  const Comp = asChild ? Slot : "button"

  return (
    <Comp
      data-slot="sidebar-menu-action"
      data-sidebar="menu-action"
      className={cn(
        "text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0",
        // Increases the hit area of the button on mobile.
        "after:absolute after:-inset-2 md:after:hidden",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        showOnHover &&
          "peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0",
        className
      )}
      {...props}
    />
  )
}

function SidebarMenuBadge({
  className,
  ...props
}: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="sidebar-menu-badge"
      data-sidebar="menu-badge"
      className={cn(
        "text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none",
        "peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground",
        "peer-data-[size=sm]/menu-button:top-1",
        "peer-data-[size=default]/menu-button:top-1.5",
        "peer-data-[size=lg]/menu-button:top-2.5",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
}

function SidebarMenuSkeleton({
  className,
  showIcon = false,
  ...props
}: React.ComponentProps<"div"> & {
  showIcon?: boolean
}) {
  // Random width between 50 to 90%.
  const width = React.useMemo(() => {
    return `${Math.floor(Math.random() * 40) + 50}%`
  }, [])

  return (
    <div
      data-slot="sidebar-menu-skeleton"
      data-sidebar="menu-skeleton"
      className={cn("flex h-8 items-center gap-2 rounded-md px-2", className)}
      {...props}
    >
      {showIcon && (
        <Skeleton
          className="size-4 rounded-md"
          data-sidebar="menu-skeleton-icon"
        />
      )}
      <Skeleton
        className="h-4 max-w-(--skeleton-width) flex-1"
        data-sidebar="menu-skeleton-text"
        style={
          {
            "--skeleton-width": width,
          } as React.CSSProperties
        }
      />
    </div>
  )
}

function SidebarMenuSub({ className, ...props }: React.ComponentProps<"ul">) {
  return (
    <ul
      data-slot="sidebar-menu-sub"
      data-sidebar="menu-sub"
      className={cn(
        "border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
}

function SidebarMenuSubItem({
  className,
  ...props
}: React.ComponentProps<"li">) {
  return (
    <li
      data-slot="sidebar-menu-sub-item"
      data-sidebar="menu-sub-item"
      className={cn("group/menu-sub-item relative", className)}
      {...props}
    />
  )
}

function SidebarMenuSubButton({
  asChild = false,
  size = "md",
  isActive = false,
  className,
  ...props
}: React.ComponentProps<"a"> & {
  asChild?: boolean
  size?: "sm" | "md"
  isActive?: boolean
}) {
  const Comp = asChild ? Slot : "a"

  return (
    <Comp
      data-slot="sidebar-menu-sub-button"
      data-sidebar="menu-sub-button"
      data-size={size}
      data-active={isActive}
      className={cn(
        "text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline-hidden focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0",
        "data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground",
        size === "sm" && "text-xs",
        size === "md" && "text-sm",
        "group-data-[collapsible=icon]:hidden",
        className
      )}
      {...props}
    />
  )
}

export {
  Sidebar,
  SidebarContent,
  SidebarFooter,
  SidebarGroup,
  SidebarGroupAction,
  SidebarGroupContent,
  SidebarGroupLabel,
  SidebarHeader,
  SidebarInput,
  SidebarInset,
  SidebarMenu,
  SidebarMenuAction,
  SidebarMenuBadge,
  SidebarMenuButton,
  SidebarMenuItem,
  SidebarMenuSkeleton,
  SidebarMenuSub,
  SidebarMenuSubButton,
  SidebarMenuSubItem,
  SidebarProvider,
  SidebarRail,
  SidebarSeparator,
  SidebarTrigger,
  useSidebar,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\skeleton.tsx
// --------------------
import { cn } from "@/lib/utils"

function Skeleton({ className, ...props }: React.ComponentProps<"div">) {
  return (
    <div
      data-slot="skeleton"
      className={cn("bg-primary/10 animate-pulse rounded-md", className)}
      {...props}
    />
  )
}

export { Skeleton }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\slider.tsx
// --------------------
"use client";

import * as React from "react";
import * as SliderPrimitive from "@radix-ui/react-slider";

import { cn } from "@/lib/utils";

function Slider({
  className,
  defaultValue,
  value,
  min = 0,
  max = 100,
  ...props
}: React.ComponentProps<typeof SliderPrimitive.Root>) {
  const _values = React.useMemo(
    () =>
      Array.isArray(value)
        ? value
        : Array.isArray(defaultValue)
          ? defaultValue
          : [min, max],
    [value, defaultValue, min, max]
  );

  return (
    <SliderPrimitive.Root
      data-slot="slider"
      defaultValue={defaultValue}
      value={value}
      min={min}
      max={max}
      className={cn(
        "relative flex w-full touch-none items-center select-none data-[disabled]:opacity-50 data-[orientation=vertical]:h-full data-[orientation=vertical]:min-h-44 data-[orientation=vertical]:w-auto data-[orientation=vertical]:flex-col",
        className
      )}
      {...props}
    >
      <SliderPrimitive.Track
        data-slot="slider-track"
        className={cn(
          "bg-primary relative grow overflow-hidden rounded-full data-[orientation=horizontal]:h-1.5 data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-1.5"
        )}
      >
        <SliderPrimitive.Range
          data-slot="slider-range"
          className={cn(
            "bg-[#E25A6F] absolute data-[orientation=horizontal]:h-full data-[orientation=vertical]:w-full"
          )}
        />
      </SliderPrimitive.Track>
      {Array.from({ length: _values.length }, (_, index) => (
        <SliderPrimitive.Thumb
          data-slot="slider-thumb"
          key={index}
          className="border-primary bg-gray-300 ring-ring/20 block size-4 shrink-0 rounded-full border shadow-sm transition-[color,box-shadow] hover:ring-4 focus-visible:ring-4 focus-visible:outline-hidden disabled:pointer-events-none disabled:opacity-50"
        />
      ))}
    </SliderPrimitive.Root>
  );
}

export { Slider };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\sonner.tsx
// --------------------
"use client"

import { useTheme } from "next-themes"
import { Toaster as Sonner, ToasterProps } from "sonner"

const Toaster = ({ ...props }: ToasterProps) => {
  const { theme = "system" } = useTheme()

  return (
    <Sonner
      theme={theme as ToasterProps["theme"]}
      className="toaster group"
      toastOptions={{
        classNames: {
          toast:
            "group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg",
          description: "group-[.toast]:text-muted-foreground",
          actionButton:
            "group-[.toast]:bg-primary group-[.toast]:text-primary-foreground",
          cancelButton:
            "group-[.toast]:bg-muted group-[.toast]:text-muted-foreground",
        },
      }}
      {...props}
    />
  )
}

export { Toaster }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\switch.tsx
// --------------------
"use client"

import * as React from "react"
import * as SwitchPrimitive from "@radix-ui/react-switch"

import { cn } from "@/lib/utils"

function Switch({
  className,
  ...props
}: React.ComponentProps<typeof SwitchPrimitive.Root>) {
  return (
    <SwitchPrimitive.Root
      data-slot="switch"
      className={cn(
        "peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 inline-flex h-5 w-9 shrink-0 items-center rounded-full border-2 border-transparent shadow-xs transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-hidden focus-visible:outline-1 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-0",
        className
      )}
      {...props}
    >
      <SwitchPrimitive.Thumb
        data-slot="switch-thumb"
        className={cn(
          "bg-background pointer-events-none block size-4 rounded-full ring-0 shadow-lg transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0"
        )}
      />
    </SwitchPrimitive.Root>
  )
}

export { Switch }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\table.tsx
// --------------------
"use client"

import * as React from "react"

import { cn } from "@/lib/utils"

function Table({ className, ...props }: React.ComponentProps<"table">) {
  return (
    <div className="relative w-full overflow-auto">
      <table
        data-slot="table"
        className={cn("w-full caption-bottom text-sm", className)}
        {...props}
      />
    </div>
  )
}

function TableHeader({ className, ...props }: React.ComponentProps<"thead">) {
  return (
    <thead
      data-slot="table-header"
      className={cn("[&_tr]:border-b", className)}
      {...props}
    />
  )
}

function TableBody({ className, ...props }: React.ComponentProps<"tbody">) {
  return (
    <tbody
      data-slot="table-body"
      className={cn("[&_tr:last-child]:border-0", className)}
      {...props}
    />
  )
}

function TableFooter({ className, ...props }: React.ComponentProps<"tfoot">) {
  return (
    <tfoot
      data-slot="table-footer"
      className={cn(
        "bg-muted/50 border-t font-medium [&>tr]:last:border-b-0",
        className
      )}
      {...props}
    />
  )
}

function TableRow({ className, ...props }: React.ComponentProps<"tr">) {
  return (
    <tr
      data-slot="table-row"
      className={cn(
        "hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors",
        className
      )}
      {...props}
    />
  )
}

function TableHead({ className, ...props }: React.ComponentProps<"th">) {
  return (
    <th
      data-slot="table-head"
      className={cn(
        "text-muted-foreground h-10 px-2 text-left align-middle font-medium [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
        className
      )}
      {...props}
    />
  )
}

function TableCell({ className, ...props }: React.ComponentProps<"td">) {
  return (
    <td
      data-slot="table-cell"
      className={cn(
        "p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
        className
      )}
      {...props}
    />
  )
}

function TableCaption({
  className,
  ...props
}: React.ComponentProps<"caption">) {
  return (
    <caption
      data-slot="table-caption"
      className={cn("text-muted-foreground mt-4 text-sm", className)}
      {...props}
    />
  )
}

export {
  Table,
  TableHeader,
  TableBody,
  TableFooter,
  TableHead,
  TableRow,
  TableCell,
  TableCaption,
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\tabs.tsx
// --------------------
"use client"

import * as React from "react"
import * as TabsPrimitive from "@radix-ui/react-tabs"

import { cn } from "@/lib/utils"

function Tabs({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.Root>) {
  return (
    <TabsPrimitive.Root
      data-slot="tabs"
      className={cn("flex flex-col gap-2", className)}
      {...props}
    />
  )
}

function TabsList({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.List>) {
  return (
    <TabsPrimitive.List
      data-slot="tabs-list"
      className={cn(
        "bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-1",
        className
      )}
      {...props}
    />
  )
}

function TabsTrigger({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {
  return (
    <TabsPrimitive.Trigger
      data-slot="tabs-trigger"
      className={cn(
        "data-[state=active]:bg-background data-[state=active]:text-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 inline-flex items-center justify-center gap-2 rounded-md px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 aria-invalid:focus-visible:ring-0 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4",
        className
      )}
      {...props}
    />
  )
}

function TabsContent({
  className,
  ...props
}: React.ComponentProps<typeof TabsPrimitive.Content>) {
  return (
    <TabsPrimitive.Content
      data-slot="tabs-content"
      className={cn(
        "ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 flex-1 transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 aria-invalid:focus-visible:ring-0",
        className
      )}
      {...props}
    />
  )
}

export { Tabs, TabsList, TabsTrigger, TabsContent }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\textarea.tsx
// --------------------
import * as React from "react"

import { cn } from "@/lib/utils"

function Textarea({ className, ...props }: React.ComponentProps<"textarea">) {
  return (
    <textarea
      data-slot="textarea"
      className={cn(
        "border-input placeholder:text-muted-foreground ring-ring/10 dark:ring-ring/20 dark:outline-ring/40 outline-ring/50 aria-invalid:outline-destructive/60 dark:aria-invalid:outline-destructive dark:aria-invalid:ring-destructive/40 aria-invalid:ring-destructive/20 aria-invalid:border-destructive/60 dark:aria-invalid:border-destructive dark:aria-invalid:ring-destructive/50 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] focus-visible:ring-4 focus-visible:outline-1 disabled:cursor-not-allowed disabled:opacity-50 aria-invalid:focus-visible:ring-[3px] aria-invalid:focus-visible:outline-none md:text-sm dark:aria-invalid:focus-visible:ring-4",
        className
      )}
      {...props}
    />
  )
}

export { Textarea }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\components\ui\tooltip.tsx
// --------------------
"use client"

import * as React from "react"
import * as TooltipPrimitive from "@radix-ui/react-tooltip"

import { cn } from "@/lib/utils"

function TooltipProvider({
  delayDuration = 0,
  ...props
}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {
  return (
    <TooltipPrimitive.Provider
      data-slot="tooltip-provider"
      delayDuration={delayDuration}
      {...props}
    />
  )
}

function Tooltip({
  ...props
}: React.ComponentProps<typeof TooltipPrimitive.Root>) {
  return (
    <TooltipProvider>
      <TooltipPrimitive.Root data-slot="tooltip" {...props} />
    </TooltipProvider>
  )
}

function TooltipTrigger({
  ...props
}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {
  return <TooltipPrimitive.Trigger data-slot="tooltip-trigger" {...props} />
}

function TooltipContent({
  className,
  sideOffset = 4,
  children,
  ...props
}: React.ComponentProps<typeof TooltipPrimitive.Content>) {
  return (
    <TooltipPrimitive.Portal>
      <TooltipPrimitive.Content
        data-slot="tooltip-content"
        sideOffset={sideOffset}
        className={cn(
          "bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-w-sm rounded-md px-3 py-1.5 text-xs",
          className
        )}
        {...props}
      >
        {children}
        <TooltipPrimitive.Arrow className="bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]" />
      </TooltipPrimitive.Content>
    </TooltipPrimitive.Portal>
  )
}

export { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\utils\cookieHelper.ts
// --------------------
import { authAccessKey } from "@/constant/authkey";
import Cookies from "js-cookie";

const COOKIE_EXPIRATION_DAYS = 7;

export const setCookie = (
  key: string = authAccessKey,
  value: string | object,
  days: number = COOKIE_EXPIRATION_DAYS
) => {
  const cookieValue = typeof value === "object" ? JSON.stringify(value) : value;
  Cookies.set(key, cookieValue, {
    expires: days,
    secure: true,
    sameSite: "strict",
  });
};

export const getCookie = <T = string>(key: string): T | null => {
  const cookie = Cookies.get(key);
  if (!cookie) return null;

  try {
    return JSON.parse(cookie) as T; // Try to parse JSON if stored as an object
  } catch {
    return cookie as T; // Return as string if parsing fails
  }
};

export const removeCookie = (key: string) => {
  Cookies.remove(key);
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\utils\imageUploadCloudinary.ts
// --------------------
import { message } from "antd";

const CLOUDINARY_URL = `https://api.cloudinary.com/v1_1/${
  import.meta.env.VITE_CLOUDINARY_CLOUD_NAME
}/image/upload`;

// define file name
const generateFileName = (): string => {
  const now = new Date();

  const year = now.getFullYear();
  const month = (now.getMonth() + 1).toString().padStart(2, "0");
  const date = now.getDate().toString().padStart(2, "0");

  let hours = now.getHours();
  const minutes = now.getMinutes().toString().padStart(2, "0");
  const seconds = now.getSeconds().toString().padStart(2, "0");

  const ampm = hours >= 12 ? "pm" : "am";
  hours = hours % 12 || 12;

  const randomId = Math.floor(Math.random() * 1000000).toString();

  return `${month}-${date}-${year}-${hours}-${minutes}-${seconds}-${ampm}-${randomId}`;
};

// define image upload
const imageUploadCloudinary = async (file: File): Promise<string> => {
  if (!file) {
    message.error("File not found.");
  }
  //if image exist
  if (file) {
    const fileName = generateFileName();
    const formData = new FormData();
    formData.append("file", file);
    formData.append(
      "upload_preset",
      `${import.meta.env.VITE_CLOUDINARY_UPLOAD_PRESET}`
    );
    formData.append("public_id", fileName);

    const response = await fetch(CLOUDINARY_URL, {
      method: "POST",
      body: formData,
    });

    if (!response.ok) {
      message.error("Failed to upload image to Cloudinary.");
    }

    const data = await response.json();
    return data.secure_url;
  } else {
    //throw new error if not exist
    message.error("File not found.");
    throw new Error("File not found.");
  }
};

export default imageUploadCloudinary;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\utils\tokenHelper.ts
// --------------------
// File: src/utils/tokenHelper.ts
import { jwtDecode } from "jwt-decode";

export type TUser = {
  userId: number;
  email: string;
  role: string;
  iat: number;
  exp: number;
};

// Decode JWT and get user details
export const decodeToken = (token: string | null): TUser | null => {
  if (!token) return null;
  try {
    return jwtDecode<TUser>(token);
  } catch (error) {
    console.error("Invalid token", error);
    return null;
  }
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\types\index.ts
// --------------------
// File: src/types/index.ts
export type IMeta = {
  page: number;
  limit: number;
  total: number;
  totalPage?: number;
};

export type ResponseSuccessType = {
  data: any;
  meta?: IMeta;
};

export type IGenericErrorResponse = {
  status?: number;
  statusCode?: number;
  data?: string;
  message?: string;
  errorMessages?: IGenericErrorMessage[];
};

export type IGenericErrorMessage = {
  path: string | number;
  message: string;
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\constant\authkey.ts
// --------------------
export const authAccessKey = "SOHOZ_NIKAH_ACCESS_TOKEN";
export const authRefreshKey = "SOHOZ_NIKAH_REFRESH_TOKEN";


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\constant\role.ts
// --------------------
export const USER_ROLE = {
  SUPER_ADMIN: "SUPER_ADMIN",
  ADMIN: "ADMIN",
  USER: "USER",
};


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\lib\consts.ts
// --------------------
export const biodataTypes = [
  { id: "1", title: "পাত্রের বায়োডাটা" },
  { id: "2", title: "পাত্রীর বায়োডাটা" },
];

export const maritalStatuses = [
  { id: "1", title: "অবিবাহিত", for: ["1", "2"] },
  { id: "2", title: "ডিভোর্সড", for: ["1", "2"] },
  { id: "3", title: "বিপত্নীক", for: ["1"] },
  { id: "4", title: "বিবাহিত", for: ["1"] },
  { id: "5", title: "বিধবা", for: ["2"] },
];

export const muslimTypes = [
  { id: "1", title: "জেনারেল/নন-প্রাক্টিসিং" },
  { id: "2", title: "প্রাক্টিসিংয়ে চেষ্টারত" },
  { id: "3", title: "পূর্ণ ধার্মিক/ প্র্যাক্টিসিং" },
];

export const skinTones = [
  { id: "1", title: "গাঢ় ত্বক" },
  { id: "2", title: "শ্যামলা" },
  { id: "3", title: "উজ্জ্বল শ্যামলা" },
  { id: "4", title: "ফর্সা" },
  { id: "5", title: "উজ্জ্বল ফর্সা" },
];

export const heights = [
  { id: "47", title: "৪ ফুটের কম" },
  { id: "48", title: "৪'" },
  { id: "49", title: "৪'১\"" },
  { id: "50", title: "৪'২\"" },
  { id: "51", title: "৪'৩\"" },
  { id: "52", title: "৪'৪\"" },
  { id: "53", title: "৪'৫\"" },
  { id: "54", title: "৪'৬\"" },
  { id: "55", title: "৪'৭\"" },
  { id: "56", title: "৪'৮\"" },
  { id: "57", title: "৪'৯\"" },
  { id: "58", title: "৪'১০\"" },
  { id: "59", title: "৪'১১\"" },
  { id: "60", title: "৫'" },
  { id: "61", title: "৫'১\"" },
  { id: "62", title: "৫'২\"" },
  { id: "63", title: "৫'৩\"" },
  { id: "64", title: "৫'৪\"" },
  { id: "65", title: "৫'৫\"" },
  { id: "66", title: "৫'৬\"" },
  { id: "67", title: "৫'৭\"" },
  { id: "68", title: "৫'৮\"" },
  { id: "69", title: "৫'৯\"" },
  { id: "70", title: "৫'১০\"" },
  { id: "71", title: "৫'১১\"" },
  { id: "72", title: "৬'" },
  { id: "73", title: "৬'১\"" },
  { id: "74", title: "৬'২\"" },
  { id: "75", title: "৬'৩\"" },
  { id: "76", title: "৬'৪\"" },
  { id: "77", title: "৬'৫\"" },
  { id: "78", title: "৬'৬\"" },
  { id: "79", title: "৬'৭\"" },
  { id: "80", title: "৬'৮\"" },
  { id: "81", title: "৬'৯\"" },
  { id: "82", title: "৬'১০\"" },
  { id: "83", title: "৬'১১\"" },
  { id: "84", title: "৭'" },
  { id: "85", title: "৭ ফুটের বেশি" },
];

export const bloodGroups = [
  { id: "1", title: "A+" },
  { id: "2", title: "A-" },
  { id: "3", title: "B+" },
  { id: "4", title: "B-" },
  { id: "5", title: "AB+" },
  { id: "6", title: "AB-" },
  { id: "7", title: "O+" },
  { id: "8", title: "O-" },
];

export const nationalities = [
  { id: "1", title: "বাংলাদেশী" },
  { id: "2", title: "ফরেইন সিটিজেন" },
];

export const types = [
  { id: "1", title: "স্থায়ী ঠিকানা" },
  { id: "2", title: "বর্তমান ঠিকানা" },
];

export const locations = [
  { id: "1", title: "বাংলাদেশ" },
  { id: "2", title: "বিদেশ" },
];

export const citizenshipOptions = [
  { id: "1", title: "হ্যা" },
  { id: "2", title: "না" },
];

export const educationTypes = [
  { id: "1", title: "জেনারেল" },
  { id: "2", title: "আলিয়া" },
  { id: "3", title: "কওমী" },
];

export const occupationsList = [
  { id: "1", title: "ব্যাবসা" },
  { id: "2", title: "সরকারি চাকরিজীবী" },
  { id: "3", title: "বেসরকারি চাকরিজীবী" },
  { id: "4", title: "হোম টিউটর" },
  { id: "5", title: "শিক্ষক/শিক্ষিকা" },
  { id: "6", title: "আইনজীবী" },
  { id: "7", title: "ইঞ্জিনিয়ার" },
  { id: "8", title: "ডাক্তার" },
  { id: "9", title: "নার্স" },
  { id: "10", title: "ফার্মাসিস্ট" },
  { id: "11", title: "প্যারামেডিক" },
  { id: "12", title: "থেরাপিস্ট" },
  { id: "13", title: "মেডিকেল টেকনোলজিস্ট " },
  { id: "14", title: "মেডিক্যাল অ্যাসিস্ট্যান্ট " },
  { id: "15", title: "সামরিক জব" },
  { id: "16", title: "বেসামরিক জব" },
  { id: "17", title: "আধা সামরিক জব" },
  { id: "18", title: "ইমাম" },
  { id: "19", title: "মুয়াজ্জিন" },
  { id: "20", title: "পাইলট" },
  { id: "21", title: "ফ্রিল্যান্সার" },
  { id: "22", title: "শিক্ষার্থী" },
  { id: "23", title: "MBBS/BDS শিক্ষার্থী" },
  { id: "24", title: "প্রবাসী-প্রবাস জব" },
  { id: "25", title: "মিস্ত্রী/কায়িক শ্রম" },
  { id: "26", title: "কৃষিকাজ" },
  { id: "27", title: "খামারি" },
  { id: "28", title: "চাকরির সন্ধানরত/বেকার" },
  { id: "29", title: "পারিবারিক সম্পত্তি" },
  { id: "30", title: "পেশা নেই/কর্মহীন" },
  { id: "31", title: "অন্যান্য" },
];

export const familyBackgrounds = [
  { id: "1", title: "উচ্চবিত্ত" },
  { id: "2", title: "উচ্চ মধ্যবিত্ত" },
  { id: "3", title: "মধ্যবিত্ত" },
  { id: "4", title: "নিম্ন মধ্যবিত্ত" },
  { id: "5", title: "নিম্নবিত্ত" },
];

export const familyTypes = [
  { id: "1", title: "একক পরিবার" },
  { id: "2", title: "যৌথ পরিবার" },
];

export const siblingTypes = [
  { id: "1", title: "ভাই" },
  { id: "2", title: "বোন" },
];

export const religiousIdeologies = [
  { id: "1", title: "সুন্নি" },
  { id: "2", title: "শিয়া" },
  { id: "3", title: "অন্যান্য" },
  { id: "4", title: "জানা নেই" },
];

export const madhhabs = [
  { id: "1", title: "হানাফি" },
  { id: "2", title: "সালাফি/আহলে হাদিস" },
  { id: "3", title: "মালিকী" },
  { id: "4", title: "হাম্বলি" },
  { id: "5", title: "অন্যান্য" },
  { id: "6", title: "জানা নেই" },
];

export const religiousEducationQualities = [
  { id: "1", title: "হাফেজা" },
  { id: "2", title: "আলেমা" },
  { id: "3", title: "ক্বারিয়া" },
  { id: "4", title: "দাঈয়া" },
  { id: "5", title: "মুফতিয়া" },
  { id: "6", title: "মুহাদ্দিসা" },
  { id: "7", title: "তালিবে কুরআন" },
  { id: "8", title: "ততাজবীদ শিক্ষার্থী" },
  { id: "9", title: "মুয়াল্লিমুন ফি তালিম" },
  { id: "10", title: "ইসলামিক স্কলার" },
];

export const characteristics = [
  { id: "1", title: "ইন্ট্রোভার্ট" },
  { id: "2", title: "এক্সট্রোভার্ট" },
  { id: "3", title: "সাংসারিক" },
  { id: "4", title: "মিশুক" },
  { id: "5", title: "শান্ত-শিষ্ট" },
  { id: "6", title: "ধৈর্যশীল" },
  { id: "7", title: "ভালবাসাপ্রবণ" },
  { id: "8", title: "সাপোর্টিভ" },
  { id: "9", title: "সচেতন" },
  { id: "10", title: "ইমোশনাল" },
  { id: "11", title: "দয়ালু" },
  { id: "12", title: "দানশীল" },
  { id: "13", title: "সংস্কৃতিমনা" },
  { id: "14", title: "ধার্মিক" },
  { id: "15", title: "যত্নশীল" },
  { id: "16", title: "দায়িত্ববান" },
  { id: "17", title: "প্রতিবাদী" },
  { id: "18", title: "রাগী" },
  { id: "19", title: "অস্থির" },
  { id: "20", title: "একগুঁয়ে" },
  { id: "21", title: "খুঁতখুঁতে" },
];

export const specialCatagories = [
  { id: "1", title: "আমি একজন সমাজ সেবক", for: ["1", "2"] },
  { id: "2", title: "আমি দ্বীনের খেদমতে আছি", for: ["1", "2"] },
  { id: "3", title: "আমি একজন নওমুসলিম", for: ["1", "2"] },
  { id: "4", title: "আমি প্রতিবন্ধী", for: ["1", "2"] },
  { id: "5", title: "আমি এতিম", for: ["1", "2"] },
  { id: "6", title: "আমি বন্ধ্যাত্ব সমস্যায় ভুগছি", for: ["1", "2"] },
  { id: "7", title: "আমি শর্ট ডিভোর্সি", for: ["1", "2"] },
  {
    id: "8",
    title: "আমি স্বল্প উচ্চতার মানুষ আলহামদুলিল্লাহ",
    for: ["1", "2"],
  },
  { id: "9", title: "আমি শহরে বসবাসকারী", for: ["1", "2"] },
  { id: "10", title: "আমি গ্রামে বসবাসকারী", for: ["1", "2"] },
  { id: "11", title: "আআমি তাবলীগ এর সাথে যুক্ত", for: ["1"] },
  {
    id: "12",
    title: "আমি সিঙ্গেল ফাদার-সন্তান আছে কিন্তু মা নেই বা দায়িত্বে নেই",
    for: ["1"],
  },
  {
    id: "13",
    title: "আমি সিঙ্গেল মাদার-সন্তান আছে কিন্তু বাবা নেই বা দায়িত্বে নেই",
    for: ["2"],
  },
];

export const spouseSpecialCatagories = [
  { id: "1", title: "সমাজ সেবক", for: ["1", "2"] },
  { id: "2", title: "নওমুসলিম", for: ["1", "2"] },
  { id: "3", title: "প্রবাসী", for: ["1", "2"] },
  { id: "4", title: "ফরেইন সিটিজেন", for: ["1", "2"] },
  { id: "5", title: "শিক্ষার্থী", for: ["1", "2"] },
  { id: "6", title: "চাকরির সন্ধানে আছে", for: ["1", "2"] },
  { id: "7", title: "চাকরিজীবী", for: ["1", "2"] },
  { id: "8", title: "প্রতিবন্ধী", for: ["1", "2"] },
  { id: "9", title: "এতিম", for: ["1", "2"] },
  { id: "10", title: "বন্ধ্যা/ইনফার্টিলিটি", for: ["1", "2"] },
  { id: "11", title: "শর্ট ডিভোর্সড", for: ["1", "2"] },
  { id: "12", title: "সিঙ্গেল মাদার", for: ["1"] },
  { id: "13", title: "সিঙ্গেল ফাদার", for: ["2"] },
  { id: "14", title: "স্বল্প উচ্চতার মানুষ", for: ["1", "2"] },
  { id: "15", title: "তাবলীগ", for: ["2"] },
];

export const afterMarriageStuties = [
  { id: "1", title: "না, আমি একদমই চাই না", for: ["1"] },
  { id: "2", title: "হ্যা, অবশ্যই করতে পারবে", for: ["1"] },
  { id: "3", title: "ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে", for: ["1"] },
  { id: "4", title: "পরিপূর্ণ পর্দা মেনে করতে পারলে ঠিক আছে", for: ["1"] },
  { id: "5", title: "না, একদমই ইচ্ছা নেই", for: ["2"] },
  { id: "6", title: "হ্যা, অবশ্যই করতে চাই", for: ["2"] },
  { id: "7", title: "হ্যা, করতে ইচ্ছুক (আলোচনা/অনুমতি সাপেক্ষে)", for: ["2"] },
];

export const afterMarriageJobs = [
  { id: "1", title: "না, আমি একদমই চাই না", for: ["1"] },
  { id: "2", title: "হ্যা, অবশ্যই করতে পারবে", for: ["1"] },
  { id: "3", title: "ইচ্ছা নাই, তবে করতে চাইলে করতে পারবে", for: ["1"] },
  { id: "4", title: "পরিপূর্ণ পর্দা মেনে করতে পারলে ঠিক আছে", for: ["1"] },
  { id: "5", title: "বাসায় থেকে কিছু করতে চাইলে করবে", for: ["1"] },
  { id: "6", title: "খুব প্রয়োজন হলে বিবেচনা করা হবে", for: ["1"] },
  {
    id: "7",
    title: "সমাজসেবা/দ্বীনের খেদমত করতে চাইলে করতে পারবে",
    for: ["1"],
  },
  { id: "8", title: "না, একদমই ইচ্ছা নেই", for: ["2"] },
  { id: "9", title: "চাকরি করতে ইচ্ছুক (আলোচনা/অনুমতি সাপেক্ষে)", for: ["2"] },
  {
    id: "10",
    title: "ব্যবসা করতে ইচ্ছুক (আলোচনা/অনুমতি সাপেক্ষে)",
    for: ["2"],
  },
  { id: "11", title: "ঘরে বসে/অনলাইনে কিছু করতে ইচ্ছুক", for: ["2"] },
  {
    id: "12",
    title: "সমাজসেবা/দ্বীনের খেদমত করতে ইচ্ছুক (অনলাইনে/অফলাইনে)",
    for: ["2"],
  },
];

export const spouseLocationOptions = [
  { id: "1", title: "শহরে বসবাসকারী" },
  { id: "2", title: "গ্রামে বসবাসকারী" },
  { id: "3", title: "উভয়ই" },
];

export const secondMarriageOptions = [
  { id: "1", title: "হ্যা" },
  { id: "2", title: "না" },
];


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\lib\provider\RootProvider.tsx
// --------------------
"use client";
import { persistor, store } from "@/redux/store";
import dynamic from "next/dynamic";
import { useEffect, useState } from "react";
import { Provider } from "react-redux";
import { PersistGate } from "redux-persist/integration/react";

// Dynamically import PersistGate to reduce initial bundle size
const DynamicPersistGate = dynamic(() => Promise.resolve(PersistGate), {
  ssr: false,
});

const RootProvider = ({ children }: { children: React.ReactNode }) => {
  const [isClient, setIsClient] = useState(false);

  useEffect(() => {
    setIsClient(true);
  }, []);

  if (!isClient) {
    return <Provider store={store}>{children}</Provider>;
  }

  return (
    <Provider store={store}>
      <DynamicPersistGate loading={null} persistor={persistor}>
        {children}
      </DynamicPersistGate>
    </Provider>
  );
};

export default RootProvider;


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\lib\types.ts
// --------------------
import { BiodataFormStep } from "@/app/(main)/biodata-editor/steps";
import { z } from "zod";
import {
  addressInfoFormData,
  biodataFormData,
  educationInfoFormData,
  familyInfoFormData,
  finalWordsFormData,
  firstWordsFormData,
  generalInfoFormData,
  marriageInfoFormData,
  occupationInfoFormData,
  personalInfoFormData,
  primaryInfoFormData,
  profilePicFormData,
  religiousInfoFormData,
  spousePreferenceInfoFormData,
} from "./validations";

export type FirstWordsFormData = z.infer<typeof firstWordsFormData>;
export type PrimaryInfoFormData = z.infer<typeof primaryInfoFormData>;
export type GeneralInfoFormData = z.infer<typeof generalInfoFormData>;
export type AddressInfoFormData = z.infer<typeof addressInfoFormData>;
export type EducationInfoFormData = z.infer<typeof educationInfoFormData>;
export type OccupationInfoFormData = z.infer<typeof occupationInfoFormData>;
export type FamilyInfoFormData = z.infer<typeof familyInfoFormData>;
export type ReligiousInfoFormData = z.infer<typeof religiousInfoFormData>;
export type PersonalInfoFormData = z.infer<typeof personalInfoFormData>;
export type MarriageInfoFormData = z.infer<typeof marriageInfoFormData>;
export type SpousePreferenceInfoFormData = z.infer<
  typeof spousePreferenceInfoFormData
>;
export type ProfilePicFormData = z.infer<typeof profilePicFormData>;
export type FinalWordsFormData = z.infer<typeof finalWordsFormData>;

export type BiodataFormData = z.infer<typeof biodataFormData>;

export interface BiodataFormDataProps {
  biodataFormData: BiodataFormData;
  setBiodataFormData: (data: BiodataFormData) => void;
  handleSave: () => void;
  currentStep: BiodataFormStep;
  setCurrentStep: (key: string) => void;
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\lib\utils.ts
// --------------------
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\lib\validations.ts
// --------------------
import { boolean, z } from "zod";
import { maritalStatuses } from "./consts";

export const optionalString = z.string().trim().optional().or(z.literal(""));
export const requiredString = z.string().trim();

export const firstWordsFormData = z.object({
  preApprovalAcceptTerms: z.boolean().refine((val) => val === true, {
    message: "আপনাকে শর্তসমূহ মেনে নিতে হবে।",
  }),
  preApprovalOathTruthfulInfo: z.boolean().refine((val) => val === true, {
    message: "আপনাকে সত্য তথ্য প্রদান করার শপথ করতে হবে।",
  }),
  preApprovalOathLegalResponsibility: z
    .boolean()
    .refine((val) => val === true, {
      message: "আপনাকে সকল আইনী ও পরকালীন দায়ভার স্বীকার করতে হবে।",
    }),
});

export const primaryInfoFormData = z.object({
  biodataType: requiredString.min(1, {
    message: "বায়োডাটা ধরন নির্বাচন করা আবশ্যক।",
  }),
  biodataFor: requiredString.min(1, {
    message: "বায়োডাটা কার জন্য তৈরি করা হচ্ছে তা নির্বাচন করুন।",
  }),
  fullName: requiredString.min(1, {
    message: "পূর্ণ নাম অবশ্যই প্রদান করতে হবে।",
  }),
  fatherName: requiredString.min(1, {
    message: "পিতার নাম অবশ্যই প্রদান করতে হবে।",
  }),
  motherName: requiredString.min(1, {
    message: "মাতার ধরন নির্বাচন করা আবশ্যক।",
  }),
  email: requiredString.min(1, {
    message: "ইমেইল প্রদান করা আবশ্যক।",
  }),
  phoneNumber: requiredString.min(1, {
    message: "মোবাইল নম্বর প্রদান করা আবশ্যক।",
  }),
  guardianContacts: z
    .array(
      z.object({
        relation: requiredString.min(1, {
          message: "অভিভাবকের সম্পর্ক প্রদান করা আবশ্যক।",
        }),
        fullName: requiredString.min(1, {
          message: "অভিভাবকের নাম প্রদান করা আবশ্যক।",
        }),
        phoneNumber: requiredString.min(1, {
          message: "অভিভাবকের মোবাইল নম্বর প্রদান করা আবশ্যক।",
        }),
      })
    )
    .min(2, { message: "কমপক্ষে ২ জন অভিভাবকের তথ্য প্রয়োজন।" }),
});

export const generalInfoFormData = z.object({
  dateOfBirth: requiredString.min(1, {
    message: "জন্ম তারিখ প্রদান করা আবশ্যক।",
  }),
  maritalStatus: requiredString.min(1, {
    message: "বৈবাহিক অবস্থা নির্বাচন করা আবশ্যক।",
  }),
  skinTone: requiredString.min(1, {
    message: "গায়ের রং প্রদান করা আবশ্যক।",
  }),
  height: requiredString.min(1, {
    message: "উচ্চতা প্রদান করা আবশ্যক।",
  }),
  weight: requiredString.min(1, {
    message: "ওজন প্রদান করা আবশ্যক।",
  }),
  bloodGroup: requiredString.min(1, {
    message: "রক্তের গ্রুপ নির্বাচন করা আবশ্যক।",
  }),
  nationality: requiredString.min(1, {
    message: "জাতীয়তা প্রদান করা আবশ্যক।",
  }),
});

export const addressInfoFormData = z.object({
  addresses: z.array(
    z
      .object({
        type: requiredString.min(1, {
          message: "ঠিকানার ধরন প্রদান করা আবশ্যক।",
        }),
        location: requiredString.min(1, {
          message: "ঠিকানার অবস্থান প্রদান করা আবশ্যক।",
        }),
        // জেলা / স্টেট
        state: requiredString.min(1, {
          message: "নির্বাচন করা আবশ্যক।",
        }),
        // উপজেলা / শহর
        city: requiredString.min(1, {
          message: "নির্বাচন করা আবশ্যক।",
        }),
        detail: requiredString.min(1, {
          message: "ঠিকানার বিস্তারিত প্রদান করা আবশ্যক।",
        }),

        // বিদেশি ঠিকানা
        country: optionalString,
        cityzenshipStatus: optionalString,
      })
      .superRefine((data, ctx) => {
        if (data.type === "foregin" && !data.country) {
          if (!data.country) {
            ctx.addIssue({
              code: z.ZodIssueCode.custom,
              message: "দেশের নাম প্রদান করা আবশ্যক।",
              path: ["country"],
            });
          }
          if (!data.cityzenshipStatus) {
            ctx.addIssue({
              code: z.ZodIssueCode.custom,
              message: "নাগরিকত্বের অবস্থা প্রদান করা আবশ্যক।",
              path: ["cityzenshipStatus"],
            });
          }
        }
      })
  ),
});

export const educationInfoFormData = z.object({
  type: requiredString.min(1, {
    message: "শিক্ষার ধরন প্রদান করা আবশ্যক।",
  }),
  highestDegree: requiredString.min(1, {
    message: "সর্বোচ্চ শিক্ষাগত যোগ্যতা নির্বাচন করা আবশ্যক।",
  }),
  degrees: z.array(
    z.object({
      name: requiredString.min(1, {
        message: "ডিগ্রির নাম প্রদান করা আবশ্যক।",
      }),
      passYear: requiredString.min(1, {
        message: "পাসের বছর প্রদান করা আবশ্যক।",
      }),
      group: requiredString.min(1, {
        message: "শ্রেণী/বিভাগ নির্বাচন করা আবশ্যক।",
      }),
      institute: requiredString.min(1, {
        message: "শিক্ষাপ্রতিষ্ঠানের নাম প্রদান করা আবশ্যক।",
      }),
    })
  ),
  religiousEducation: z.array(optionalString).optional(),
  detail: requiredString.min(1, {
    message: "শিক্ষার বিস্তারিত তথ্য প্রদান করা আবশ্যক।",
  }),
});

export const occupationInfoFormData = z.object({
  occupations: z.array(optionalString).min(1, {
    message: "পেশার ধরন প্রদান করা আবশ্যক।",
  }),
  detail: requiredString.min(1, {
    message: "পেশার বিস্তারিত তথ্য প্রদান করা আবশ্যক।",
  }),
  monthlyIncome: requiredString.min(1, {
    message: "মাসিক আয় প্রদান করা আবশ্যক।",
  }),
});

export const familyInfoFormData = z.object({
  parentsAlive: requiredString.min(1, {
    message: "পিতা-মাতার জীবিত থাকার অবস্থা নির্বাচন করুন।",
  }),
  fatherOccupation: requiredString.min(1, {
    message: "পিতার পেশা উল্লেখ করুন।",
  }),
  motherOccupation: requiredString.min(1, {
    message: "মাতার পেশা উল্লেখ করুন।",
  }),
  siblings: z.array(
    z.object({
      type: requiredString.min(1, {
        message: "ভাই বা বোনের ধরন নির্বাচন করুন।",
      }),
      occupation: requiredString.min(1, {
        message: "ভাই বা বোনের পেশা উল্লেখ করুন।",
      }),
      maritalStatus: requiredString.min(1, {
        message: "ভাই বা বোনের বৈবাহিক অবস্থা নির্বাচন করুন।",
      }),
      children: requiredString.min(1, {
        message: "সন্তানের সংখ্যা উল্লেখ করুন।",
      }),
    })
  ),
  fatherSideDetail: requiredString.min(1, {
    message: "পিতার পরিবারের বিস্তারিত তথ্য প্রদান করুন।",
  }),
  motherSideDetail: requiredString.min(1, {
    message: "মাতার পরিবারের বিস্তারিত তথ্য প্রদান করুন।",
  }),
  familyType: requiredString.min(1, {
    message: "পরিবারের ধরন নির্বাচন করুন।",
  }),
  familyBackground: requiredString.min(1, {
    message: "পরিবারের সামাজিক ও সাংস্কৃতিক পটভূমি উল্লেখ করুন।",
  }),
  livingCondition: requiredString.min(1, {
    message: "পরিবারের বসবাসের পরিবেশ সম্পর্কে উল্লেখ করুন।",
  }),
  wealthDescription: requiredString.min(1, {
    message: "পরিবারের আর্থিক অবস্থা সম্পর্কে সংক্ষিপ্ত বিবরণ দিন।",
  }),
});

export const religiousInfoFormData = z.object({
  type: requiredString.min(1, {
    message: "পেশার ধরন প্রদান করা আবশ্যক।",
  }),
  ideology: requiredString.min(1, {
    message: "ধর্মীয় কোন মতাদর্শ মেনে চলেন তা প্রদান করা আবশ্যক।",
  }),
  madhab: requiredString.min(1, {
    message: "কোন মাজহাব / মানহাজ অনুসরণ করেন তা নির্বাচন করা আবশ্যক।",
  }),
  praysFiveTimes: requiredString.min(1, {
    message: "প্রতিদিন পাঁচ ওয়াক্ত নামাজ পড়া হয় কিনা তা নির্বাচন করা আবশ্যক।",
  }),
  hasQazaPrayers: requiredString.min(1, {
    message: "আপনার কি নামাজ কাযা হয় তা নির্বাচন করা আবশ্যক।",
  }),
  canReciteQuranProperly: requiredString.min(1, {
    message: "শুদ্ধভাবে কুরআন তেলাওয়াত করতে পারেন কিনা তা নির্বাচন করা আবশ্যক।",
  }),
  avoidsHaramIncome: requiredString.min(1, {
    message:
      "হারাম উপার্জন বা সুদ-ঘুষ থেকে বিরত আছেন কিনা তা নির্বাচন করা আবশ্যক।",
  }),
  modestDressing: requiredString.min(1, {
    message: "আপনার পোশাকধারণ কেমন তা নির্বাচন করা আবশ্যক।",
  }),
  followsMahramRules: requiredString.min(1, {
    message: "মাহরাম/গাইরে-মাহরাম মেনে চলেন কিনা তা নির্বাচন করা আবশ্যক।",
  }),
  beliefAboutPirMurshidAndMazar: requiredString.min(1, {
    message:
      "পীর-মুরিদ ও মাজার সম্পর্কে আপনার ধারণা বা বিশ্বাস প্রদান করা আবশ্যক।",
  }),
  practicingSince: requiredString.min(1, {
    message:
      "কত সাল/সময় থেকে পরিপূর্ণভাবে দ্বীনের পথে চলা শুরু করেছেন তা প্রদান করা আবশ্যক।",
  }),
});

export const personalInfoFormData = z.object({
  beardStatus: requiredString.min(1, {
    message: "দয়া করে দাড়ি রাখার ব্যাপারে আপনার অবস্থান উল্লেখ করুন।",
  }),
  preferredOutfit: requiredString.min(1, {
    message: "আপনার বাহিরে পরার পছন্দের পোশাক নির্বাচন করুন।",
  }),
  entertainmentPreferences: requiredString.min(1, {
    message: "দয়া করে আপনি কোন ধরণের বিনোদন উপভোগ করেন তা উল্লেখ করুন।",
  }),
  healthConditions: requiredString.min(1, {
    message: "আপনার যদি কোনো মানসিক বা শারীরিক সমস্যা থাকে, তা উল্লেখ করুন।",
  }),
  personalTraits: z.array(optionalString).min(1, {
    message: "আপনার ব্যক্তিগত কিছু গুণাবলী উল্লেখ করুন।",
  }),
  genderEqualityView: requiredString.min(1, {
    message: "নারী-পুরুষ সমঅধিকারের বিষয়ে আপনার মতামত প্রদান করুন।",
  }),
  lgbtqOpinion: requiredString.min(1, {
    message: "LGBTQ সম্পর্কিত আপনার ধারণা বা মতামত লিখুন।",
  }),
  specialConditions: z.array(optionalString).min(1, {
    message: "আপনার ক্ষেত্রে প্রযোজ্য বিশেষ কোনো অবস্থা থাকলে তা উল্লেখ করুন।",
  }),
});

export const marriageInfoFormData = z.object({
  guardianApproval: requiredString.min(1, {
    message: "অভিভাবক আপনার বিয়েতে রাজি আছেন কিনা নির্বাচন করুন।",
  }),
  continueStudy: requiredString.min(1, {
    message: "বিয়ের পর আপনি পড়াশোনা চালিয়ে যেতে চান কিনা নির্বাচন করুন।",
  }),
  careerPlan: requiredString.min(1, {
    message: "বিয়ের পর আপনি চাকরি বা ব্যবসা করতে চান কিনা নির্বাচন করুন।",
  }),
  residence: requiredString.min(1, {
    message: "বিয়ের পর আপনি কোথায় থাকবেন তা উল্লেখ করুন।",
  }),
  arrangeHijab: requiredString.min(1, {
    message:
      "স্ত্রী পর্দা করতে চাইলে আপনি ব্যবস্থা রাখতে পারবেন কিনা নির্বাচন করুন।",
  }),
  dowryExpectation: requiredString.min(1, {
    message:
      "আপনার পরিবার পাত্রীপক্ষের কাছে যৌতুক বা উপহার আশা করে কিনা নির্বাচন করুন।",
  }),
  allowShowingPhotoOnline: requiredString.min(1, {
    message: "অনলাইনে আপনার ছবি দেখতে চাইলে দেখাতে রাজি কিনা নির্বাচন করুন।",
  }),
  additionalMarriageInfo: optionalString,
});

export const spousePreferenceInfoFormData = z.object({
  age: requiredString.min(1, {
    message: "বয়স প্রদান করা আবশ্যক।",
  }),
  skinTone: z.array(optionalString).optional(),
  height: requiredString.min(1, {
    message: "উচ্চতা প্রদান করা আবশ্যক।",
  }),
  educationalQualification: requiredString.min(1, {
    message: "শিক্ষাগত যোগ্যতা নির্বাচন করা আবশ্যক।",
  }),
  religiousEducationalQualification: z.array(optionalString).optional(),
  address: optionalString,
  maritalStatus: z.array(optionalString).optional(),
  specialCategory: z.array(optionalString).optional(),
  religiousType: z.array(optionalString).optional(),
  occupation: z.array(optionalString).optional(),
  familyBackground: z.array(optionalString).optional(),
  secondMarrige: requiredString.min(1, {
    message: "দ্বিতীয় বিয়ে সম্পর্কে নির্বাচন করা আবশ্যক।",
  }),
  location: requiredString.min(1, {
    message: "অবস্থান নির্বাচন করা আবশ্যক।",
  }),
  qualities: requiredString.min(1, {
    message: "জীবনসঙ্গীর বৈশিষ্ট্য বা গুণাবলী প্রদান করা আবশ্যক।",
  }),
});

export const profilePicFormData = z.object({
  photoId: requiredString.min(1, {
    message: "প্রোফাইল ছবি প্রদান করা আবশ্যক।",
  }),
});

export const finalWordsFormData = z.object({
  postApprovalOathTruthfulInfo: z.boolean().refine((val) => val === true, {
    message: "আপনাকে বায়োডাটায় সকল তথ্য সত্য প্রদান করার শপথ করতে হবে।",
  }),
  postApprovalOathNoMisuse: z.boolean().refine((val) => val === true, {
    message:
      "আপনাকে সহজনিকাহ ম্যাট্রিমনি ওয়েবসাইটের কোনো তথ্য অসৎ কাজে ব্যবহার না করার শপথ করতে হবে।",
  }),
  postApprovalOathLegalResponsibility: z
    .boolean()
    .refine((val) => val === true, {
      message:
        "আপনাকে কোনো মিথ্যা তথ্য প্রদান করলে বা কোনো তথ্য অসৎ কাজে ব্যবহার করলে সকল আইনী এবং পরকালীন দায়ভার স্বীকার করতে হবে।",
    }),
});

export const biodataFormData = z.object({
  firstWordsFormData: firstWordsFormData,
  primaryInfoFormData: primaryInfoFormData,
  generalInfoFormData: generalInfoFormData,
  addressInfoFormData: addressInfoFormData,
  educationInfoFormData: educationInfoFormData,
  occupationInfoFormData: occupationInfoFormData,
  familyInfoFormData: familyInfoFormData,
  religiousInfoFormData: religiousInfoFormData,
  personalInfoFormData: personalInfoFormData,
  marriageInfoFormData: marriageInfoFormData,
  spousePreferenceInfoFormData: spousePreferenceInfoFormData,
  profilePicFormData: profilePicFormData,
  finalWordsFormData: finalWordsFormData,
});


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\helpers\axios\axiosBaseQuery.ts
// --------------------
/* eslint-disable @typescript-eslint/no-unused-vars */
import { IMeta } from "@/types";
import type { BaseQueryFn } from "@reduxjs/toolkit/query";
import type { AxiosError, AxiosRequestConfig } from "axios";
import { instance as axiosInstance } from "./axiosInstance";

export const axiosBaseQuery =
  (
    { baseUrl }: { baseUrl: string } = { baseUrl: "" }
  ): BaseQueryFn<
    {
      url: string;
      method?: AxiosRequestConfig["method"];
      data?: AxiosRequestConfig["data"];
      params?: AxiosRequestConfig["params"];
      headers?: AxiosRequestConfig["headers"];
      meta?: IMeta;
      contentType?: string;
    },
    unknown,
    unknown
  > =>
  async ({ url, method, data, params, contentType }) => {
    // console.log({ baseUrl, url, method, data, params, headers, contentType });
    try {
      const result = await axiosInstance({
        url: baseUrl + url,
        method,
        data,
        params,
        headers: {
          "Content-Type": contentType || "application/json",
        },
      });
      // console.log(result);
      return result;
      // return { data: result.data };
    } catch (axiosError) {
      const err = axiosError as AxiosError;
      console.log(err);
      return {
        error: {
          status: err.response?.status || err.status || 500,
          message: err.response?.data || err.message || "Something went wrong!",
        },
      };
    }
  };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\helpers\axios\axiosInstance.ts
// --------------------
import { authAccessKey } from "@/constant/authkey";
import { IGenericErrorResponse } from "@/types";
import { getCookie } from "@/utils/cookieHelper";
import axios from "axios";
import Swal from "sweetalert2";

const instance = axios.create({
  baseURL: `${process.env.NEXT_PUBLIC_SERVER_URL}`,
  headers: {
    "Content-Type": "application/json",
    Accept: "application/json",
  },
  timeout: 60000,
});

// Request Interceptor
instance.interceptors.request.use(
  function (config) {
    const accessToken = getCookie(authAccessKey);

    if (accessToken) {
      config.headers.Authorization = `${accessToken}`;
    }
    return config;
  },
  function (error) {
    return Promise.reject(error);
  }
);

// Response Interceptor
instance.interceptors.response.use(
  function (response) {
    response.data = {
      success: response?.data?.success,
      statusCode: response?.data?.statusCode,
      message: response?.data?.message,
      data: response?.data?.data,
      meta: response?.data?.meta,
    };
    return response;
  },
  function (error) {
    // Handle Unauthorized (401) or Forbidden (403)
    if (error?.response?.status === 401 || error?.response?.status === 403) {
      Swal.fire({
        title: "Access Denied!",
        text: error?.response?.data?.message || "UnAuthorized Access.",
        icon: "error",
        timer: 1500,
      });
      window.location.href = "/login"; // Redirect to login
      return Promise.reject("Unauthorized. Redirecting to login.");
    }

    // General Error Handling
    const responseObject: IGenericErrorResponse = {
      statusCode: error?.response?.data?.statusCode || 500,
      message: error?.response?.data?.message || "Something went wrong!",
      errorMessages: error?.response?.data?.errorMessages || [],
    };
    return Promise.reject(responseObject);
  }
);

export { instance };


// --------------------
// File: D:\Projects-CLIENTS\SohojNikah\sohoznikah-app\src\hooks\use-mobile.ts
// --------------------
import * as React from "react"

const MOBILE_BREAKPOINT = 768

export function useIsMobile() {
  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)

  React.useEffect(() => {
    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)
    const onChange = () => {
      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    }
    mql.addEventListener("change", onChange)
    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)
    return () => mql.removeEventListener("change", onChange)
  }, [])

  return !!isMobile
}


